<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>无需云存档，巫师3存档 Switch 版与 PC 版互转</title>
      <link href="/Witcher3-Saves-Switch-to-PC/"/>
      <url>/Witcher3-Saves-Switch-to-PC/</url>
      
        <content type="html"><![CDATA[<h2 id="一、Switch-版巫师3存档转移至-PC"><a href="#一、Switch-版巫师3存档转移至-PC" class="headerlink" title="一、Switch 版巫师3存档转移至 PC"></a>一、Switch 版巫师3存档转移至 PC</h2><ol><li><p>下载所需的软件：<code>offzip</code> 和 <code>WinHex</code></p><blockquote><p>下载offzip时建议使用浏览器的查找功能（Ctrl+F）快速定位位置</p></blockquote><a class="btn-anzhiyu larger" href="https://aluigi.altervista.org/mytoolz.htm"   title="下载offzip"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>下载offzip</span></a><a class="btn-anzhiyu larger" href="https://www.423down.com/995.html"   title="下载WinHex"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>下载WinHex</span></a></li><li><p>启动 Switch 版巫师3，手动保存一个存档。因为autosave自动存档与checkpoint检查点存档不能转移，仅manualsave手动存档可用。</p></li><li><p>拷贝 Switch 版巫师3存档到 PC</p><p>使用 <code>DBI</code> 的 MTP 模式连接 PC，将盘符 <code>7: Saves</code>&#x2F;The Witcher 3 Wild Hunt&#x2F;Username&#x2F; 文件夹下的手动存档文件拷贝至 PC，参考文件如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">|-- Manual.114d9f.7e941000.42bec00.sav     #需要拷贝</span><br><span class="line">|-- Manual.114d9f.7e941000.42bec00.png     #需要拷贝，可用于定位目标存档</span><br><span class="line">|-- Manual.114d9f.7e941000.42bec00.req     #无需拷贝</span><br></pre></td></tr></table></figure></li><li><p>在终端运行以下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">offzip.exe -a &lt;input&gt; &lt;output&gt; 0</span><br></pre></td></tr></table></figure><p>如果运行成功，会在指定的输出文件夹产生一个 <code>0000000c.snf</code> 文件。</p></li><li><p>打开 WinHex，文件 - 打开，选择刚刚的 <code>0000000c.snf</code> 文件</p></li><li><p>导航 - 转到偏移量，输入 <code>c16</code>，确认</p><blockquote><p>若winhex软件的偏移量变成十进制，需要定位3094位置</p></blockquote></li><li><p>将偏移量所在位置的 <code>1B</code> 改为 <code>12</code>，文件 - 保存</p></li><li><p>将修改后的 <code>0000000c.snf</code> 改名为 <code>Manual.114d9f.7e941000.42bec00.sav</code></p></li><li><p>将存档文件名改为 PC 存档的形式，例如： <code>Manual.114d9f.7e941000.42bec00.sav</code> 改为 <code>ManualSave_100056_7e65bc00_4ec29e9.sav</code>；<code>Manual.114d9f.7e941000.42bec00.png</code> 改为 <code>ManualSave_100056_7e65bc00_4ec29e9.png</code></p></li><li><p>将改名后的文件移动至游戏存档目录 <code>C:\Users\UserName\Documents\The Witcher 3\gamesaves\</code></p></li><li><p>启动 Steam，读取刚刚的手动存档，玩一下再保存存档，退出游戏，等待 Steam 云存档同步完成。</p></li></ol><br/><hr><h2 id="二、PC-版巫师3存档转移至-Switch"><a href="#二、PC-版巫师3存档转移至-Switch" class="headerlink" title="二、PC 版巫师3存档转移至 Switch"></a>二、PC 版巫师3存档转移至 Switch</h2><p>直接将 PC 存档拖入 Switch 存档目录即可。</p><br/><hr><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>Bilibili@天竺山那年夏天：<a href="https://www.bilibili.com/video/BV1fe4y1s7Ld/">switch巫师三不用云存档将存档转移到pc巫师三使用</a></p><p>GBATEMP@that_boy： <a href="https://gbatemp.net/threads/the-witcher-3-wild-hunt-general-hacking-v2-0.555695/page-7#post-9402083/">a way to transfer saves from Switch to PC without cloud saves!</a></p>]]></content>
      
      
      <categories>
          
          <category> Games </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 折腾 </tag>
            
            <tag> 游戏 </tag>
            
            <tag> Windows </tag>
            
            <tag> 破解 </tag>
            
            <tag> Switch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>魅族 Pro6 Plus 获取完整 Root 权限</title>
      <link href="/Meizu-Pro6Plus-Root/"/>
      <url>/Meizu-Pro6Plus-Root/</url>
      
        <content type="html"><![CDATA[<p>偶然发现吃灰多年的 Pro6 Plus 仍有很大的利用价值：“外星科技”耳机孔，HiFi 功能，3D Press，内置心率传感器的 mBack - mTouch……尤其是一块5.7英寸 2K 分辨率大屏，便想要将它作为我的游戏串流机使用。回顾一下 Pro6 Plus 的硬件规格：</p><ul><li><p>Samsung Exynos 8890 处理器</p><ul><li>Exynos M1 2.0GHz x4 + ARM® Cortex®-A53™ 1.5GHz x4</li><li>ARM Mali-T880 MP10 GPU</li></ul></li><li><p>5.7 英寸 2K Super AMOLED 屏幕</p><ul><li>对比度 10000:1</li><li>518 PPI</li><li>亮度 430cd&#x2F;m² (typical value)</li></ul></li><li><p>4GB LPDDR4 RAM</p></li><li><p>64GB UFS2.0 ROM</p></li><li><p>ESS ES9018K2M HiFi 解码芯片</p></li></ul><p>完整的硬件参数详见 <a href="https://www.meizu.com/en/products/pro6plus/spec.html">Meizu 官网</a></p><p>然而，这毕竟是一款已经多年的手机，魅族的系统优化再好也没什么好办法。而且因为是三星平台的原因，没有办法解开 Bootloader 来输入别的系统，那就只能获取完整 Root 权限，卸载掉无用的系统软件，好好 <del>折腾</del> 优化一下。</p><br/><hr><h2 id="Pro6-Plus-获取完整-Root"><a href="#Pro6-Plus-获取完整-Root" class="headerlink" title="Pro6 Plus 获取完整 Root"></a>Pro6 Plus 获取完整 Root</h2><h3 id="一、降级-Flyme-系统"><a href="#一、降级-Flyme-系统" class="headerlink" title="一、降级 Flyme 系统"></a>一、降级 Flyme 系统</h3><p>最新版本的 Flyme 8.0.5.0A 加入了太多的广告，而且 Android 版本仍是 7.0，于是我就想降回 Flyme7。降级方法如下：</p><ol><li><p>下载系统卡刷包：</p><a class="btn-anzhiyu larger" href="https://xdaforums.com/f/meizu-pro-6-plus-guides-news-discussion.6032/"   title="XDA论坛 - Meizu Pro 6 Plus"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>XDA论坛 - Meizu Pro 6 Plus</span></a><p>选择想要刷机的包，我选择的<a href="https://xdaforums.com/t/flyme-7-3-0-0a-stable-big-update-rom.3935210/">Flyme 7.3.0.0A [Stable] Big Update</a>，发布于 May 30 2019。这是 Flyme8 之前的最后一个版本。</p></li><li><p>将下载好的刷机包命名为 <code>update.zip</code>，放置在手机根目录</p></li><li><p>在文件管理中点击 <code>update.zip</code>，一定要选择“清除应用数据”！</p></li><li><p>等待自动刷机完成</p></li></ol><h3 id="二、获取不完整-Root（官方-Root）"><a href="#二、获取不完整-Root（官方-Root）" class="headerlink" title="二、获取不完整 Root（官方 Root）"></a>二、获取不完整 Root（官方 Root）</h3><p>在获取完整 Root 之前，首先需要获取魅族官方提供的 Root（不完整 Root），方法如下：</p><ol><li>登录魅族账号</li><li>设置 - 指纹、面部和安全 - ROOT 权限，开启 Root 权限</li><li>自动重启手机</li></ol><h3 id="三、获取完整-Root"><a href="#三、获取完整-Root" class="headerlink" title="三、获取完整 Root"></a>三、获取完整 Root</h3><blockquote><p>Flyme7&#x2F;8 获取完整 Root 脚本作者为：酷安 @枫亭吴小豪</p><p>完整 Root 脚本分享来源：<a href="https://xdaforums.com/t/pro6-plus-flyme-7-3-completely-root.3925374/"> XDA 论坛 - PRO6 PLUS Flyme 7.3 completely ROOT</a></p><p>分享来源提供的下载链接：<a href="https://pan.baidu.com/s/139napinPQQ77GDaossKe7w">百度网盘（提取码：l65a）</a></p><p>多开鸭维护的 Xposed 框架 - <a href="https://www.duokaiya.com/xposed.html">XPosed鸭</a></p></blockquote><ol><li><p>下载所需的文件：</p><a class="btn-anzhiyu larger" href="https://cloud.189.cn/t/IrINr2fAZnua/"   title="天翼云盘（访问码：va7z）"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>天翼云盘（访问码：va7z）</span></a><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">|-- es-file-explorer-4-2-0-3.apk     #ES文件管理器老版本</span><br><span class="line">|-- Xposed.apk     #由多开鸭维护的Xposed框架</span><br><span class="line">|-- Root脚本 v1.8.zip     #酷安@枫亭吴小豪开发的Flyme7/8获取完整Root脚本</span><br><span class="line">| |-- 更新日志.txt  </span><br><span class="line">| |-- MT管理器.apk     #MT管理器v2.6.0</span><br><span class="line">| |-- libsupol.so</span><br><span class="line">| |-- Root脚本.sh </span><br><span class="line">| |-- su</span><br><span class="line">| |-- SU.apk     #SU超级权限v2.79</span><br><span class="line">| |-- supolicy</span><br></pre></td></tr></table></figure></li><li><p>解压 <code>Root脚本 v1.8.zip</code>，安装 <code>MT管理器</code>，给予 ROOT权限</p></li><li><p>使用 <code>MT管理器</code> 运行 <code>Root脚本.sh</code>，允许 ROOT权限。第一次若是卡在启动服务，可以退出软件重新运行即可</p></li><li><p>脚本运行成功会自动重启</p></li><li><p>重启后即出现SU超级权限管理器，获取完整 Root 成功</p></li></ol><h3 id="四、进一步折腾"><a href="#四、进一步折腾" class="headerlink" title="四、进一步折腾"></a>四、进一步折腾</h3><ol><li>安装ES文件管理器，点击左侧边栏 - 开启Root工具箱，即可卸载系统应用</li><li>安装 Xposed 框架 （新版 Magisk 已支持 Android 6.0 及以上，所以理论上也可以安装 Magisk ）</li></ol>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 折腾 </tag>
            
            <tag> Android </tag>
            
            <tag> Root </tag>
            
            <tag> Xposed </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>对 MacBook 的调整和优化</title>
      <link href="/MacBook-Adjustment-&amp;-Optimization/"/>
      <url>/MacBook-Adjustment-&amp;-Optimization/</url>
      
        <content type="html"><![CDATA[<h2 id="关闭开盖自动开机"><a href="#关闭开盖自动开机" class="headerlink" title="关闭开盖自动开机"></a>关闭开盖自动开机</h2><p>在“终端”输入命令：</p><ul><li><p>防止电脑在翻开屏幕盖或连接电源时启动：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nvram BootPreference=%00</span><br></pre></td></tr></table></figure></li><li><p>仅防止电脑在翻开屏幕盖时启动：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nvram BootPreference=%01</span><br></pre></td></tr></table></figure></li><li><p>仅防止电脑在连接电源时启动：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nvram BootPreference=%02</span><br></pre></td></tr></table></figure></li></ul><p>重新启用在翻开屏幕盖或连接电源时自动启动，在“终端”中运行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo nvram -d BootPreference</span><br></pre></td></tr></table></figure><br/><h2 id="查看硬盘寿命"><a href="#查看硬盘寿命" class="headerlink" title="查看硬盘寿命"></a>查看硬盘寿命</h2><ol><li><p>安装 Homebrew（macOS缺失的软件包的管理器），在“终端”运行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/bin/bash -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>通过 Homebrew安装 smartmontools 软件，在“终端”运行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install smartmontools</span><br></pre></td></tr></table></figure></li><li><p>运行查看硬盘寿命的命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">smartctl -a disk0 | awk <span class="string">&#x27;/SMART\/Health Information/,/^$/&#x27;</span></span><br></pre></td></tr></table></figure></li></ol><p>​命令解释：</p><ul><li><strong>smartctl</strong>: 运行 smartctl 工具的命令。</li><li><strong>-a</strong>:  smartctl 命令的一个参数，指示它显示硬盘的所有可用 S.M.A.R.T. 属性和信息。即，显示硬盘的详细健康状态报告。</li><li><strong>disk0</strong>: 目标硬盘的标识符。在这个命令中，”disk0” 是硬盘的名称或标识符，可以是系统中硬盘的设备名称或其他标识符，具体取决于操作系统和硬件配置。</li><li><strong>|</strong>: 这是管道符号，将 <code>smartctl -a disk0</code> 的输出传递给下一个命令。</li><li><strong>awk</strong>: 这是一个用于处理文本数据的强大工具。在这个命令中，我们使用 <code>awk</code> 来处理 <code>smartctl</code> 的输出。</li><li><strong>‘&#x2F;SMART&#x2F;Health Information&#x2F;,&#x2F;^$&#x2F;‘</strong>: 这是 <code>awk</code> 命令的模式和动作部分。模式部分由两个正则表达式构成，它们用逗号分隔。第一个正则表达式 <code>/SMART\/Health Information/</code> 是起始模式，用于匹配包含 “SMART&#x2F;Health Information” 的行。第二个正则表达式 <code>/^$/</code> 是结束模式，用于匹配空行。</li><li><strong>动作部分</strong>: 在模式匹配时执行的动作。在这个命令中，<code>awk</code> 将会从匹配到的起始模式开始打印输出，并在遇到结束模式（空行）时停止打印。</li></ul><ol start="4"><li><p>确认当前系统挂载的分区或启动的磁盘标志符，在“终端”运行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">diskutil list | grep \* -m 1</span><br></pre></td></tr></table></figure><p>在输出内容的最右边的“disk0”即为启动磁盘标志符。如果你要查看别的磁盘，请运行下面的命令查找磁盘标志符（输出结果最后一列IDENTIFIER）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">diskutil list</span><br></pre></td></tr></table></figure></li><li><p>分析输出结果 </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">SMART/Health Information (NVMe Log 0x02)</span><br><span class="line">Critical Warning:                   0x00 <span class="comment">#严重警告。此处值为 0x00，表示没有严重警告。</span></span><br><span class="line">Temperature:                        33 Celsius <span class="comment">#温度。当前温度为 33 摄氏度</span></span><br><span class="line">Available Spare:                    100% <span class="comment">#可用备用空间。当前可用备用空间为 100%。</span></span><br><span class="line">Available Spare Threshold:          99% <span class="comment">#可用备用空间阈值。当可用备用空间低于此阈值时，可能会出现警告。</span></span><br><span class="line">Percentage Used:                    2% <span class="comment">#使用百分比。当前使用了 2% 的存储器容量</span></span><br><span class="line">Data Units Read:                    91,207,805 [46.6 TB] <span class="comment">#读取的数据单元数量。</span></span><br><span class="line">Data Units Written:                 95,333,096 [48.8 TB] <span class="comment">#写入的数据单元数量。</span></span><br><span class="line">Host Read Commands:                 2,236,552,092 <span class="comment">#主机读命令数量。</span></span><br><span class="line">Host Write Commands:                1,626,904,490 <span class="comment">#主机写命令数量。</span></span><br><span class="line">Controller Busy Time:               0 <span class="comment">#控制器忙碌时间</span></span><br><span class="line">Power Cycles:                       349 <span class="comment">#电源循环次数。当前已进行了 349 次电源循环。</span></span><br><span class="line">Power On Hours:                     1,237 <span class="comment">#上电时间。当前已经上电运行了 1,237 小时。</span></span><br><span class="line">Unsafe Shutdowns:                   10 <span class="comment">#不安全的关闭次数。当前发生了 10 次不安全的关闭。</span></span><br><span class="line">Media and Data Integrity Errors:    0 <span class="comment">#媒体和数据完整性错误。当前没有发生媒体和数据完整性错误。</span></span><br><span class="line">Error Information Log Entries:      0 <span class="comment">#媒体和数据完整性错误。当前没有发生媒体和数据完整性错误。</span></span><br></pre></td></tr></table></figure></li></ol><br/><h2 id="关闭Swap或内存压缩"><a href="#关闭Swap或内存压缩" class="headerlink" title="关闭Swap或内存压缩"></a>关闭Swap或内存压缩</h2><p>禁用 MacOS 的 Swap 分区, 目的是提高速度。众所周知，Swap 是将磁盘虚拟为内存来用的，所以速度肯定比不上扎扎实实的内存的。</p><p>   但如果你的物理内存真的不够，禁用 Swap 可能会导致程序被内核 OOM(Out Of Memory) Kill 掉，甚至导致内核崩溃。请自行斟酌风险。</p><ol><li><p>关闭 SIP：</p><p>关机，然后持续按住电源按钮，Mac 会开机并载入<a href="https://support.apple.com/zh-cn/102342">启动选项</a>。当你看到“正在载入启动选项”或“选项”图标时，松开电源按钮。在实用程序菜单中，选择“终端”。运行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">csrutil <span class="built_in">disable</span></span><br></pre></td></tr></table></figure><p>重启后查询当前SIP状态，在“终端”运行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">csrutil status</span><br><span class="line"><span class="comment"># 预期返回：System Integrity Protection status: disabled.</span></span><br></pre></td></tr></table></figure></li><li><p>查看<code> vm.compressor_mode</code>：</p><p>检查现在的内存模式（默认的数字是 4），在“终端”运行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sysctl -a vm.compressor_mode</span><br></pre></td></tr></table></figure><blockquote><p>1 代表不压缩内存且不启用 swap。</p><p>2 代表压缩内存但不启用 swap。</p><p>3 代表不压缩内存但启动 swap。</p><p>4 代表着压缩内存并启用 swap。</p></blockquote></li><li><p>设置 <code>vm.compressor_mode</code>：</p><p>建议设置为 2: <code>sudo nvram boot-args=&quot;vm_compressor=2&quot;</code></p><p>不过，有可能你之前已经有设置过 <code>boot-args</code> 了，这样可能会把你原来的 <code>boot-args</code> 覆盖掉，建议先看看 <code>boot-args</code> 是不是有别的：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvram -p</span><br></pre></td></tr></table></figure><p>假设你设置过 <code>serverperfmode=1</code>，那么这个时候就填 <code>sudo nvram boot-args=&quot;vm_compressor=2 serverperfmode=1&quot;</code> 这样把之前的配置加上去（类似 $PATH 那样的处理）</p><p>当然也可以一行搞定：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 我没试过这个核心是 $(nvram boot-args 2&gt;/dev/null | cut -f 2-) 这个</span></span><br><span class="line">nvram boot-args=<span class="string">&quot;vm_compressor=2 serverperfmode=1 <span class="subst">$(nvram boot-args 2&gt;/dev/null | cut -f 2-)</span>&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>禁用 <code>dynamic_pager</code>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo launchctl unload -w /System/Library/LaunchDaemons/com.apple.dynamic_pager.plist</span><br><span class="line">sudo <span class="built_in">rm</span> /private/var/vm/swapfile*</span><br></pre></td></tr></table></figure></li><li><p>重启, 检查 Swap 是否已关闭：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sysctl -a vm.compressor_mode</span><br></pre></td></tr></table></figure><p>预期返回 2</p></li><li><p>回到恢复模式重新启用 SIP，在恢复模式的控制台运行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">csrutil <span class="built_in">enable</span></span><br></pre></td></tr></table></figure></li></ol><br/><h2 id="禁用其他系统服务"><a href="#禁用其他系统服务" class="headerlink" title="禁用其他系统服务"></a>禁用其他系统服务</h2><h3 id="禁用-mds-stores"><a href="#禁用-mds-stores" class="headerlink" title="禁用 mds_stores"></a>禁用 mds_stores</h3><p><code>mds</code> 是 <code>Spotlight</code>的一部分。也就是你按 <code>Command (⌘) + 空格</code> 弹出来的那个东西。它为所有文件建立索引，以便在你要搜索文件的时候快速的找到你想要的东西。 <code>Spotlight</code> 可以完全被 <code>Alfred</code> 替代，所以可以禁用它以节省CPU和内存。</p><ul><li><p>要禁用索引，在“终端”运行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mdutil -a -i off</span><br></pre></td></tr></table></figure></li><li><p>若想恢复索引，在“终端”运行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mdutil -a -i on</span><br></pre></td></tr></table></figure></li></ul><h3 id="停用-spotlight-索引功能"><a href="#停用-spotlight-索引功能" class="headerlink" title="停用 spotlight 索引功能"></a>停用 spotlight 索引功能</h3><p>停用 spotlight 索引功能, 也可以减少磁盘扫描，来提升ssd寿命和提升性能。</p><ol><li><p>系统设置 - Siri与聚焦 - 去除所有聚焦勾选项, 聚焦隐私 - 把整个磁盘加进去（也就是黑名单）</p></li><li><p>禁用 mds_stores，在“终端”运行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mdutil -a -i off</span><br></pre></td></tr></table></figure></li></ol><p>恢复 spotlight 索引功能：</p><ol><li><p>还原黑名单</p></li><li><p>重新启用 mds_stores，在“终端”运行命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mdutil -a -i on</span><br></pre></td></tr></table></figure></li></ol><br/><br/><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://support.apple.com/zh-cn/120622">Apple - 防止 Mac 笔记本电脑在翻开屏幕盖或连接电源时开机</a></p><p><a href="https://blog.csdn.net/qq_40483419/article/details/138114903">CSDN - Mac查看磁盘寿命</a></p><p><a href="https://gist.github.com/eczn/9bfa9d71d338254f32df06f3537ed801">GitHub Gist - eczn&#x2F;mac-disable-swap</a></p><p><a href="https://github.com/digoal/blog/blob/master/202212/20221207_01.md">GitHub - digoal&#x2F;blog&#x2F;202212&#x2F;20221207_01</a></p>]]></content>
      
      
      <categories>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 折腾 </tag>
            
            <tag> Mac </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>从安装Linux to Go到NVIDIA驱动和CUDA</title>
      <link href="/Linux-Fedora-NVIDIA-CUDA/"/>
      <url>/Linux-Fedora-NVIDIA-CUDA/</url>
      
        <content type="html"><![CDATA[<h2 id="Linux-to-Go-安装到移动硬盘"><a href="#Linux-to-Go-安装到移动硬盘" class="headerlink" title="Linux to Go 安装到移动硬盘"></a>Linux to Go 安装到移动硬盘</h2><p>因为电脑系统盘容量不足，同时不想让 Linux 搞乱系统盘，因此选择了类似 Win to Go 的安装方式，将 Linux 系统安装到移动固态硬盘，即插即用的同时还能给 Windows 和 Linux 系统同时保留较大的空间。</p><h3 id="发行版的选择"><a href="#发行版的选择" class="headerlink" title="发行版的选择"></a>发行版的选择</h3><p>作为一个从高中就开始接触 Linux 的人，我首先想到的就是 Ubuntu 或是它的社区版 Debain。然而我在几周前看到朋友的 Deepin，深感过去使用的 Ubuntu 实在是远离现代化，且诸多使用习惯与 Windows 和 macOS 不同，因此我决定尝试一下不同的发行版。接着发现实际上 Deepin 并不好用，于是将目光转向了其他的发行版，最终在一个视频中找到了答案：<a href="https://www.bilibili.com/video/BV1oarzYUER9/">Bilibili - 【年度盘点】2024 Linux发行版终极评测：谁是真香？谁又惨遭打入冷宫？</a></p><p>视频中，Ubuntu &#x2F; Debain 仅为 T2 级别，因此我最终选择了 T1 级别的 <a href="https://fedoraproject.org/spins/kde">Fedora KDE Plasma Desktop</a>，版本号 41。</p><h3 id="安装-Fedora-41"><a href="#安装-Fedora-41" class="headerlink" title="安装 Fedora 41"></a>安装 Fedora 41</h3><ol><li>准备一块移动固态硬盘，一个至少8GB的U盘，一台BIOS开启安全启动的PC</li><li>下载 Fedora KDE Plasma Desktop 镜像： <a class="btn-anzhiyu blue" href="https://fedoraproject.org/spins/kde/download"   title="Fedora官网"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>Fedora官网</span></a></li><li>继续在上一步的网址中，往下拉，下载 <strong>Fedora Media Writer</strong></li><li>使用 Fedora Media Writer 将镜像烧录进 U盘</li><li>将U盘和移动固态硬盘插入电脑，重启时进入BIOS，选择启动项为U盘</li><li>开机时选择“无需验证”的选项</li><li>在进入 Fedora 试用系统后，点击左上角的 Install Fedora，将系统安装至移动硬盘</li><li>注意：在设置用户时，应当同时设置个人用户和 root 用户！（不要选错安装位置，否则可能抹掉 Windows 的硬盘！）</li><li>拔掉U盘，重启时进入BIOS，选择启动项为移动硬盘</li></ol><br/><hr><h2 id="安装-NVIDIA-驱动"><a href="#安装-NVIDIA-驱动" class="headerlink" title="安装 NVIDIA 驱动"></a>安装 NVIDIA 驱动</h2><blockquote><p><strong>Tips:</strong></p><ol><li>Fedora 的包管理器是 <strong>DNF</strong> (Dandified YUM)，支持的安装包格式为 <strong>.rpm</strong>；因此需要将常见教程中的 apt-get、yum 指令换为 dnf，下载安装包时忽略 .deb 格式。</li><li>Fedora 中，进入纯命令行模式的方式是按 <strong>[Alt + Ctrl + F3]</strong> 。</li><li>安装 Fedora 41 时，若选择中文语言，则 &#x2F;home&#x2F;[yourUserName]&#x2F; 目录下的下载等文件夹为中文，在进入纯命令行模式前，需要将下载文件夹中的文件移出，否则无法操作。</li><li>Fedora KDE中，关闭 GUI 界面的指令为 <code>sudo systemctl stop sddm</code>，退出纯命令行模式的指令为<code>sudo systemctl start sddm</code>。</li><li>本节的主要参考为 <a href="https://blog.csdn.net/qq_61653333/article/details/128883198">CSDN - 在Fedora上安装NVIDIA驱动详细教程及解析</a>；次要参考为 <a href="https://github.com/oddmario/NVIDIA-Fedora-Driver-Guide">GitHub - oddmario&#x2F;NVIDIA-Fedora-Driver-Guide</a></li></ol></blockquote><h3 id="一、准备环境"><a href="#一、准备环境" class="headerlink" title="一、准备环境"></a>一、准备环境</h3><p>由于构建编译NVIDIA官方提供的run包以及需要给NVIDIA driver签名需要一些工具，所以先进行rpm包的安装。<strong>安装NVIDIA驱动属于系统级别的改动，所以以下所有的操作都需要在root下进行！</strong>按 [Alt + Ctrl + F3] 进入纯命令行模式，登录 root 用户。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dnf update</span><br><span class="line">dnf install kernel-headers kernel-devel</span><br><span class="line">dnf install kmodtool akmods mokutil openssl dkms</span><br></pre></td></tr></table></figure><p>如果出现找不到任何一个rpm包的情况，请添加清华源、ustc源、阿里源等，这些并不是冷门的包。</p><h3 id="二、下载官方驱动-run包"><a href="#二、下载官方驱动-run包" class="headerlink" title="二、下载官方驱动.run包"></a>二、下载官方驱动.run包</h3><p><strong>1. 确定所使用的显卡型号，有多种方法可选：</strong></p><ol><li>使用 <code>neofetch</code>，安装方法见 <a class="btn-anzhiyu blue" href="https://github.com/dylanaraps/neofetch/wiki/Installation"   title="neofetch Wiki"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>neofetch Wiki</span></a></li><li>使用 <code>lshw -c video</code> 查看</li></ol><img src="/Linux-Fedora-NVIDIA-CUDA/Linux-Fedora-NVIDIA-CUDA_1.jpg" class="" title="图片"><ol start="3"><li>使用 <code>lspci|grep -i vga</code> 查看</li></ol><img src="/Linux-Fedora-NVIDIA-CUDA/Linux-Fedora-NVIDIA-CUDA_2.jpg" class="" title="图片"><p><strong>2. 进入NVIDIA官方页面下载linux版的驱动</strong></p><a class="btn-anzhiyu larger" href="https://www.nvidia.cn/drivers/lookup/"   title="NVIDIA驱动下载"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>NVIDIA驱动下载</span></a><p>根据自己的情况选择正确的NVIDIA驱动。注意如果你是笔记本显卡，可能要选notebook版本，操作系统应选择Linux。如果显卡填错了，会给出错误的显卡驱动，会影响显示效果。</p><p>选择推荐驱动&#x2F;认证驱动分支即可，注意不同的驱动版本可能对应了不同的CUDA版本上限。我选择了2025-1-16发布的 <code>550.144.03</code> 版本，最高支持 CUDA 12.4</p><p>把下载下来的run包移动到 <code>/home/[yourUserName]/</code>目录下。由于NVIDIA对LInux的适配力度并没有像WIndows那么大，所以基本只要下载这一次就好了，它一般不会更新，所以一次性下载好以后就不需要再访问NVDIA官网了。</p><p><strong>3. 接下来我们要来查看自己的电脑BIOS是否开启了安全启动模式，这也是linux安装nvidia驱动里最坑人的地方。有2种方法可选：</strong></p><ol><li>使用 <code>mokutil --sb-state</code> 查看</li></ol><img src="/Linux-Fedora-NVIDIA-CUDA/Linux-Fedora-NVIDIA-CUDA_3.jpg" class="" title="图片"><ol start="2"><li>使用 <code>dmesg |grep -E &#39;secureboot&#39; </code> 查看</li></ol><img src="/Linux-Fedora-NVIDIA-CUDA/Linux-Fedora-NVIDIA-CUDA_4.jpg" class="" title="图片"><p>BIOS 中的安全启动要保持enable然后进Fedora，如果已经是enable那就不用调节；如果是disable,也要调成enable</p><h3 id="三、禁用nouveau开源显卡驱动"><a href="#三、禁用nouveau开源显卡驱动" class="headerlink" title="三、禁用nouveau开源显卡驱动"></a>三、禁用nouveau开源显卡驱动</h3><p>在NVIDIA显卡上如果没有安装闭源驱动，那么默认使用的就是nouvea开源驱动。</p><a class="btn-anzhiyu larger" href="https://nouveau.freedesktop.org/"   title="nouveau官网"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>nouveau官网</span></a><p><strong>nouveau</strong>(英语：&#x2F;nuːˈvoʊ&#x2F; 是一个自由开放源代码GPU驱动程序，是为Nvidia的GPU所编写，也可用于属于系统芯片的高通系列，此驱动程序是由一群独立的软件工程师所编写，Nvidia的员工也提供了些微的帮助，微软也提供了很大的帮助，谷歌也不甘示弱地提供了尽可能多的帮助。</p><p>nouveau只是入门级别的显卡驱动，也就是仅仅在勉强够用的水平，在这种情况下是不能完全发挥nvidia显卡的优势的。</p><p>所以我们在安装nvidia驱动之前必须禁用它，不要慌，完全没有nvidia驱动的情况下也是能进图形化界面的，只是拿CPU硬算会比较卡。</p><p><strong>1. 在禁用模块和启动引导里同时禁用nouveau驱动</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">dnf install vim</span><br><span class="line">vim /etc/modprobe.d/blacklist.conf</span><br><span class="line"></span><br><span class="line">在文件中添加：</span><br><span class="line">blacklist nouveau</span><br><span class="line">options nouveau modeset=0</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/default/grub</span><br><span class="line"> </span><br><span class="line">在GRUB_CMDLINE_LINUX那一项里加入一句代码，若项目中已有其他代码，用空格隔开：</span><br><span class="line">rd.driver.blacklist=nouveau nouveau.modeset=0</span><br></pre></td></tr></table></figure><p>参考效果：</p><img src="/Linux-Fedora-NVIDIA-CUDA/Linux-Fedora-NVIDIA-CUDA_5.jpg" class="" title="图片"><p> <strong>2. 重新制作启动引导配置文件，然后重启</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">grub2-mkconfig -o /boot/grub2/grub.cfg</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><p><strong>3. 查看nouveau显卡驱动模块是否被加载</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsmod|grep nouveau</span><br></pre></td></tr></table></figure><p>重启之后使用以上指令查看nouveau显卡驱动模块是否被加载，运行指令后没有出现任何返回结果就对了！ </p><p>这里必须保证没有任何模块显示出来，如果还有那就是失败了。</p><h3 id="四、安装NVIDIA显卡驱动"><a href="#四、安装NVIDIA显卡驱动" class="headerlink" title="四、安装NVIDIA显卡驱动"></a>四、安装NVIDIA显卡驱动</h3><p><strong>1. 从GUI模式切换到纯命令行模式</strong></p><p>按 [Alt + Ctrl + F3] 进入纯命令行模式，如果不行，尝试将 F3 换为 F1 或 F2。</p><p>以 root 身份登录。</p><p><strong>2. 停止显示管理器（SDDM）服务</strong></p><p>在 Fedora KDE 系统中，停止 SDDM 服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl stop sddm</span><br></pre></td></tr></table></figure><p>对于其他系统，这一步可能为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo service lightdm stop</span><br><span class="line">sudo service gdm stop</span><br><span class="line">sudo service kdm stop</span><br></pre></td></tr></table></figure><p><strong>3. 运行 .run 包</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/[yourUserName]/</span><br><span class="line"><span class="comment"># 或是 cd ~</span></span><br><span class="line"><span class="comment"># 将[yourUserName]更换为你的用户名</span></span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line"><span class="built_in">chmod</span> +x NVIDIA-Linux-x86_64-550.144.03.run</span><br><span class="line"><span class="comment"># 将[NVIDIA-Linux-x86_64-525.85.05.run]更换为你的.run包名</span></span><br><span class="line">./NVIDIA-Linux-x86_64-550.144.03.run</span><br></pre></td></tr></table></figure><p><strong>4. 运行后在命令行界面会出现…..的进度条</strong></p><p>Uncompress NVIDIA driver 这是在解包</p><p><strong>5. 进度条读完之后会进入NVIDIA驱动的以蓝色调为主的安装界面</strong></p><p>Building kernel modules 此时在构建编译NVIDIA驱动linux内核模块。编译完成后 “<strong>Continue</strong>“。</p><p><strong>6. 提示是否要给编译好的NVIDIA 模块签名</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">The target kernel has CONFIG_MODULE_SIG set which means that it supports cryptographic signatures on kernel modules.On some systems,the kernel may refuse to load modules without a valid signature from a trusted key.This system also has UEFI Boot enabled; many distributions enforce module signature verification on UEFI systems when Secure Boot is enabled. Would you like to sign the NVIDIA kernel module?</span><br><span class="line"></span><br><span class="line">select:</span><br><span class="line"></span><br><span class="line">        Sign the kernel module     or     Install without signing</span><br></pre></td></tr></table></figure><blockquote><p>目标内核设置了CONFIG_MODULE_SIG，这意味着它支持内核模块上的加密签名。在某些系统上，内核可能拒绝加载没有来自可信密钥的有效签名的模块。此系统还启用了UEFI引导；当启用安全引导时，许多发行版在UEFI系统上强制执行模块签名验证。是否要签署NVIDIA内核模块？</p></blockquote><p>我们知道，linux是典型的模块化的宏内核操作系统，在加载安装nvidia内核模块的时候由于Uefi Secure Boot的阻拦，我们必须给该模块签名，如果不签名则无法加载。</p><p>所以我们这里选择 “<strong>Sign the kernel module</strong>”，给我们的NVIDIA内核模块签名以免被安全启动阻拦。</p><p><strong>7. 生成签名密钥</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Would tou like to sign the NVIDIA kernel module with an existing key pair,or would you like to generate a new one?</span><br><span class="line"></span><br><span class="line">select:</span><br><span class="line"></span><br><span class="line">        Use an existing key pair     or     Generate a new key pair</span><br></pre></td></tr></table></figure><p>首次安装时务必选择 “<strong>Genrate a new key pair</strong>”，它会自动生成NVIDIA模块的签名密钥，我们将来要把它交给UEFI Secure Boot审核。非首次安装的时候，也就是密钥文件以及存在的情况下，可以选择“Use an existing key pair ”，选择这个选项，它会提示你输入密钥文件存储的位置。</p><p><strong>8. 删除私有的签名密钥</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">The NVIDIA kernel module was successfully signed with a newly generated key pair .Would you like to delete the private signing key?</span><br><span class="line"></span><br><span class="line">select:</span><br><span class="line"></span><br><span class="line">        Yes     or     No</span><br></pre></td></tr></table></figure><p>如果你频繁更新内核，那么可以选择保留私有密钥，在你下一次安装NVIDIA驱动的时候可以选择“<strong>Use an existing key pair”，</strong>也就是第四步的时候，如果你选择了这个选项，实际上它会让你输入密钥的位置。这么做其实是比较麻烦的，在这个蓝色界面还不能使用Tab查看目录里的文件，如果没有把位置背下来，那就只能用Ctrl+Alt+Fn切换到另一个tty去查看，因此我不建议选择保留。<strong>直接选择 Yes 就好</strong>，下一次我们重新生成一个密钥，然后再签名会方便很多。</p><p><strong>9. 做出选择之后</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">An X.509 certificate containing the public signing key will be installed to /usr/share/nvidia/nvidia*.der ..............此处省略一万字..............</span><br><span class="line"></span><br><span class="line">This certificate must be added to a key database which is trusted by your kernel in order for the kernel to be able to verify the module signature.</span><br><span class="line"></span><br><span class="line">select:</span><br><span class="line"></span><br><span class="line">        OK</span><br></pre></td></tr></table></figure><blockquote><p>必须将此证书添加到内核信任的密钥数据库中，以便内核能够验证模块签名</p></blockquote><p><strong>10. 下一步</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">The signed kernel nodule failed to load. Secure boot is enabled on this system, so this is likely because the kernel does not trust any key which is capable of verifying the module signature. Would you like to install the signed kernel</span><br><span class="line">module anyway?</span><br><span class="line"></span><br><span class="line">Note that if this module loading failure is due to the lack of a trusted signature, you will not be able to load the installed module until after a key that can verify the module signature is added to a key database that is trusted by</span><br><span class="line">the kernel. This will likely require rebooting your computer.</span><br><span class="line"></span><br><span class="line">        install signed kernel module            Abort installation</span><br></pre></td></tr></table></figure><p>根据以上提示，虽然我们一厢情愿地想安装NVIDIA驱动.但是Linux kernel和UEFI Secure Boot并不领情,不相信我们的NVIDIA kernel modules sign.没有关系，这个我们选择第一项 “<strong>Install signed kernel module</strong>” 就好了。</p><p><strong>11. 选择是否安装NVIDIA 32位兼容库</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Install NVIDIA&#x27;s 32-bit compatibility libraries?</span><br><span class="line"></span><br><span class="line">                 Yes                    No</span><br></pre></td></tr></table></figure><p>这里问我们是否要安装NVIDIA 32位兼容库，我们选择 “<strong>Yes</strong>“ 就好。 </p><p><strong>12. 注册DKMS</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Would you like to register the kernel module sources with DKMS? This will allow DKMS to automatically build a new module, if your kernel changes later.</span><br><span class="line"></span><br><span class="line">                 Yes                    No</span><br></pre></td></tr></table></figure><p> dkms我们最前面已经安装过了。</p><blockquote><p>DKMs以文件的形式存储并能在系统运行过程中动态地加载和卸载。DKMs由一个用户层的DKM服务器来管理，并非由内核来管理。当核心需要某模块时，由DKM服务器负责把相应的DKM加载；当核心的内存资源紧缺时，由DKM服务器负责卸载一个没有被使用的DKM。</p></blockquote><p>dkms这个工具的作用就是动态加载内核模块，在NVIDIA的提示下，它的大致作用是在你安装新的linux kernel的时候dkms会自动帮你编译安装nvidia驱动模块到你的新内核。这里可以选择Yes或者No,本人测试更新内核的时候，在新内核里并没有自动加上nvidia驱动。这里讲一下选择Yes的情况，选择No的话就直接进入下一步了。</p><img src="/Linux-Fedora-NVIDIA-CUDA/Linux-Fedora-NVIDIA-CUDA_6.jpg" class="" title="图片"><p> 选择Yes后会提示错误，不要慌，虽然它是ERROR,但它并不会影响你安装NVIDIA驱动。我这里建议你把这个提示错误的界面给拍下来，等到后面我们还有用的。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">WARNING: Failed to register the NVIDIA kernel modules with DKMS. The NVIDIA kernel modules were installed, but will not be automatically rebuilt if you change your kernel.</span><br><span class="line"></span><br><span class="line">            OK</span><br></pre></td></tr></table></figure><p> 直接OK就好了，没有大碍。</p><p><strong>13. 修改X的配置文件</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Your X configuration file has been successfully updated. Installation of the NUIDIA Accelerated Graphics Driver for Linux-X86_64 (version: 550.144.03) is now complete.</span><br></pre></td></tr></table></figure><p>选择Yes即可，让NVIDIA驱动帮你自动修改X和grub2的配置文件，就不要自己去改了。</p><p>接下来就已经退出NVIDIA驱动的安装界面了，会重新回到命令行界面，如果以上步骤和我讲述的不一样直接提示错误导致退出，可以重新运行NVIDIA驱动安装包，多次尝试。</p><p><strong>14. 安装NVIDIA驱动之后操作</strong></p><p>这里千万不要直接重启，我们还有一些善后事宜要做的。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">akmods --force <span class="comment">#确保内核模块已编译</span></span><br><span class="line">dracut --force <span class="comment">#确保引导映像已更新</span></span><br><span class="line">mokutil --import /usr/share/nvidia/nvidia*.der <span class="comment">#手动签名NVIDIA驱动</span></span><br><span class="line">它会提示要你输入一串密码，然后again，这里要记住你输入的密码，一会儿要用到它</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">grub2-mkconfig -o /boot/grub2/grub.cfg</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><p>特别是第三步，非常重要，因为前面提示签名错误，我们这里可以手动签名，所以前面提示错误也无妨。注意：如果你没有打开安全启动，那么就不需要签名这个步骤，NVIDIA驱动也大概不会给你这个.der文件，所以直接跳过mokutil就好了。</p><p>输入的那串密码一定要记住，很快就要用到了。</p><h3 id="五、重启并验证NVIDIA驱动"><a href="#五、重启并验证NVIDIA驱动" class="headerlink" title="五、重启并验证NVIDIA驱动"></a>五、重启并验证NVIDIA驱动</h3><p><strong>1. 重启之后进入界面</strong></p><p>重启之后会出现如下界面，不要慌，<strong>根据它的提示按下任意键即可</strong>。不要一直停留，不然界面消失的话，<strong>我们得在linux中重复 <code>mokutil --import /usr/share/nvidia/nvidia*.der</code> 这个步骤然后重启。</strong></p><img src="/Linux-Fedora-NVIDIA-CUDA/Linux-Fedora-NVIDIA-CUDA_7.jpg" class="" title="图片"><p><strong>2. 选择“Enroll MOK”</strong></p><img src="/Linux-Fedora-NVIDIA-CUDA/Linux-Fedora-NVIDIA-CUDA_8.jpg" class="" title="图片"><p><strong>3. [Enroll MOK]  选择 Continue</strong></p><img src="/Linux-Fedora-NVIDIA-CUDA/Linux-Fedora-NVIDIA-CUDA_9.jpg" class="" title="图片"><p><strong>4. Enroll the key(s)?  选择Yes</strong></p><img src="/Linux-Fedora-NVIDIA-CUDA/Linux-Fedora-NVIDIA-CUDA_10.jpg" class="" title="图片"><p><strong>5. 这里要输入刚才记录的密码</strong></p><img src="/Linux-Fedora-NVIDIA-CUDA/Linux-Fedora-NVIDIA-CUDA_11.jpg" class="" title="图片"><p><strong>6. 选择Reboot重启</strong></p><img src="/Linux-Fedora-NVIDIA-CUDA/Linux-Fedora-NVIDIA-CUDA_12.jpg" class="" title="图片"><h3 id="六、重启之后的额外操作"><a href="#六、重启之后的额外操作" class="headerlink" title="六、重启之后的额外操作"></a>六、重启之后的额外操作</h3><p>在 CSDN 的主要参考教程中，到这里直接使用 <code>nvidia-smi</code> 指令就能看到显卡在正常工作了，可是我的情况有所不同：</p><pre><code>1. `nvidia-smi` 可以显示，但显存为 Off 状态，且显存占用为 1MB 或 0MB；下面显示 No running processes found1. 系统设置 - 关于本机 中，显卡型号为“llvmpipe”1. `lsmod|grep nouveau` 没有结果，`lsmod|grep nvidia` 有正常返回（看起来是正常现象）1. 播放视频时 CPU 占用很高，且外接显示器没有画面</code></pre><p>所有的现象都表明，NVIDIA显卡驱动了，但没完全驱动！</p><p>我找得到的解决方式如下：</p><p><strong>1. 关闭BIOS中的安全启动</strong></p><p><strong>2. 修改 <code>/etc/default/grub</code></strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入纯命令行模式，登录root用户</span></span><br><span class="line">sudo nano /etc/default/grub</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在GRUB_CMDLINE_LINUX项中添加：</span></span><br><span class="line">GRUB_CMDLINE_LINUX=<span class="string">&quot;nvidia-drm.modeset=1 nvidia-drm.fbdev=1&quot;</span></span><br><span class="line"></span><br><span class="line">sudo grub2-mkconfig -o /etc/grub2.cfg</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><p>重启之后，<code>nvidia-smi</code> 正常显示，系统设置 - 关于本机的显卡型号正常显示，外接显示器正常显示。</p><p><strong>（可选项）启用视频加速支持</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo dnf install nvidia-vaapi-driver libva-utils vdpauinfo</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><br/><hr><h2 id="安装-CUDA"><a href="#安装-CUDA" class="headerlink" title="安装 CUDA"></a>安装 CUDA</h2><blockquote><p>本节的主要参考：<a href="https://blog.csdn.net/Sihang_Xie/article/details/127347139">CSDN - 【CUDA】Ubuntu系统如何安装CUDA保姆级教程(2022年最新)</a></p><p>本节的次要参考：<a href="https://blog.csdn.net/aizsa111/article/details/129455363">CSDN - ubuntu22.10安装cuda出错Failed to verify gcc version. See log at &#x2F;var&#x2F;log&#x2F;cuda-installer.log for details.</a></p></blockquote><p><strong>1. 查看CUDA最高支持的版本</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvidia-smi</span><br></pre></td></tr></table></figure><p><strong>2. 前往 CUDA 官网</strong></p><a class="btn-anzhiyu larger" href="https://developer.nvidia.com/cuda-toolkit-archive"   title="CUDA Toolkit Archive | NVIDIA Developer"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>CUDA Toolkit Archive | NVIDIA Developer</span></a><p>这里选择小版本号最高的版本，例如我的驱动最高支持CUDA 12.4，那么我可以选择 CUDA 12.4.1</p><p><strong>3. 选择正确的系统版本</strong></p><img src="/Linux-Fedora-NVIDIA-CUDA/Linux-Fedora-NVIDIA-CUDA_13.png" class="" title="图片"><p>这里注意最后一项 Installer Type 选择 ”runfile (local)”</p><p><strong>4. 输入下面给到的Linux命令</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://developer.download.nvidia.com/compute/cuda/12.4.1/local_installers/cuda_12.4.1_550.54.15_linux.run</span><br><span class="line">sudo sh cuda_12.4.1_550.54.15_linux.run</span><br></pre></td></tr></table></figure><p>如果产生错误提示：Failed to verify gcc version. See log at &#x2F;var&#x2F;log&#x2F;cuda-installer.log for details.</p><p>那么将运行命令后面加上 <code> --override</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo sh cuda_12.4.1_550.54.15_linux.run --override</span><br></pre></td></tr></table></figure><p><strong>5. 安装选项</strong></p><p>弹出来第一个选择框，因为已经安装过 Nvidia 的显卡驱动了，因此选择 “continute” ，会出现下面这个对话框，选择 “accept” 。</p><img src="/Linux-Fedora-NVIDIA-CUDA/Linux-Fedora-NVIDIA-CUDA_14.png" class="" title="图片"><p>摁一下空格取消叉选 Driver 安装，直接选择 Install 安装（这一步中，可以只勾选 CUDA Toolkit 12.4）：</p><img src="/Linux-Fedora-NVIDIA-CUDA/Linux-Fedora-NVIDIA-CUDA_15.png" class="" title="图片"><p><strong>6. 安装成功</strong></p><img src="/Linux-Fedora-NVIDIA-CUDA/Linux-Fedora-NVIDIA-CUDA_16.png" class="" title="图片"><p><strong>7. 配置环境变量</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo vim ~/.bashrc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在文件末尾添加：</span></span><br><span class="line"><span class="built_in">export</span> PATH=/usr/local/cuda-11.6/bin<span class="variable">$&#123;PATH:+:<span class="variable">$&#123;PATH&#125;</span>&#125;</span></span><br><span class="line"><span class="built_in">export</span> LD_LIBRARY_PATH=/usr/local/cuda-11.6/lib64<span class="variable">$&#123;LD_LIBRARY_PATH:+:<span class="variable">$&#123;LD_LIBRARY_PATH&#125;</span>&#125;</span></span><br><span class="line"><span class="built_in">export</span> CUDA_HOME=/usr/local/cuda-11.6</span><br></pre></td></tr></table></figure><p><strong>8. 更新系统环境变量</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br><span class="line">sudo ldconfig</span><br></pre></td></tr></table></figure><p><strong>9. 验证 CUDA 是否安装成功</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvcc -V</span><br></pre></td></tr></table></figure><p>输出下图即为成功安装：</p><img src="/Linux-Fedora-NVIDIA-CUDA/Linux-Fedora-NVIDIA-CUDA_17.png" class="" title="图片"><br/><hr><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>之前做项目，在 Ubuntu 18.4 LTS 上给 3060 Super 安装驱动就忙了一整天，这次算上 Fedora 安装和折腾，前前后后也差不多用了一整天，累麻了，希望记录下来折腾的过程，以后少踩坑吧。</p><p>最后还是想说一句：</p><img src="/Linux-Fedora-NVIDIA-CUDA/Linux-Fedora-NVIDIA-CUDA_18.jpg" class="" title="图片">]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 折腾 </tag>
            
            <tag> CUDA </tag>
            
            <tag> NVIDIA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LLM 推理和微调所需 VRAM 估算指南</title>
      <link href="/LLM-VRAM-Required/"/>
      <url>/LLM-VRAM-Required/</url>
      
        <content type="html"><![CDATA[<h2 id="基础术语解释"><a href="#基础术语解释" class="headerlink" title="基础术语解释"></a>基础术语解释</h2><ul><li><p><strong>推理（Inference）</strong>：使用预训练模型根据输入数据进行文本的过程。</p></li><li><p><strong>微调（Fine-tuning）</strong>：在特定数据集上进一步训练预训练模型以使其适应特定任务的过程。</p></li><li><p><strong>内存消耗</strong>：在 LLM 推理和微调期间存储和处理数据所需的计算机内存量。</p></li><li><p><strong>优化器</strong>：一些优化算法（如带有动量的优化器）需要保存一些状态信息，以便在每次更新时进行调整。这些状态信息也会占用一定的显存。</p></li><li><p><strong>批处理大小（BatchSize）</strong> ：批处理大小是指一次推理中处理的样本数量。较大的批处理大小可能会增加显存使用，因为需要同时存储多个样本的计算结果。</p></li></ul><hr><br/><h2 id="LLM参数量与推理和微调所需-VRAM-基本关系"><a href="#LLM参数量与推理和微调所需-VRAM-基本关系" class="headerlink" title="LLM参数量与推理和微调所需 VRAM 基本关系"></a>LLM参数量与推理和微调所需 VRAM 基本关系</h2><p><strong>推理：模型显存+推理显存</strong></p><p>根据 <a href="https://blog.eleuther.ai/transformer-math/">EleutherAI Transformer Math 101</a>，推理所需 VRAM 计算公式（以 GB 为单位）为：<br>$$<br>\mathrm{Memory}_{\mathrm{Inference}} \approx \mathrm{Model\ Size} \times 1.2<br>$$</p><p><strong>微调：模型显存+推理显存+优化器显存</strong></p><p>对于 LoRa 微调，假设可训练参数为 16-bit，LoRa 微调所需 VRAM 计算公式（以 GB 为单位）为：<br>$$<br>\mathrm{Memory}<em>{\mathrm{LoRa}} \approx<br>\left( \mathrm{Model\ Size} + #\ \mathrm{trainable\ Params}</em>{\mathrm{Billions}} \times \frac{16}{8} \times 4 \right) \times 1.2<br>$$</p><hr><br/><h2 id="通过高级工具计算模型所需-VRAM"><a href="#通过高级工具计算模型所需-VRAM" class="headerlink" title="通过高级工具计算模型所需 VRAM"></a>通过高级工具计算模型所需 VRAM</h2><p>下面我们介绍一些高级计算的工具。</p><h3 id="1-VRAM-Estimator"><a href="#1-VRAM-Estimator" class="headerlink" title="1. VRAM Estimator"></a>1. VRAM Estimator</h3><a class="btn-anzhiyu larger" href="https://vram.asmirnov.xyz/"   title="VRAM Estimator"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>VRAM Estimator</span></a><blockquote><p><a href="https://github.com/furiousteabag/vram-calculator">https://github.com/furiousteabag/vram-calculator</a></p></blockquote><p>这个 GitHub 开源的工具可以估计基于transformer的模型用于推理和训练的GPU VRAM使用情况。它可以允许输入各种参数，如模型名称，精度，最大序列长度，批量大小，gpu数量。提供参数、激活、输出和CUDA内核的VRAM使用情况的详细细分。</p><img src="/LLM-VRAM-Required/LLM-VRAM-Required_1.jpg" class="" title="VRAM Estimator"><br/><h3 id="2-Hugging-Face-Accelerate-Model-Memory-Calculator"><a href="#2-Hugging-Face-Accelerate-Model-Memory-Calculator" class="headerlink" title="2. Hugging Face Accelerate Model Memory Calculator"></a>2. Hugging Face Accelerate Model Memory Calculator</h3><a class="btn-anzhiyu larger" href="https://huggingface.co/spaces/hf-accelerate/model-memory-usage"   title="Hugging Face Accelerate Model Memory Calculator"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>Hugging Face Accelerate Model Memory Calculator</span></a><blockquote><p><a href="https://github.com/huggingface/accelerate">https://github.com/huggingface/accelerate</a></p></blockquote><p>这个 Hugging Face 官方开源的工具可以计算用于推理和训练的模型的内存使用量。因为是Hugging Face的链接，所以可以输入模型名称或URL，该工具将提供内存使用情况的全面细分，包括数据类型、最大层、总大小和使用不同优化器的训练内存使用情况。</p><img src="/LLM-VRAM-Required/LLM-VRAM-Required_2.jpg" class="" title="Hugging Face Accelerate Model Memory Calculator"><br/><h3 id="3-Can-you-run-it-LLM-version"><a href="#3-Can-you-run-it-LLM-version" class="headerlink" title="3. Can you run it? LLM version"></a>3. Can you run it? LLM version</h3><a class="btn-anzhiyu larger" href="https://huggingface.co/spaces/Vokturz/can-it-run-llm"   title="Can you run it? LLM version"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>Can you run it? LLM version</span></a><p>这个 Hugging Face 开源的工具允许用户测试自己设备是否有能力使用 LLM 推理或 LoRA 微调。可通过调整 LoRa 可训练参数查看不同量化下所需的 VRAM。GPU 信息来自 <a href="https://www.techpowerup.com/gpu-specs/">TechPowerUp GPU Specs</a>，主要基于上一个工具，使用 Transformers 库。</p><img src="/LLM-VRAM-Required/LLM-VRAM-Required_3.jpg" class="" title="图片"><br/><h3 id="4-LLM-Inference-VRAM-Performance-Calculator"><a href="#4-LLM-Inference-VRAM-Performance-Calculator" class="headerlink" title="4. LLM Inference: VRAM &amp; Performance Calculator"></a>4. LLM Inference: VRAM &amp; Performance Calculator</h3><a class="btn-anzhiyu larger" href="https://apxml.com/tools/vram-calculator"   title="LLM Inference: VRAM & Performance Calculator"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>LLM Inference: VRAM & Performance Calculator</span></a><p>这个 ApX 的工具允许用户测试自己设备是否有能力使用 LLM 推理或 LoRA 微调。支持最新的计算卡，如 H800、B100、B200 等，以及 Apple Silicon 如 M4 Max；支持调整 GPU 数量；支持设置并发用户数；提供内存分配参考和生成速度参考；提供中文翻译。</p><img src="/LLM-VRAM-Required/LLM-VRAM-Required_4.jpg" class="" title="图片">]]></content>
      
      
      <categories>
          
          <category> AIGC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AI </tag>
            
            <tag> LLM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>通过 LLM 模型的名称解读不同模型之间的区别</title>
      <link href="/LLM-Model-Files-Difference/"/>
      <url>/LLM-Model-Files-Difference/</url>
      
        <content type="html"><![CDATA[<h2 id="LLM-模型尺寸（参数量）"><a href="#LLM-模型尺寸（参数量）" class="headerlink" title="LLM 模型尺寸（参数量）"></a>LLM 模型尺寸（参数量）</h2><p>一个 LLM 模型文件的尺寸指的是其参数量。例如，Gemma 2B 表示具有 20 亿参数的 Gemma 模型。</p><p>参数 (Parameter) 是模型在训练过程中学习到的权重 (weights) 和偏置 (biases)，用于控制输入数据到输出的映射关系。参数存储了模型对语言规律（如语法、语义、上下文关联）的“知识”。例如，某个参数可能决定“猫”和“狗”在特定语境下的关联强度。</p><p>参数量较大的 LLM 拥有比其较小版本更多的参数，这通常使它们能够捕捉更复杂的语言关系并处理更细微的提示。它们通常还在更大的数据集上进行训练。参数越多，模型理论上能捕捉的复杂模式越多。例如，GPT-3（175B参数）相比GPT-2（1.5B参数）能生成更连贯的长文本，处理更复杂的推理任务。</p><p>某些模型参数量比较常见，如 20 亿或 70 亿，是常见的。例如 Gemma 2B、Gemma 7B 或 Mistral 7B。模型大小类别是近似的分组。例如 Gemma 2B 大约有 20 亿个参数，但不完全精确。下图展示了HuggingFace 上的模型大小类别（这些类别并非行业标准，而是自然形成的）：</p><img src="/LLM-Model-Files-Difference/LLM-Model-Files-Difference_1.png" class="" title="图片"><p>虽然大多数最新一代的 LLMs（如 GPT-4 和 Gemini Pro 或 Ultra）的模型大小并未总是公开披露，但据信它们包含数百亿或数千亿个参数。并非所有模型都在其名称中标注参数数量。有些模型会以版本号作为后缀。例如，Gemini 1.5 Pro 指的是该模型的 1.5 版本（在 1 版本之后）。</p><img src="/LLM-Model-Files-Difference/LLM-Model-Files-Difference_2.png" class="" title="图片"><h3 id="LLM-参数量无法直接衡量不同模型之间的性能差距"><a href="#LLM-参数量无法直接衡量不同模型之间的性能差距" class="headerlink" title="LLM 参数量无法直接衡量不同模型之间的性能差距"></a>LLM 参数量无法直接衡量不同模型之间的性能差距</h3><p>对于不同的 LLM 模型，无法直接通过参数量衡量它们之间的性能差距。对于特定任务，较小的模型可以与较大的模型达到相同的性能。</p><h3 id="参数效率-Parameter-Efficiency"><a href="#参数效率-Parameter-Efficiency" class="headerlink" title="参数效率 (Parameter Efficiency)"></a>参数效率 (Parameter Efficiency)</h3><p><strong>参数量并非越大越好。</strong>在固定计算预算下，模型参数和数据量需平衡。例如，700B参数模型搭配4.5T tokens训练可能不如更小模型（如40B参数）搭配更多数据（如12T tokens）高效。</p><p><strong>参数量大的模型可以通过混合专家 (Mixture of Experts, MoE) 提升效率。</strong>例如，DeepSeek-R1-671B 的每个 token 的激活参数是 37B，在特定设备上（如配备显存大于 40GB 的高速GPU，内存大于 512GB的平台），其性能和运行速度可能都会超过 DeepSeek-R1-Distill-Llama-70B。</p><br/><h2 id="判断某个参数量的-LLM-模型能否在指定设备上运行"><a href="#判断某个参数量的-LLM-模型能否在指定设备上运行" class="headerlink" title="判断某个参数量的 LLM 模型能否在指定设备上运行"></a>判断某个参数量的 LLM 模型能否在指定设备上运行</h2><p>更大的 LLM 需要大量的存储空间和强大的计算能力来进行推理。它们需要在配备特定硬件（如 GPU、TPU）的专用高性能服务器上运行。</p><p>我们通常想知道的是：模型是否足够可以下载并在指定设备上运行？这个问题没有准确的定论，有以下原因：</p><ul><li>设备的能力在内存、GPU&#x2F;CPU 规格等方面差异很大。低端安卓手机和 NVIDIA® RTX 电脑差异巨大。</li><li>一个模型或其运行的框架可能针对特定硬件进行了优化。</li></ul><p>根据经验来说，具有多大显存的 NVIDIA GPU 或是多大融合内存的 Apple Silicon Mac，就能高速运行多少 B（billion，十亿）参数的 LLM 模型的 Q4_KM 量化版本，这考虑到了为上下文预留充足的显存或融合内存；例如，NVIDIA® RTX 3070@8GB 或是 MacBook Pro M1 8GB 可以高速运行 DeepSeek-R1-Distill-Llama-8B 的 Q4_KM 版本。在显存不足的时候，保证显存+内存的总和接近 LLM 的 B（billion，十亿）参数量，通常也能运行 LLM 模型的 Q4_KM 版本，只是部分推理交给 CPU，会导致推理速度大幅下降；例如，Intel 的双 Xeon CPU 平台，配备 512GB 内存，没有 GPU 或 TPU，也能运行 DeepSeek-R1-671B 的 Q4_KM 版本，输出速度在 10 tokens&#x2F;s 以下。</p><h2 id="模型压缩技术"><a href="#模型压缩技术" class="headerlink" title="模型压缩技术"></a>模型压缩技术</h2><p>存在多种技术可以显著减少模型的内存需求：</p><ul><li>LoRA (Low-Rank Adaptation)：一种微调技术，其中预训练的权重被冻结。<a href="https://ai.google.dev/gemma/docs/lora_tuning#:%7E:text=Low%20Rank%20Adaptation%20(LoRA)%20is">了解更多关于 LoRA 的信息。</a></li><li>剪枝 (Pruning)：从模型中移除不太重要的权重以减小其大小。</li><li>量化 (Quantization)：将权重的精度从浮点数（例如，32-bit）降低到较低位表示（例如，8-bit）。</li><li>蒸馏 (Distill)：训练一个较小的模型来模仿一个较大、预训练模型的行为。</li><li>参数共享 (Parameter sharing)：使用相同的权重来表示模型的多个部分，减少唯一参数的总数。</li></ul><p>下文将具体讲解量化和蒸馏。</p><h3 id="量化-Quantization"><a href="#量化-Quantization" class="headerlink" title="量化 (Quantization)"></a>量化 (Quantization)</h3><p>量化是将模型权重从高精度（如 FP16&#x2F;FP32）转换为低精度（如 INT8&#x2F;INT4&#x2F;INT3）的过程，通过减少数值表示的位数来：</p><ul><li>减小模型体积（存储占用更低）</li><li>降低内存带宽需求（推理更快）</li><li>减少计算资源消耗（适合边缘设备）</li></ul><h4 id="量化版本命名规则"><a href="#量化版本命名规则" class="headerlink" title="量化版本命名规则"></a><strong>量化版本命名规则</strong></h4><p>以 <code>llama.cpp</code> 的量化方案为例，名称格式一般为 **<code>Q&lt;位数&gt;_&lt;分组策略&gt;</code>**：</p><ul><li><strong><code>Q3</code>, <code>Q4</code>, <code>Q6</code>, <code>Q8</code><strong>：表示量化的</strong>位数</strong>（如 3-bit、4-bit、6-bit、8-bit）。</li><li><code>_K_L</code>, <code>_K_M</code>, <code>_K_S</code>：表示分组量化策略，其中：<ul><li><code>K</code>：使用 <strong>k-means 聚类</strong>优化量化（非均匀量化，更适应权重分布）</li><li><code>L/M/S</code>：分组粒度（Large&#x2F;Medium&#x2F;Small），即权重的分块大小：<ul><li><strong>大块（L）</strong>：每组包含更多权重，压缩率更高，但精度损失可能更大。</li><li><strong>小块（S）</strong>：每组权重更少，保留更多细节，精度更高，但压缩率低。</li></ul></li></ul></li></ul><h4 id="常见量化版本对比"><a href="#常见量化版本对比" class="headerlink" title="常见量化版本对比"></a><strong>常见量化版本对比</strong></h4><table><thead><tr><th><strong>量化版本</strong></th><th><strong>位数</strong></th><th><strong>分组策略</strong></th><th><strong>模型体积（以7B模型为例）</strong></th><th><strong>精度损失</strong></th><th><strong>适用场景</strong></th></tr></thead><tbody><tr><td><strong>Q2_K</strong></td><td>2-bit</td><td>K-means + 大块分组</td><td>~2.8GB</td><td>高</td><td>极致压缩，低资源设备快速推理</td></tr><tr><td><strong>Q3_K_L</strong></td><td>3-bit</td><td>K-means + 大块分组</td><td>~3.3GB</td><td>较高</td><td>速度优先，接受一定精度损失</td></tr><tr><td><strong>Q3_K_M</strong></td><td>3-bit</td><td>K-means + 中块分组</td><td>~3.5GB</td><td>中</td><td>平衡速度和精度</td></tr><tr><td><strong>Q4_K_M</strong></td><td>4-bit</td><td>K-means + 中块分组</td><td>~4.2GB</td><td>较低</td><td>推荐默认选择，性价比最高</td></tr><tr><td><strong>Q5_K_M</strong></td><td>5-bit</td><td>K-means + 中块分组</td><td>~5.0GB</td><td>低</td><td>接近FP16精度，资源较充足</td></tr><tr><td><strong>Q6_K</strong></td><td>6-bit</td><td>K-means + 小块分组</td><td>~6.0GB</td><td>极低</td><td>高精度需求，牺牲部分压缩率</td></tr><tr><td><strong>Q8_0</strong></td><td>8-bit</td><td>均匀分组（无优化）</td><td>~7.5GB</td><td>可忽略</td><td>接近原始模型，用于调试或研究</td></tr></tbody></table><h4 id="关键区别"><a href="#关键区别" class="headerlink" title="关键区别"></a><strong>关键区别</strong></h4><ol><li>量化位宽（精度）：<ul><li>位数越低（如 <code>Q3_K</code>），模型体积越小，但可能丢失更多细节（如罕见词或复杂推理能力）。</li><li>位数越高（如 <code>Q8_0</code>），模型越接近原始FP16精度，但体积和内存需求更大。</li></ul></li><li>分组策略（块大小）：<ul><li><strong>大块（L）</strong>：压缩效率更高，但量化误差可能在组内累积（适合对长文本生成要求不高的场景）。</li><li><strong>小块（S）</strong>：保留更多局部权重细节（适合需要高精度的数学推理或知识问答）。</li></ul></li><li>是否使用k-means优化：<ul><li>带 <code>K</code> 的版本（如 <code>Q4_K_M</code>）通过聚类优化量化区间分配，相比均匀量化（如 <code>Q8_0</code>）能更好地适应权重分布，减少精度损失。</li></ul></li></ol><h4 id="实际效果对比"><a href="#实际效果对比" class="headerlink" title="实际效果对比"></a><strong>实际效果对比</strong></h4><ul><li>生成质量：<ul><li><code>Q4_K_M</code> 在大多数任务（对话、摘要）中与原始模型差异较小。</li><li><code>Q3_K_L</code> 可能在生成复杂逻辑文本时出现错误或重复。</li></ul></li><li>推理速度：<ul><li>低精度模型（如 <code>Q3_K_M</code>）在CPU&#x2F;低端GPU上速度更快（减少内存带宽压力）。</li><li>高精度模型（如 <code>Q6_K</code>）需要更多计算资源，适合高端GPU。</li></ul></li></ul><h3 id="蒸馏-Distillation"><a href="#蒸馏-Distillation" class="headerlink" title="蒸馏 (Distillation)"></a>蒸馏 (Distillation)</h3><p>LM 蒸馏 (Distillation) 是一种技术，用于将大型语言模型 (LLM) 的知识转移到较小的模型中。其主要目的是在保持模型性能的同时，减少模型的大小和计算资源需求。通过蒸馏技术，较小的模型可以在推理时更高效地运行，适用于资源受限的环境。</p><img src="/LLM-Model-Files-Difference/LLM-Model-Files-Difference_3.jpg" class="" title="图片"><h4 id="蒸馏过程"><a href="#蒸馏过程" class="headerlink" title="蒸馏过程"></a><strong>蒸馏过程</strong></h4><p>蒸馏过程通常包括以下几个步骤：</p><ol><li><p>训练教师模型：首先训练一个大型且性能优越的教师模型。</p></li><li><p>生成软标签：使用教师模型对训练数据进行预测，生成软目标 (soft targets) ，这些目标包含了教师模型的概率分布信息。</p></li><li><p>训练学生模型：使用软目标 (soft targets) 和原始训练数据 (hard targets) 来训练较小的学生模型，使其能够模仿教师模型的行为。 这种方法不仅可以提高模型的效率，还可以在某些情况下提高模型的泛化能力。</p></li></ol><h4 id="蒸馏可能存在的问题"><a href="#蒸馏可能存在的问题" class="headerlink" title="蒸馏可能存在的问题"></a><strong>蒸馏可能存在的问题</strong></h4><ul><li>信息丢失：由于学生模型比教师模型小，可能无法完全捕捉教师模型的所有知识和细节，导致信息丢失。</li><li>依赖教师模型：学生模型的性能高度依赖于教师模型的质量，如果教师模型本身存在偏差或错误，学生模型可能会继承这些问题。例如，尽管参数量接近，DeepSeek-R1-0528-Qwen3-8B 比 DeepSeek-R1-Distill-Qwen-7B（后者基于 Qwen2.5）具有比较明显的性能优势。</li><li>适用性限制：蒸馏技术可能不适用于所有类型的模型或任务，尤其是那些需要高精度和复杂推理的任务。</li></ul>]]></content>
      
      
      <categories>
          
          <category> AIGC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AI </tag>
            
            <tag> LLM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用 LM Studio 本地部署 LLM</title>
      <link href="/LLM-Local-Deployment/"/>
      <url>/LLM-Local-Deployment/</url>
      
        <content type="html"><![CDATA[<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>你需要一台运行有 Windows、macOS 或 Linux 的电脑。考虑到 LLM 的生成速度，建议至少是台配备 NVIDIA 独立显卡的电脑，或是 Apple Silicon (M系列处理器) 的 Mac 电脑。</p><hr><h2 id="本地部署LLM-以DeepSeek-R1蒸馏版本为例"><a href="#本地部署LLM-以DeepSeek-R1蒸馏版本为例" class="headerlink" title="本地部署LLM - 以DeepSeek R1蒸馏版本为例"></a>本地部署LLM - 以DeepSeek R1蒸馏版本为例</h2><p>这里推荐使用 LM Studio 进行本地部署。相较于 Ollama，LM Studio 具有友好的 UI 界面，更丰富的功能集和更大的模型库。</p><blockquote><p>如果你想尝试使用 Ollama 部署，可以参考这个教程：<a href="https://www.53ai.com/news/LargeLanguageModel/2024081317230.html">53AI知识库 - 本地部署大模型？看这篇就够了，Ollama 部署和实战</a></p></blockquote><h3 id="下载LM-Studio"><a href="#下载LM-Studio" class="headerlink" title="下载LM Studio"></a>下载LM Studio</h3><p>根据电脑的系统和处理器架构选择合适的版本下载：</p><a class="btn-anzhiyu larger" href="https://lmstudio.ai/download/"   title="下载 LM Studio"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>下载 LM Studio</span></a><h3 id="安装LM-Studio"><a href="#安装LM-Studio" class="headerlink" title="安装LM Studio"></a>安装LM Studio</h3><p>按照提示，安装即可。</p><h3 id="下载适合的模型版本"><a href="#下载适合的模型版本" class="headerlink" title="下载适合的模型版本"></a>下载适合的模型版本</h3><p>点击搜索按钮：</p><img src="/LLM-Local-Deployment/LLM-Local-Deployment_1.png" class="" title="图片"><p>搜索 DeepSeek R1 Distill（对于Mac电脑，建议在搜索框右侧取消勾选GGUF，仅勾选MLX）:</p><img src="/LLM-Local-Deployment/LLM-Local-Deployment_2.jpg" class="" title="图片"><p>考虑到下载时间可能比较长，可以从其他方式下载 DeepSeek-R1-Distill-Qwen-7B 的 GGUF 或 MLX 格式模型的离线文件，将文件移动到模型存放目录即可。模型存放目录可通过以下方式打开：</p><p>点击 My Models：</p><img src="/LLM-Local-Deployment/LLM-Local-Deployment_3.png" class="" title="图片"><p>点击“…” → Open in File Explorer：</p><img src="/LLM-Local-Deployment/LLM-Local-Deployment_4.png" class="" title="图片"><h3 id="加载模型"><a href="#加载模型" class="headerlink" title="加载模型"></a>加载模型</h3><p>点击 Developer：</p><img src="/LLM-Local-Deployment/LLM-Local-Deployment_5.png" class="" title="图片"><p>启动本地服务：</p><img src="/LLM-Local-Deployment/LLM-Local-Deployment_6.png" class="" title="图片"><p>点击加载模型。选择合适的模型，如果出现下面的选项框，无需改动直接 Load Model 即可：</p><img src="/LLM-Local-Deployment/LLM-Local-Deployment_7.jpg" class="" title="图片"><p>然后就可以新建对话，在 LM Studio 中测试对话了。</p><hr><h2 id="本地LLM的简单应用"><a href="#本地LLM的简单应用" class="headerlink" title="本地LLM的简单应用"></a>本地LLM的简单应用</h2><p>这里准备了一段实例代码，让部署在本地的 DeepSeek-R1-Distill-Qwen-7B 做一些简单的数据分析任务，并且根据它的知识库猜一猜所给数字的可能规律，以及预测下一位数字。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># LLMtest.py</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">analyze_data</span>():</span><br><span class="line">    analysis_text = <span class="string">f&quot;1, 1, 2, 3, 5, 8, 13, 21&quot;</span> <span class="comment"># 换成你的问题</span></span><br><span class="line">    <span class="keyword">return</span> analysis_text</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_llm_analysis</span>(<span class="params">prompt</span>):</span><br><span class="line">    api_url = <span class="string">&quot;http://127.0.0.1:1234/v1/chat/completions&quot;</span> <span class="comment"># 换成你的服务器地址</span></span><br><span class="line">    </span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    payload = &#123;</span><br><span class="line">        <span class="string">&quot;model&quot;</span>: <span class="string">&quot;DeepSeek-R1-Distill-Qwen-7B-Q4_K_M.gguf&quot;</span>, <span class="comment"># 换成你的模型名称</span></span><br><span class="line">        <span class="string">&quot;messages&quot;</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="string">&quot;role&quot;</span>: <span class="string">&quot;user&quot;</span>,</span><br><span class="line">                <span class="string">&quot;content&quot;</span>: <span class="string">f&quot;&quot;&quot;<span class="subst">&#123;prompt&#125;</span>\n你是一位经验丰富的数据分析师，拥有丰富的数</span></span><br><span class="line"><span class="string">                据处理和分析经验。请计算所给数据的：\n1.平均数\n2.最值\n3.可能存在的</span></span><br><span class="line"><span class="string">                规律\n4.下一位数字的可能值&quot;&quot;&quot;</span> <span class="comment"># 换成你的prompt</span></span><br><span class="line">            &#125;</span><br><span class="line">        ],</span><br><span class="line">        <span class="string">&quot;temperature&quot;</span>: <span class="number">0.3</span> <span class="comment">#设定模型温度</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        response = requests.post(api_url, headers=headers, data=json.dumps(payload))</span><br><span class="line">        response.raise_for_status()</span><br><span class="line">        <span class="keyword">return</span> response.json()[<span class="string">&#x27;choices&#x27;</span>][<span class="number">0</span>][<span class="string">&#x27;message&#x27;</span>][<span class="string">&#x27;content&#x27;</span>]</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">f&quot;API请求失败：<span class="subst">&#123;<span class="built_in">str</span>(e)&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 主程序</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    data = analyze_data()</span><br><span class="line">    system_prompt = <span class="string">f&quot;<span class="subst">&#123;data&#125;</span>\n\n根据以上统计数据，直接给出答案，无需遵循markdown格式&quot;</span></span><br><span class="line">    analysis_result = get_llm_analysis(system_prompt)</span><br><span class="line">    <span class="built_in">print</span>(analysis_result)</span><br></pre></td></tr></table></figure><p>运行结果如下：</p><img src="/LLM-Local-Deployment/LLM-Local-Deployment_8.png" class="" title="图片">]]></content>
      
      
      <categories>
          
          <category> AIGC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AI </tag>
            
            <tag> LLM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用 Git 和 GitHub 版本控制和代码同步</title>
      <link href="/Git-GitHub-Code-Version-Control/"/>
      <url>/Git-GitHub-Code-Version-Control/</url>
      
        <content type="html"><![CDATA[<h2 id="什么是版本控制？"><a href="#什么是版本控制？" class="headerlink" title="什么是版本控制？"></a>什么是版本控制？</h2><p>版本控制系统是一种用于跟踪、执行和管理软件代码更改的工具。它也称为源代码控制。</p><p>版本控制系统可帮助开发人员存储他们在不同阶段对文件所做的每项更改，以便他们和团队成员可以在以后检索这些更改。</p><br/><h2 id="什么是-Git？"><a href="#什么是-Git？" class="headerlink" title="什么是 Git？"></a>什么是 Git？</h2><p>Git 是一个免费的开源分布式版本控制系统，你可以使用它来跟踪文件中的更改。你可以在 Git 中处理所有类型的项目。</p><p>使用 Git，你可以将更改添加到代码中，然后在准备好时提交（或保存）它们。这意味着你还可以返回之前所做的更改。</p><br/><h2 id="什么是-GitHub？"><a href="#什么是-GitHub？" class="headerlink" title="什么是 GitHub？"></a><strong>什么是 GitHub？</strong></h2><p>GitHub 是一个 Web 界面，你可以在其中存储 Git 仓库并有效地跟踪和管理你的更改。它使操作同一项目的各种开发人员可以访问代码。你可以在其他开发人员进行更改的同时对项目进行自己的更改。</p><p>如果你在进行更改时不小心弄乱了项目中的某些代码，你可以轻松地回到尚未发生混乱的上一个阶段。</p><br/><h2 id="使用-Git-和-GitHub-版本控制和代码同步"><a href="#使用-Git-和-GitHub-版本控制和代码同步" class="headerlink" title="使用 Git 和 GitHub 版本控制和代码同步"></a>使用 Git 和 GitHub 版本控制和代码同步</h2><h3 id="一、安装-Git"><a href="#一、安装-Git" class="headerlink" title="一、安装 Git"></a>一、安装 Git</h3><p>访问 <a href="https://git-scm.com/">Git 官网</a> 下载适合你操作系统的最新版本，安装在你的计算机上。在控制台使用下面的命令检查是否已成功安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git --version</span><br></pre></td></tr></table></figure><h3 id="二、配置-Git"><a href="#二、配置-Git" class="headerlink" title="二、配置 Git"></a>二、配置 Git</h3><p>配置用户信息（在每台设备上都需要配置）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;你的GitHub用户名&quot;</span></span><br><span class="line">git config --global user.email <span class="string">&quot;你的GitHub绑定邮箱&quot;</span></span><br></pre></td></tr></table></figure><h3 id="三、新建-GitHub-Repositories"><a href="#三、新建-GitHub-Repositories" class="headerlink" title="三、新建 GitHub Repositories"></a>三、新建 GitHub Repositories</h3><p>在 <a href="https://github.com/">GitHub</a> 登陆你的账户，点击首页的“+”，选择 New repositorie 创建。</p><p>设置你的 Repository name，选择可见性为“公开”或“私密”。</p><p>你可以添加 README（用来介绍存储库）、.gitignore（设置Git push时不上传的文件）、license（开源许可证）。</p><h3 id="四、创建-GitHub-PAT-Personal-access-tokens"><a href="#四、创建-GitHub-PAT-Personal-access-tokens" class="headerlink" title="四、创建 GitHub PAT (Personal access tokens)"></a>四、创建 GitHub PAT (Personal access tokens)</h3><p>在 GitHub 点击你的头像 - Settings - Developer Settings - Personal access tokens - Tokens (classic).</p><p>点击 Generate new token - Generate new token (classic).</p><p>设置 Note（备注名）、过期时间和权限，最后点击 Generate token.</p><p>记住给出的 token，后面要用。</p><h3 id="五、创建本地仓库并推送到-GitHub"><a href="#五、创建本地仓库并推送到-GitHub" class="headerlink" title="五、创建本地仓库并推送到 GitHub"></a>五、创建本地仓库并推送到 GitHub</h3><ol><li>首先进入代码目录（以 Windows 为例）：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">D:</span><br><span class="line"><span class="built_in">cd</span> D:/MyProjects/Example/</span><br></pre></td></tr></table></figure><ol start="2"><li>初始化 Git 仓库：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><ol start="3"><li>添加所有文件到暂存区：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></table></figure><ol start="4"><li>创建一次提交（引号内的字符串可以替换）：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m <span class="string">&quot;Initial commit&quot;</span></span><br></pre></td></tr></table></figure><ol start="5"><li>将本地仓库与 GitHub 远程仓库关联：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin https://github.com/你的用户名/你的Repo名.git</span><br></pre></td></tr></table></figure><ol start="6"><li><p>推送代码到 GitHub：</p><blockquote><p>在这一步中，可能会让你填写 GitHub 用户名和密码，注意这里的密码是填上一步中创建的 token.</p></blockquote></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin main</span><br></pre></td></tr></table></figure><h3 id="六、在另一台设备上克隆仓库"><a href="#六、在另一台设备上克隆仓库" class="headerlink" title="六、在另一台设备上克隆仓库"></a>六、在另一台设备上克隆仓库</h3><p>在另一台设备上选择一个合适的目录，然后克隆仓库：</p><blockquote><p>在这一步中，可能会让你填写 GitHub 用户名和密码，注意这里的密码是填上一步中创建的 token.</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/你的用户名/你的Repo名.git</span><br></pre></td></tr></table></figure><h3 id="七、日常工作流程"><a href="#七、日常工作流程" class="headerlink" title="七、日常工作流程"></a>七、日常工作流程</h3><ol><li><p>在任一设备上开始工作前：</p><blockquote><p>这会拉取远程仓库的最新变更。</p></blockquote></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull origin main</span><br></pre></td></tr></table></figure><ol start="2"><li>在任一设备上完成工作后：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;描述你的更改&quot;</span></span><br><span class="line">git push origin main</span><br></pre></td></tr></table></figure><h3 id="八、处理冲突的情况"><a href="#八、处理冲突的情况" class="headerlink" title="八、处理冲突的情况"></a>八、处理冲突的情况</h3><ol><li>如果你在两个设备上都修改了同一个文件，可能会遇到合并冲突。处理方法：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull origin main</span><br></pre></td></tr></table></figure><ol start="2"><li>Git 会提示哪些文件有冲突。打开冲突文件，你会看到类似这样的标记：</li></ol><figure class="highlight asciidoc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</span><br><span class="line"><span class="section">你在当前设备上的修改</span></span><br><span class="line"><span class="section">=======</span></span><br><span class="line">你在另一设备上的修改</span><br><span class="line">&gt;&gt;&gt;&gt;&gt;&gt;&gt; branch-name</span><br></pre></td></tr></table></figure><ol start="3"><li>手动编辑文件，保留你需要的内容，删除冲突标记，然后：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add 冲突文件名</span><br><span class="line">git commit -m <span class="string">&quot;解决合并冲突&quot;</span></span><br><span class="line">git push origin main</span><br></pre></td></tr></table></figure><h3 id="九、一些建议"><a href="#九、一些建议" class="headerlink" title="九、一些建议"></a>九、一些建议</h3><ol><li><p>建议创建 <code>.gitignore</code> 文件来忽略不需要同步的文件（如编译产物、临时文件等）。</p></li><li><p>“origin” 是远程仓库的<strong>别名</strong>，它只是一个名字，你可以自由选择。”origin” 是 Git 的<strong>默认约定</strong>，当你使用 <code>git clone</code> 克隆仓库时，Git 会自动将远程仓库命名为 “origin”。这就像是给远程仓库起了个昵称，方便后续引用。<br>你可以用这个命令查看当前配置的远程仓库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote -v</span><br></pre></td></tr></table></figure><p>重命名现有的远程仓库别名：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote rename oldname newname</span><br></pre></td></tr></table></figure><p>如果你之前设置了上游分支（用过 <code>git push -u github main</code>），重命名后这个关联仍然有效，因为 Git 会自动更新这个关联。不过为了确保一切正常，建议重新设置一次上游分支：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u newname main</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 开发 </tag>
            
            <tag> GitHub </tag>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为博客配置Cloudflare免费CDN加速</title>
      <link href="/Cloudflare-Free-CDN/"/>
      <url>/Cloudflare-Free-CDN/</url>
      
        <content type="html"><![CDATA[<h2 id="Cloudflare免费CDN加速"><a href="#Cloudflare免费CDN加速" class="headerlink" title="Cloudflare免费CDN加速"></a>Cloudflare免费CDN加速</h2><p>打开<a href="https://www.cloudflare.com/zh-cn/">Cloudflare中文官网</a></p><p>如果你没有Cloudflare账号，就去注册一个，这里不再赘述。</p><p>登陆你的Cloudflare账号，点击网站 - 添加站点。</p><p>输入你刚刚注册的域名，然后点击“添加站点”，选择最下面0美元的方案。</p><p>然后添加名称为<code>@</code>的A类型记录，IPv4地址如下，至少添加以下中的一个：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">185.199.108.153</span><br><span class="line">185.199.109.153</span><br><span class="line">185.199.110.153</span><br><span class="line">185.199.111.153</span><br></pre></td></tr></table></figure><p>添加一个名称为<code>www</code>的CNAME类型记录，目标为<code>Your_GitHub_UserName.github.io</code></p><p>最后保存，接下来的都可以使用默认设置。</p><p>回到<a href="https://my.freenom.com/clientarea.php?action=domains">Freenom主页</a>，选择Service - My Domains，点击“Manage Domain”，然后选择Management Tools - Nameservers，选择“Use custom nameservers (enter below)”，然后如下图一样输入Cloudflare刚刚给你的两个Nameserver（不区分大小写），最后点击“Change nameservers”：</p><img src="/Cloudflare-Free-CDN/Cloudflare-Free-CDN_1.png" class="" title="图片"><br/><hr><h2 id="配置Github-Page"><a href="#配置Github-Page" class="headerlink" title="配置Github Page"></a>配置Github Page</h2><p>打开<a href="https://github.com/">Github</a>并登陆。</p><p>确保你的博客部署在了Your_GitHub_UserName.github.io库(Repository)的master分支(branch)。</p><p>然后点击库的“Settings”：</p><img src="/Cloudflare-Free-CDN/Cloudflare-Free-CDN_2.png" class="" title="图片"><p>点击左栏中的“Pages”。</p><p>在“Custom domain”中输入刚刚注册的域名，点击“Save”，勾选下面的“Enforce HTTPS”。</p><img src="/Cloudflare-Free-CDN/Cloudflare-Free-CDN_3.png" class="" title="图片"><p><strong>最后更改一些博客的文件：</strong></p><p>创建一个名为“CNAME”的文件，无文件扩展名，文件中写入你刚刚注册的域名。文件位置： <code>~/blog/source/CNAME</code>（Hexo）；<code>~/blog/static/CNAME</code>（Hugo）。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">你可以先创建一个.txt或.c文件，在输入完域名后再将文件扩展名删除</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">或者你可以在控制台中使用以下指令：</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Linux/macOS:</span></span><br><span class="line">vim CNAME</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Windows:</span></span><br><span class="line">copy con CNAME</span><br></pre></td></tr></table></figure><p>在Hexo 中，然后修改站点配置文件，将博客地址改为你刚刚注册的域名，文件位置：<code>~/blog/_config.yml</code>：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## If your site is put in a subdirectory, set url as &#x27;http://yoursite.com/child&#x27; and root as &#x27;/child/&#x27;</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">url:</span> <span class="string">https://Your_GitHub_UserName.github.io/</span></span><br><span class="line"><span class="string">+</span> <span class="attr">url:</span> <span class="string">https://Your_Domain_Name.tk/</span></span><br></pre></td></tr></table></figure><p>最后Hexo三件套：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure><br/><hr><h2 id="一些小问题"><a href="#一些小问题" class="headerlink" title="一些小问题"></a>一些小问题</h2><p>我在Github Page的设置中，始终无法启用Github Pages的Enforce HTTPS，导致访问博客时，浏览器会提示“不安全”。</p><p>对此，我的解决方案是：</p><p>在Cloudflare - SSL&#x2F;TLS - 概述中，选择您的 SSL&#x2F;TLS 加密模式为 完全；</p><p>在Cloudflare - SSL&#x2F;TLS - 边缘证书中，启用“始终使用 HTTPS”。</p>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 网络 </tag>
            
            <tag> Cloudflare </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TrollStore：IPA 无限量永久签名</title>
      <link href="/iOS-TrollStore/"/>
      <url>/iOS-TrollStore/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>只看名字，你或许以为这是一个第三方应用商店，但是当安装好 TrollStore，你会发现并不能直接安装任何APP。事实上，TrollStore 更接近于我之前提到的 <a href="https://miqier.github.io/iOS-Sideloading-AltStore/">AltStore</a>，是一个侧载 APP 的工具，只不过 TrollStore 可以无限量、无限期安装 IPA 软件包，无需电脑端刷新，而且一些只能由 TrollStore 安装的工具，会提供系统底层的数据甚至修改。而对比越狱，安装 TrollStore 虽然也是利用了 iOS &#x2F; iPadOS 的漏洞，但不会像越狱一样无法使用银行 APP。</p><br/><hr><h2 id="安装-TrollStore"><a href="#安装-TrollStore" class="headerlink" title="安装 TrollStore"></a>安装 TrollStore</h2><p>截至2024年中，从14.0到17.0的绝大部分 iOS &#x2F; iPadOS 都已获得支持。由于系统跨度巨大，涉及的设备众多，TrollStore 的具体安装方法要根据你的设备型号以及运行的系统版本确定。且随着越来越多的开发者参与其中，安装方法也在不断地推陈出新，安装步骤越来越简单：从一开始需要电脑配合安装，并不断重启设备才可能成功；到无需电脑，仅通过 Safari 访问在线安装网站即可完成安装。</p><p>因此，这里只提供官方的教程网站，自行查阅安装方法。网站为英文，英文不好的用户自行配合翻译器使用。</p><a class="btn-anzhiyu block center larger" href="https://ios.cfw.guide/installing-trollstore/"   title="安装 TrollStore"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>安装 TrollStore</span></a><p>以下是截至2024年中，对上面网站的 copy：</p><blockquote><p>If your device is on iOS 14.0 beta 1 or earlier, is running iOS 16.7.x (excluding 16.7 RC (20H18)), or is running iOS 17.0.1 or newer, it will never be supported by TrollStore.</p><p>如果您的设备运行的是 iOS 14.0 beta 1 或更早版本、iOS 16.7.x（不包括 16.7 RC (20H18)）或 iOS 17.0.1 或更新版本，TrollStore 将永远不会支持它。</p></blockquote><img src="/iOS-TrollStore/iOS-TrollStore_1.png" class="" title="TrollStore 支持情况"><blockquote><p>根据我的测试，上图中最好用的安装器是 TrollRestore，它无需前期通过 AltStore 等自签方式在设备上安装软件，仅靠电脑端软件一键安装，即可成功安装 TrollStore。并且，部分需要 TrollInstallerX 的设备，也可以通过 TrollRestore 安装。</p></blockquote><a class="btn-anzhiyu green larger" href="https://github.com/JJTech0130/TrollRestore/"   title="TrollRestore"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>TrollRestore</span></a><p>表格中并不是以 iPhone &#x2F; iPad 的型号作为检索条件的，而是以处理器的型号。如果你不知道你的设备使用哪款处理器，可以查阅这个网站 <a class="btn-anzhiyu blue" href="https://hubweb.cn/"   title="Apple 苹果产品参数中心"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>Apple 苹果产品参数中心</span></a></p><br/><hr><h2 id="安装-APP"><a href="#安装-APP" class="headerlink" title="安装 APP"></a>安装 APP</h2><p>通过把 .ipa 或 .tipa 格式的安装包分享到 TrollStore，再点击 install，即可完成 APP 的安装。</p><p>下面推荐几个下载安装包的网站：</p><span><a class="btn-anzhiyu green larger" href="https://pan.kukago.cn/"   title="酷卡软件源"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>酷卡软件源</span></a><a class="btn-anzhiyu blue larger" href="https://ipa.store/"   title="iPA商店"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>iPA商店</span></a><a class="btn-anzhiyu pink larger" href="https://pan.iosi.vip/"   title="iosi.vip"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>iosi.vip</span></a><a class="btn-anzhiyu purple larger" href="https://pan.dumpapp.com/"   title="DumpApp"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>DumpApp</span></a></span><br/><hr><h2 id="TrollStore-的功能"><a href="#TrollStore-的功能" class="headerlink" title="TrollStore 的功能"></a>TrollStore 的功能</h2><p>包括但不限于：</p><ol><li>免费安装需要付费的买断制软件，比如买断制游戏、GoodNotes、Videoleap 等；</li><li>安装破解内购的软件，解锁内购权限，比如 infuse、PDF Expert、Documents 等；</li><li>安装注入插件的软件，使其拥有原版没有的功能（最常见的是破解广告），比如 YouTube (YTLite, YouPiP, YTUHD 等插件)，微信 (微X模块)，Spotify (Permium 插件) 等；</li><li>安装由于各种原因不能上架 AppStore 的软件，比如猫影视、小熊等；</li><li>安装性能更强的虚拟机，提供 JIT 或其他底层功能，比如 UTM、PPSSPP 等；</li><li>安装只能由 TrollStore 安装的软件，通常是 .tipa 格式，以提供更底层的功能，比如 Filza、TrollSpeed、ChargeLimiter 等（这里下面将细讲）。</li></ol><br/><hr><h2 id="只能由-TrollStore-安装的软件"><a href="#只能由-TrollStore-安装的软件" class="headerlink" title="只能由 TrollStore 安装的软件"></a>只能由 TrollStore 安装的软件</h2><p>下面这些是我使用过的软件，肯定不止这些，实际可用的比这多得多。</p><h3 id="1-Filza"><a href="#1-Filza" class="headerlink" title="1. Filza"></a>1. Filza</h3><p>这是一款可以修改部分系统底层文件的软件，可以实现很多通常只有越狱才能做到的功能，下面的章节会用到。注意，数字人民币、银行等 APP 会通过检测是否安装 Filza 判断是否是巨魔环境，可通过清除卸载残留后安装修改版解决。</p><a class="btn-anzhiyu larger" href="https://filzadownload.com/"   title="下载Filza"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>下载Filza</span></a><h3 id="2-TrollFools"><a href="#2-TrollFools" class="headerlink" title="2. TrollFools"></a>2. TrollFools</h3><p>这是一款可以为正版软件注入 .dylib 格式插件的软件，经典的插件包括对 YouTube 功能破解的 YTLite、YouPiP、YTHUD 等。TrollFools-SLPEdition 还能注入以前只有越狱才能注入的 .deb 插件。</p><a class="btn-anzhiyu larger" href="https://github.com/Lessica/TrollFools/"   title="下载TrollFools"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>下载TrollFools</span></a><h3 id="3-电池助手"><a href="#3-电池助手" class="headerlink" title="3. 电池助手"></a>3. 电池助手</h3><p>这是一款不通过电脑就可以查看当前电池信息的软件，包括电池循环次数、电池设计&#x2F;剩余&#x2F;实时容量、电池当前温度&#x2F;电压、充电功率和电池电流等，并且这些信息可以以悬浮窗的形式实时显示。</p><a class="btn-anzhiyu larger" href="https://ipa.store/3282.html"   title="下载电池助手"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>下载电池助手</span></a><h3 id="4-TrollSpeed"><a href="#4-TrollSpeed" class="headerlink" title="4. TrollSpeed"></a>4. TrollSpeed</h3><p>这是一款通过悬浮窗显示当前网速的软件，使用时可以同时开启其他软件的悬浮窗（画中画），并且支持触摸穿透，高度接近安卓手机中常见的状态栏网速的功能。</p><a class="btn-anzhiyu larger" href="https://github.com/Lessica/TrollSpeed/releases"   title="下载TrollSpeed"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>下载TrollSpeed</span></a><h3 id="5-SpeeGG"><a href="#5-SpeeGG" class="headerlink" title="5. SpeeGG"></a>5. SpeeGG</h3><p>这也是一款通过悬浮窗显示当前网速的软件，比 TrollSpeed 多了自定义前缀（支持 emoji），自定义文本颜色等功能，并内置网络诊断小工具。</p><a class="btn-anzhiyu larger" href="https://www.a9x9.com/2002.html"   title="下载SpeeGG"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>下载SpeeGG</span></a><h3 id="6-ChargeLimiter"><a href="#6-ChargeLimiter" class="headerlink" title="6. ChargeLimiter"></a>6. ChargeLimiter</h3><p>将电池电量保持在20%~80%之间可以降低电池健康的损耗，在高于20%就充电很容易做到，但充到80%就停止充电对人来说是很难的。在 MacBook 上，可以使用 AlDente，使电池容量达到80%时停止充电，而 ChargeLimiter 则将这一功能带到了 iOS &#x2F; iPadOS 上。除此之外，还可以根据设备温度控制是否充电，进一步减少对电池健康的损耗。</p><a class="btn-anzhiyu larger" href="https://github.com/lich4/ChargeLimiter/releases"   title="下载ChargeLimiter"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>下载ChargeLimiter</span></a><h3 id="7-TrollRecorder"><a href="#7-TrollRecorder" class="headerlink" title="7. TrollRecorder"></a>7. TrollRecorder</h3><p>这是一款提供通话录音功能的软件，弥补了 iOS 没有通话录音功能的缺陷（打工人维权福音）。除了系统通话，微信通话也可以录音，只要是通话状态就会自动录音，通过 Filza 可以导出录音文件。</p><a class="btn-anzhiyu larger" href="https://github.com/Lessica/TrollRecorder/releases"   title="下载TrollRecorder"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>下载TrollRecorder</span></a><h3 id="8-CopyLog"><a href="#8-CopyLog" class="headerlink" title="8. CopyLog"></a>8. CopyLog</h3><p>这是一款剪切板软件，可以将功能集成到系统键盘中。原售价3.99刀，现已转为免费版。</p><a class="btn-anzhiyu larger" href="https://havoc.app/package/copylogts"   title="下载CopyLog"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>下载CopyLog</span></a><h3 id="9-AppStore"><a href="#9-AppStore" class="headerlink" title="9. AppStore++"></a>9. AppStore++</h3><p>这是一款提供软件降级功能的软件，可以扒取 AppStore 的低版本软件并替换。</p><a class="btn-anzhiyu larger" href="https://github.com/CokePokes/AppStorePlus-TrollStore/releases"   title="下载AppStore++"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>下载AppStore++</span></a><h3 id="10-AppsDump3"><a href="#10-AppsDump3" class="headerlink" title="10. AppsDump3"></a>10. AppsDump3</h3><p>这是一款提供免越狱砸壳和虚拟定位功能的软件，可以逆向从 AppStore 的应用导出 ipa 安装包。</p><a class="btn-anzhiyu larger" href="https://ipa.store/16719.html"   title="下载AppsDump2"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>下载AppsDump2</span></a><h3 id="11-TrollClear"><a href="#11-TrollClear" class="headerlink" title="11. TrollClear"></a>11. TrollClear</h3><p>这是一款巨魔环境系统清理工具，可以清理各种缓存，日志文件，临时文件等。</p><a class="btn-anzhiyu larger" href="https://ios.tinstu.com/7645.html"   title="下载TrollClear"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>下载TrollClear</span></a><h3 id="12-TrollLoc"><a href="#12-TrollLoc" class="headerlink" title="12. TrollLoc"></a>12. TrollLoc</h3><p>这是一款虚拟定位软件，由O2出品，软件支持模仿虚拟及修改GPS将手机的地理位置伪装到你想定位的全世界各个地方，可让用户的手机定位信息随时穿越世界任何地区。</p><a class="btn-anzhiyu larger" href="https://app.ucgod.cn/19679.html"   title="下载TrollLoc"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>下载TrollLoc</span></a><h3 id="13-Aemulo"><a href="#13-Aemulo" class="headerlink" title="13. Aemulo"></a>13. Aemulo</h3><p>这是一款为巨魔用户打造的 NFC 模拟器。它不受苹果的约束，能够自由读写、模拟 NFC 标签。</p><a class="btn-anzhiyu larger" href="https://github.com/Aemulo/Release/"   title="下载Aemulo"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>下载Aemulo</span></a><h3 id="14-TrollNFC"><a href="#14-TrollNFC" class="headerlink" title="14. TrollNFC"></a>14. TrollNFC</h3><p>这也是一款为巨魔用户打造的 NFC 模拟器。相比 Aemulo，它没有多什么功能。免费版仅支持模拟一张卡，付费价格$9.99 美元&#x2F;年&#x2F;一台设备。</p><a class="btn-anzhiyu larger" href="https://github.com/OwnGoalStudio/TrollNFC/"   title="下载TrollNFC"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>下载TrollNFC</span></a><h3 id="15-TrollAppDuplicator"><a href="#15-TrollAppDuplicator" class="headerlink" title="15. TrollAppDuplicator"></a>15. TrollAppDuplicator</h3><p>这是一款快速巨魔砸壳+多开的软件，在砸壳的同时自动帮你修改Bundle Identifier打包成多开ipa（ipa无全权限，多开也无推送权限）。</p><a class="btn-anzhiyu larger" href="https://havoc.app/package/appduplicator/"   title="下载TrollAppDuplicator"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>下载TrollAppDuplicator</span></a><h3 id="16-Reveil"><a href="#16-Reveil" class="headerlink" title="16. Reveil"></a>16. Reveil</h3><p>这是一款系统和安全分析工具。可视化CPU使用情况（总&#x2F;用户&#x2F;闲置），显示CPU规格和平均负载信息。可视化内存使用情况，显示内存规格，并对内存分配进行分类。显示其它系统版信息。正版在 Havoc 上售价 120 HKD。</p><a class="btn-anzhiyu larger" href="https://github.com/Lessica/Reveil/"   title="下载Reveil"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>下载Reveil</span></a><h3 id="17-UTM-HV"><a href="#17-UTM-HV" class="headerlink" title="17. UTM-HV"></a>17. UTM-HV</h3><p>这是一款虚拟机软件，可以在 iPhone &#x2F; iPad 上运行 Windows、Linux 系统，与可以通过 AltStore 等常规侧载软件安装的 UTM-SE 相比，使用 TrollStore 安装的 UTM-HV 拥有更多的可玩性，详见下表：</p><table><thead><tr><th align="center">File</th><th align="center">Description</th><th align="center">Installation</th><th align="center">JIT</th><th align="center">Hypervisor</th><th align="center">USB</th></tr></thead><tbody><tr><td align="center">UTM.deb</td><td align="center">Jailbroken iOS version</td><td align="center">Open in Cydia, dpkg, or Sileo</td><td align="center">Yes</td><td align="center">Yes(1)</td><td align="center">Yes</td></tr><tr><td align="center">UTM.dmg</td><td align="center">macOS version</td><td align="center">Mounting and copying UTM.app to &#x2F;Applications</td><td align="center">Yes</td><td align="center">Yes</td><td align="center">Yes</td></tr><tr><td align="center">UTM.ipa</td><td align="center">Non-jailbroken iOS version (sideloading)</td><td align="center">AltStore, etc (see guide)</td><td align="center">Yes(2)</td><td align="center">No</td><td align="center">No</td></tr><tr><td align="center">UTM-HV.ipa</td><td align="center">Non-jailbroken iOS version (TrollStore)</td><td align="center">TrollStore</td><td align="center">Yes</td><td align="center">Yes(1)</td><td align="center">Yes</td></tr><tr><td align="center">UTM-SE.ipa</td><td align="center">Non-jailbroken iOS version (sideloading)</td><td align="center">AltStore, enterprise signing, etc</td><td align="center">No</td><td align="center">No</td><td align="center">No</td></tr><tr><td align="center">UTM-Remote.ipa</td><td align="center">Remote client</td><td align="center">Any</td><td align="center">No</td><td align="center">No</td><td align="center">No</td></tr></tbody></table><ol><li>Hypervisor on iOS requires an M1 iPad.</li><li>Enabling JIT may require a separate JIT enabler such as <a href="https://github.com/osy/Jitterbug">Jitterbug</a> or Jitstreamer.</li></ol><a class="btn-anzhiyu larger" href="https://github.com/utmapp/UTM/releases"   title="下载UTM"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>下载UTM</span></a><br/><hr><h2 id="通过修改底层文件可以做到的功能"><a href="#通过修改底层文件可以做到的功能" class="headerlink" title="通过修改底层文件可以做到的功能"></a>通过修改底层文件可以做到的功能</h2><h3 id="彻底关闭系统更新"><a href="#彻底关闭系统更新" class="headerlink" title="彻底关闭系统更新"></a>彻底关闭系统更新</h3><p>Filza 打开路径   &#x2F;usr&#x2F;bin&#x2F;vm_stat，单击文件运行，键盘切换为英文，长按空白界面粘贴下面的禁止更新指令，回车，即可实现禁止更新效果。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">killall -9 softwareupdateservicesd &amp; killall -9 softwareupdated &amp; killall -9 com.apple.MobileSoftwareUpdate.CleanupPreparePathService &amp; killall -9 Preferences &amp; chflags -R noschg,noschange,nosimmutable &#x27;/var/MobileSoftwareUpdate/MobileAsset/&#x27; &amp; mkdir -p &#x27;/var/MobileSoftwareUpdate/MobileAsset/AssetsV2/&#x27; &amp;&amp; rm -rf &#x27;/var/MobileSoftwareUpdate/MobileAsset/AssetsV2/&#x27; &amp;&amp; mkdir -p &#x27;/var/MobileSoftwareUpdate/MobileAsset/AssetsV2/&#x27; &amp;&amp; chmod -R 0777 &#x27;/var/MobileSoftwareUpdate/MobileAsset/AssetsV2/&#x27; &amp;&amp; chown -R mobile:mobile &#x27;/var/MobileSoftwareUpdate/MobileAsset/AssetsV2/&#x27; &amp;&amp; chflags schg,schange,simmutable &#x27;/var/MobileSoftwareUpdate/MobileAsset/AssetsV2/&#x27;</span><br></pre></td></tr></table></figure><p>恢复更新：Filza 终端输入下面的恢复更新指令回车生效，就可以查找到更新，如果不行重启设备。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chflags -R noschg,noschange,nosimmutable &#x27;/var/MobileSoftwareUpdate/MobileAsset/&#x27;</span><br></pre></td></tr></table></figure><p>目前，改版 TrollStore v2.1 最终版 已集成彻底关闭系统更新的功能。</p><a class="btn-anzhiyu blue larger" href="https://app.ucgod.cn/19932.html"   title="下载改版 TrollStore v2.1"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>下载改版 TrollStore v2.1</span></a><br/><h3 id="关闭低电量提醒"><a href="#关闭低电量提醒" class="headerlink" title="关闭低电量提醒"></a>关闭低电量提醒</h3><p><strong>效果：关闭低电量提醒，注销后免解锁进入桌面</strong> </p><p>将下列代码写入到文档中，命名为<code>com.apple.springboard.plist</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> encoding=<span class="string">&quot;UTF-8&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">plist</span> <span class="keyword">PUBLIC</span> <span class="string">&quot;-//Apple//DTD PLIST 1.0//EN&quot;</span> <span class="string">&quot;http://www.apple.com/DTDs/PropertyList-1.0.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plist</span> <span class="attr">version</span>=<span class="string">&quot;1.0&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">key</span>&gt;</span>SBDontLockAfterCrash<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">true</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">key</span>&gt;</span>SBHideLowPowerAlerts<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">true</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dict</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plist</span>&gt;</span></span><br></pre></td></tr></table></figure><p>将 plist 文件分享到 Filza，移动到 &#x2F;var&#x2F;Managed Preferences&#x2F;mobile&#x2F; 文件夹下，重启或者重启用户空间生效。</p><p><strong>可自行编辑文件开启&#x2F;关闭：</strong></p><p>关闭低电量提醒：<code>SBHideLowPowerAlerts</code></p><p>注销后免解锁进入桌面：<code>SBDontLockAfterCrash </code></p><br/><h3 id="低版本-iOS-配对高版本-WatchOS"><a href="#低版本-iOS-配对高版本-WatchOS" class="headerlink" title="低版本 iOS 配对高版本 WatchOS"></a>低版本 iOS 配对高版本 WatchOS</h3><blockquote><p>教程来自<a href="https://www.feng.com/post/13717888">威锋社区 @mengjie_123</a></p></blockquote><p>Fliza找到  &#x2F;var&#x2F;mobile&#x2F;Library&#x2F;Preferences，找到 com.apple.NanoRegistry.plist</p><p>手动新建：<br>名称 <code>maxPairingCompatibilityVersion</code>，类型 <code>Number</code>，值 <code>40</code>（值越大，可配对的 WatchOS 版本越高，40可满足 WatchOS 10；</p><p>名称 <code>minPairingCompatibilityVersion</code>，类型 <code>Number</code>，值 <code>1</code>；</p><p>名称 <code>minPairingCompatibilityVersionWithChipID</code>，类型<code>Number</code>，值 <code>1</code>；</p><p>名称 <code>IOS_PAIRING_EOL_MIN_PAIRING_COMPATIBILITY_VERSION_CHIPIDS</code>，类型 <code>String</code>，值留空；</p><br/><h3 id="关闭-A13-及以上处理器内部温控"><a href="#关闭-A13-及以上处理器内部温控" class="headerlink" title="关闭 A13 及以上处理器内部温控"></a>关闭 A13 及以上处理器内部温控</h3><blockquote><p>（作用和原理与赵楠的 Disable Thermalmonitord 越狱插件一样）</p></blockquote><p>15及更高处理器（iPhone13及以上机型）存在SOC 内部温控，关闭此守护进程不能完全达到效果</p><p>关闭 Thermalmonitord 守护进程，应该可以防降频，防温控暗屏</p><p>使用 Filza 打开路径编辑文件 &#x2F;var&#x2F;db&#x2F;com.apple.xpc.launchd&#x2F;disabled.plist，点右上角i ，add new item，编辑item，输入名称 <code>com.apple.thermalmonitord</code>，类型 <code>Boolean</code>，值 <code>Yes</code>，返回保存。重启生效（注：会导致电池健康度无法读取，经过测试没产生其他问题）</p><br/><h3 id="巨魔设备开-5G-A-标识"><a href="#巨魔设备开-5G-A-标识" class="headerlink" title="巨魔设备开 5G-A 标识"></a>巨魔设备开 5G-A 标识</h3><p>Apple 在 iOS 18.4 推送了 5G-A，也就是我们常说的5.5G，其理论峰值速率可达5G的10倍。对于巨魔设备来说，可以通过刷运营商 IPCC 的方式开启 5G-A。</p><a class="btn-anzhiyu larger" href="https://www.feng.com/post/13893972"   title="iPhone15 系 iOS17.0 开 5G-A 教程"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>iPhone15 系 iOS17.0 开 5G-A 教程</span></a><a class="btn-anzhiyu larger" href="https://www.feng.com/post/13896641"   title="iPhone14 系 iOS16.4 - 17.0 开 5G-A 教程"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>iPhone14 系 iOS16.4 - 17.0 开 5G-A 教程</span></a><a class="btn-anzhiyu larger" href="https://www.feng.com/post/13893972"   title="iPhone13 系 iOS16.4 - 17.0 开 5G-A 教程（试验）"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>iPhone13 系 iOS16.4 - 17.0 开 5G-A 教程（试验）</span></a><br/><hr><h2 id="TrollStore的作者"><a href="#TrollStore的作者" class="headerlink" title="TrollStore的作者"></a>TrollStore的作者</h2><p>TrollStore 的作者是 Lars Fröder，或者更广为人知的网名 opa334 。 除了 TrollStore，这位大佬还开发了 Dopamine 越狱，可以说是非常强了👍︎</p><img src="/iOS-TrollStore/iOS-TrollStore_2.jpg" class="" title="图片"><p>（看 opa334 大佬的头图，也是 Splatoon 玩家吗？）</p><p>opa334 的 X：<a class="btn-anzhiyu " href="https://twitter.com/opa334dev"   title="@opa334dev"><span>@opa334dev</span></a></p><p>opa334 的 GitHub：<a class="btn-anzhiyu " href="https://github.com/opa334"   title="GitHub-opa334"><span>GitHub-opa334</span></a></p><p>最后再放一张大佬做 Presentation 的照片：</p><img src="/iOS-TrollStore/iOS-TrollStore_3.jpg" class="" title="图片"><h2 id="最后再说一点"><a href="#最后再说一点" class="headerlink" title="最后再说一点"></a>最后再说一点</h2><p>其实哪怕没有 TrollStore 独有的功能和软件，仅仅是无限量、无限时间的自签，就有足够的可玩性了，各种破解 APP 和魔改 APP 实在是给我省了不少钱。不过由于潜在的风险，我就不在这里提供下载方式了，大家自行探索吧。</p><br/><p><strong>2025&#x2F;09&#x2F;25 更新</strong>：opa334 已换 iPhone 17 ProMax，结束了他9年使用越狱主力设备的时代，转向原生。这标志着，iOS TrollStore 和 jailbreak 一个时代即将落幕。随着 iOS18 更新而未公布漏洞、iOS26带来内存完整性强制功能 (MIE)，未来应该再也没有 iOS jailbreak 了；Android这边，小米解锁 Bootloader (BL) 已几乎不可能，OnePlus 也开始限制解锁 BL，Samsung 最新系统不支持解锁 BL ……未来的手机将是原生系统的天下。</p><img src="/iOS-TrollStore/iOS-TrollStore_4.jpg" class="" title="图片">]]></content>
      
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 折腾 </tag>
            
            <tag> 破解 </tag>
            
            <tag> iOS </tag>
            
            <tag> TrollStore </tag>
            
            <tag> Sideload </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用开源软件一键生成视频</title>
      <link href="/Automatically-generate-video/"/>
      <url>/Automatically-generate-video/</url>
      
        <content type="html"><![CDATA[<p>GitHub上有一个爆火的开源项目 <code>MoneyPrintTurbo</code> （印钞机视频生成器-Turbo版）。只需提供一个视频主题或关键词 ，就可以全自动生成一个高清的短视频，还可以把生成出的视频上传到视频网站获取收益。它由一个国外的 <code>MoneyPrint</code> 项目重构改进而来，添加了丰富 UI 界面，并且增加了一些国内大模型，更适合中国用户。</p><br/><hr><h2 id="软件原理"><a href="#软件原理" class="headerlink" title="软件原理"></a>软件原理</h2><p>这个项目其实是一些现有免费开源方案的聚合，这里从视频文案，视频素材，文案配音，生成字幕，最终合成这五个主要功能，来介绍下软件原理。</p><h3 id="视频文案"><a href="#视频文案" class="headerlink" title="视频文案"></a>视频文案</h3><p>文案说白了就是命题作文，即给定一个主题写一篇文章。这个主要是借助了AI大语言模型的能力，作者提提供了不少模型可供选择，支持OpenAI、moonshot、Azure、gpt4free、one-api、通义千问、Google Gemini 等多种模型接入。</p><h3 id="视频素材"><a href="#视频素材" class="headerlink" title="视频素材"></a>视频素材</h3><p>视频素材来源是全球最大的免费的视频素材网站 <a href="https://www.pexels.com/">pexels.com</a> 。软件调用 <code>pexels</code> 的免费的 API，通过关键词搜索下载视频素材。</p><h3 id="配音"><a href="#配音" class="headerlink" title="配音"></a>配音</h3><p>这里使用了一个 Python 的文字转语音库 <code>edge_tts</code>。</p><h3 id="生成字幕"><a href="#生成字幕" class="headerlink" title="生成字幕"></a>生成字幕</h3><p><code>edge_tts</code>生成配音的同时会生成字幕文件，有了字幕文件则可以使用开源图像处理软件<code>ImageMagick</code>，将字幕嵌入图像。</p><h3 id="最终合成"><a href="#最终合成" class="headerlink" title="最终合成"></a>最终合成</h3><p>软件调用 Python 视频处理库 <code>moviepy</code> 将视频片段，音频，字幕等整合到一起，形成一个最终版本的视频输出。</p><br/><hr><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><p>Windows 电脑需要安装软件 Python3.11, Pycharm，ImageMagick</p><p>ImageMagick下载地址：<a href="https://imagemagick.org/archive/binaries/ImageMagick-7.1.1-29-Q16-x64-static.exe">https://imagemagick.org/archive/binaries/ImageMagick-7.1.1-29-Q16-x64-static.exe</a><br>安装下载好的 ImageMagick，注意不要修改安装路径</p><p>Pycharm 下载地址：<a href="https://www.jetbrains.com/pycharm/download/?section=windows">https://www.jetbrains.com/pycharm/download/?section=windows</a><br>Python3.11.9（64位）下载地址：<a href="https://www.python.org/ftp/python/3.11.9/python-3.11.9-amd64.exe">https://www.python.org/ftp/python/3.11.9/python-3.11.9-amd64.exe</a></p>]]></content>
      
      
      <categories>
          
          <category> AIGC </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AI </tag>
            
            <tag> 技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GitHub Pages 搭建网站</title>
      <link href="/GitHub-Pages-Blog/"/>
      <url>/GitHub-Pages-Blog/</url>
      
        <content type="html"><![CDATA[<p>GitHub Pages 是 GitHub 的一个免费快捷的的静态网站托管服务。在传统方式建站中，首先要租用服务器，服务器上需要运行 web 程序，还要再购买域名，要配置 SSL 证书，最后需要配置 DNS ，将域名解析到与服务器……这一套繁琐操作基本就把小白劝退了。而通过 GitHub Pages ，可以将这些繁琐步骤自动搞定：只需要简单点几下按钮，2分钟就能搭建好一个网站，而且它完全免费。</p><br/><hr><h2 id="GitHub-Pages-站点区别"><a href="#GitHub-Pages-站点区别" class="headerlink" title="GitHub Pages 站点区别"></a>GitHub Pages 站点区别</h2><p>Github Pages有两种类型的站点，下面的表格列举了它们的区别：</p><table><thead><tr><th></th><th>个人站点</th><th>项目站点</th></tr></thead><tbody><tr><td>每个账户能有的数量</td><td>1个</td><td>无数个</td></tr><tr><td>仓库名称</td><td>必须为 <code>yourUserName.github.io</code></td><td>没有限制</td></tr><tr><td>仓库地址</td><td><a href="https://github.com/yourUserName/yourUserName.github.io">https://github.com/yourUserName/yourUserName.github.io</a></td><td><a href="https://github.com/yourUserName/yourRepoName">https://github.com/yourUserName/yourRepoName</a></td></tr><tr><td>站点地址</td><td><a href="https://yourusername.github.io/">https://yourUserName.github.io</a></td><td><a href="https://yourusername.github.io/yourRepoName">https://yourUserName.github.io/yourRepoName</a></td></tr></tbody></table><p>第一种是个人站点，每个账户只能有一个，仓库名称有严格要求，必须是”账户名.github.io”，以我为例我的账户名称是<code>MiQieR</code>，所以仓库名必须是<code>miqier.github.io</code>，搭建好以后访问地址是 <a href="https://miqier.github.io/">https://miqier.github.io</a> 。</p><p>第二种是项目站点，没有数量限制，仓库名称也没有限制，但是有个缺点是，搭建好的网址会比较长，比如： miqier.github.io&#x2F;yourRepoName，这里的 <code>yourRepoName</code> 即是项目名称。</p><br/><hr><h2 id="搭建个人站点"><a href="#搭建个人站点" class="headerlink" title="搭建个人站点"></a>搭建个人站点</h2><h3 id="1-Fork博客框架项目"><a href="#1-Fork博客框架项目" class="headerlink" title="1. Fork博客框架项目"></a>1. Fork博客框架项目</h3><p>这里以很受欢迎的一个人博客框架 <code>Hux</code> 为例，访问它的GitHub项目地址：<a href="https://github.com/Huxpro/huxpro.github.io">https://github.com/Huxpro/huxpro.github.io</a></p><p>点击 <code>fork</code>，将代码保存到自己仓库一份</p><p>仓库名称必须是自己的 <code>用户名.github.io</code></p><h3 id="2-创建Action"><a href="#2-创建Action" class="headerlink" title="2. 创建Action"></a>2. 创建Action</h3><p>Fork成功以后 点击 settings-&gt;pages-&gt;Github Action</p><img src="/GitHub-Pages-Blog/GitHub-Pages-Blog_1.jpg" class="" title="图片"><p>Github 提供 Jekyll 的 Action，Jekyll 它有一个模版目录，其中包含原始文本格式的文档，通过一个转换器转化成一个完整的可发布的静态网站。</p><img src="/GitHub-Pages-Blog/GitHub-Pages-Blog_2.jpg" class="" title="图片"><p>Jekyll 生成完以后，直接点击<code>Commit changes</code>将代码提交即可</p><h2 id="3-修改博客配置"><a href="#3-修改博客配置" class="headerlink" title="3. 修改博客配置"></a>3. 修改博客配置</h2><p>修改博客基本配置 <code>_config.yml</code></p><img src="/GitHub-Pages-Blog/GitHub-Pages-Blog_3.jpg" class="" title="图片"><h2 id="4-发布新文章"><a href="#4-发布新文章" class="headerlink" title="4. 发布新文章"></a>4. 发布新文章</h2><p>在 <code>_posts</code> 目录增加 markdown 格式的笔记，代码提交完毕，GitHub 自动执行 Action 将网页发布出来。</p><p>上半部分是文章的配置信息，下半部分则是标准的markdown语法</p><img src="/GitHub-Pages-Blog/GitHub-Pages-Blog_4.jpg" class="" title="图片"><br/><hr><h2 id="搭建项目站点"><a href="#搭建项目站点" class="headerlink" title="搭建项目站点"></a>搭建项目站点</h2><p>表白代码收藏馆是一个GitHub上的开源项目，其中收藏了50多个各种编程语言表达爱意的代码。</p><p>项目地址： <a href="https://github.com/sun0225SUN/Awesome-Love-Code">https://github.com/sun0225SUN/Awesome-Love-Code</a></p><p>这里以032号<code>Awesome-Love-Code</code>项目为例，演示如何部署到自己的域名，并且对里面的内容进行简单修改。</p><h3 id="1-Fork选择的项目"><a href="#1-Fork选择的项目" class="headerlink" title="1. Fork选择的项目"></a>1. Fork选择的项目</h3><p>可以修改项目名和描述。</p><h3 id="2-对代码进行个性化修改"><a href="#2-对代码进行个性化修改" class="headerlink" title="2. 对代码进行个性化修改"></a>2. 对代码进行个性化修改</h3><p>进入目录 Web&#x2F;032&#x2F;index.html 直接修改 index.html。</p><h3 id="3-使用GitHub-Pages部署"><a href="#3-使用GitHub-Pages部署" class="headerlink" title="3. 使用GitHub Pages部署"></a>3. 使用GitHub Pages部署</h3><p>点击Settings-&gt;Pages，选择 main 分支直接发布。</p><p>等待一分钟后，在<a href="https://yourusername.github.io/Awesome-Love-Code/Web/032%E5%B0%B1%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%88%B0%E5%8F%91%E5%B8%83%E7%9A%84%E9%A1%B5%E9%9D%A2%E3%80%82">https://yourUserName.github.io/Awesome-Love-Code/Web/032就可以看到发布的页面。</a></p>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 前端 </tag>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Anzhiyu-游戏录功能的实现</title>
      <link href="/Anzhiyu-games-page/"/>
      <url>/Anzhiyu-games-page/</url>
      
        <content type="html"><![CDATA[<h2 id="做这个页面的原因"><a href="#做这个页面的原因" class="headerlink" title="做这个页面的原因"></a>做这个页面的原因</h2><p>其实我一直想做一个记录自己玩过的游戏的页面了，就像用豆瓣记录自己看过的电影那样。之所以不直接使用Steam运行库，是因为我玩游戏的平台太多了，很多都没有上架Steam。我希望可以通过这个页面，让大家了解我在游戏上的喜好，更希望可以因此找到爱好相近的人。</p><p>这个页面其实可以通过一些调整，来记录看过的电影、影视剧和读过的书。</p><p>游戏封面图源来自<a class="btn-anzhiyu " href="https://www.steamgriddb.com/"   title="SteamGridDB"><span>SteamGridDB</span></a></p><p>魔改步骤大致如下(<strong>css根据自己的需要进行调整，不通用</strong>)：</p><br/><hr><div class="tabs" id="魔改方法"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="魔改方法-1">修改文件</button><button type="button" class="tab " data-href="魔改方法-2">使用插件</button></ul><div class="tab-contents"><div class="tab-item-content active" id="魔改方法-1"><p><strong>1. 新建<code>pug</code>文件</strong></p><p>在 <code>/themes/anzhiyu/layout/includes/page</code> 文件夹下新建 <code>games.pug</code> 文件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">#games</span><br><span class="line">  if site.data.games</span><br><span class="line">    each i in site.data.games</span><br><span class="line">      .author-content.author-content-item.GamesPage.single(style = `background: url($&#123;i.top_background&#125;) left 37% / cover no-repeat !important;`)</span><br><span class="line">        .card-content</span><br><span class="line">          .author-content-item-tips=i.class_name</span><br><span class="line">          span.author-content-item-title=i.description</span><br><span class="line">          .content-bottom</span><br><span class="line">            .tips=i.tip</span><br><span class="line">          .banner-button-group</span><br><span class="line">            a.banner-button(href=i.buttonLink)</span><br><span class="line">              i.anzhiyufont.anzhiyu-icon-arrow-circle-right(style=&#x27;font-size: 1.3rem&#x27;)</span><br><span class="line">              span.banner-button-text=i.buttonText</span><br><span class="line">      each item in i.good_games</span><br><span class="line">        .goodgames-item</span><br><span class="line">          h2.goodgames-title= item.title</span><br><span class="line">          .goodgames-item-description= item.description</span><br><span class="line">          .games-item</span><br><span class="line">            .games-item-content</span><br><span class="line">              each iten, indey in item.games_list</span><br><span class="line">                .games-item-content-item</span><br><span class="line">                  .games-item-content-item-cover</span><br><span class="line">                    img.games-item-content-item-image(data-lazy-src=url_for(iten.image) onerror=`this.onerror=null;this.src=&#x27;` + url_for(theme.error_img.flink) + `&#x27;` alt=iten.name)</span><br><span class="line">                  .games-item-content-item-info</span><br><span class="line">                    .games-item-content-item-name(onclick=`rm.rightmenuCopyText(&quot;$&#123;iten.name&#125;&quot;);anzhiyu.snackbarShow(&quot;$&#123;_p(&#x27;Snackbar.copy_games_name&#x27;) + &quot; 【&quot; + iten.name + &quot;】&quot;&#125;&quot;);` title=iten.name)= iten.name</span><br><span class="line">                    .games-item-content-item-specification= iten.specification</span><br><span class="line">                    .games-item-content-item-description= iten.description</span><br><span class="line">                    .games-item-content-item-toolbar</span><br><span class="line">                      if iten.link.includes(&#x27;https://&#x27;) || iten.link.includes(&#x27;http://&#x27;)</span><br><span class="line">                        a.games-item-content-item-link(href= iten.link, target=&#x27;_blank&#x27;) 详情</span><br><span class="line">                        .bber-reply(onclick=&quot;rm.rightMenuCommentText(&quot; + `&#x27;$&#123;iten.name + &quot; &quot; + iten.specification + &quot; &quot; + iten.description&#125;&#x27;` + &quot;)&quot;)</span><br><span class="line">                          i.anzhiyufont.anzhiyu-icon-message</span><br><span class="line">                      else  </span><br><span class="line">                        a.games-item-content-item-link(href= iten.link, target=&#x27;_blank&#x27;) 查看文章</span><br><span class="line">                        .bber-reply(onclick=&quot;rm.rightMenuCommentText(&quot; + `&#x27;$&#123;iten.name + &quot; &quot; + iten.specification + &quot; &quot; + iten.description&#125;&#x27;` + &quot;)&quot;)</span><br><span class="line">                          i.anzhiyufont.anzhiyu-icon-message</span><br></pre></td></tr></table></figure><p><strong>2. 引入<code>pug</code>文件</strong></p><p>在 <code>/themes/anzhiyu/layout/page.pug</code> 文件中引入创建的页面，注意对齐。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">    case page.type</span><br><span class="line">      when &#x27;music&#x27;</span><br><span class="line">        include includes/page/music.pug</span><br><span class="line">      when &#x27;equipment&#x27;</span><br><span class="line">        include includes/page/equipment.pug</span><br><span class="line">+      when &#x27;games&#x27;</span><br><span class="line">+        include includes/page/games.pug</span><br></pre></td></tr></table></figure><p><strong>3. 引入<code>styl</code>文件</strong></p><p>在 <code>/themes/anzhiyu/source/css/_page/</code> 文件加中创建一个 <code>games.styl</code> 文件，写入以下内容：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 游戏世界</span></span><br><span class="line"><span class="selector-class">.goodgames-title</span></span><br><span class="line">  <span class="attribute">margin</span>: <span class="number">1rem</span> <span class="number">0</span></span><br><span class="line">  <span class="attribute">line-height</span>: <span class="number">1</span>;</span><br><span class="line"><span class="selector-class">.games-item</span></span><br><span class="line">  <span class="selector-class">.games-item-content</span></span><br><span class="line">    <span class="attribute">display</span>: flex</span><br><span class="line">    <span class="attribute">flex-direction</span>: row</span><br><span class="line">    <span class="attribute">flex-wrap</span>: wrap</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> -<span class="number">8px</span></span><br><span class="line">    <span class="selector-class">.games-item-content-item</span></span><br><span class="line">      <span class="attribute">width</span>: <span class="built_in">calc</span>(<span class="number">25%</span> - <span class="number">12px</span>)</span><br><span class="line">      <span class="attribute">border-radius</span>: <span class="number">12px</span></span><br><span class="line">      <span class="attribute">border</span>: <span class="built_in">var</span>(--style-border-always)</span><br><span class="line">      <span class="attribute">overflow</span>: hidden</span><br><span class="line">      <span class="attribute">margin</span>: <span class="number">8px</span> <span class="number">6px</span></span><br><span class="line">      <span class="attribute">background</span>: <span class="built_in">var</span>(--anzhiyu-card-bg)</span><br><span class="line">      <span class="attribute">box-shadow</span>: <span class="built_in">var</span>(--anzhiyu-shadow-border)</span><br><span class="line">      <span class="attribute">min-height</span>: <span class="number">400px</span></span><br><span class="line">      <span class="attribute">position</span>: relative</span><br><span class="line">      +<span class="built_in">maxWidth1200</span>()</span><br><span class="line">        <span class="attribute">width</span>: <span class="built_in">calc</span>(<span class="number">50%</span> - <span class="number">12px</span>)</span><br><span class="line">      +<span class="built_in">maxWidth768</span>()</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100%</span></span><br><span class="line">      </span><br><span class="line">      <span class="selector-class">.games-item-content-item-info</span></span><br><span class="line">        <span class="attribute">padding</span>: <span class="number">8px</span> <span class="number">16px</span> <span class="number">16px</span> <span class="number">16px</span></span><br><span class="line">        <span class="attribute">margin-top</span>: <span class="number">12px</span></span><br><span class="line"></span><br><span class="line">      <span class="selector-class">.games-item-content-item-name</span></span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">18px</span></span><br><span class="line">        <span class="attribute">font-weight</span>: bold</span><br><span class="line">        <span class="attribute">line-height</span>: <span class="number">1</span></span><br><span class="line">        <span class="attribute">margin-bottom</span>: <span class="number">8px</span></span><br><span class="line">        <span class="attribute">white-space</span>: nowrap</span><br><span class="line">        <span class="attribute">overflow</span>: visable</span><br><span class="line">        <span class="attribute">text-overflow</span>: ellipsis</span><br><span class="line">        <span class="attribute">width</span>: fit-content</span><br><span class="line">        <span class="attribute">cursor</span> pointer</span><br><span class="line">        <span class="selector-pseudo">&amp;:hover</span></span><br><span class="line">          <span class="attribute">color</span>: <span class="built_in">var</span>(--anzhiyu-main)</span><br><span class="line"></span><br><span class="line">      <span class="selector-class">.games-item-content-item-specification</span></span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">12px</span></span><br><span class="line">        <span class="attribute">color</span>: <span class="built_in">var</span>(--anzhiyu-secondtext)</span><br><span class="line">        <span class="attribute">line-height</span>: <span class="number">16px</span></span><br><span class="line">        <span class="attribute">margin-bottom</span>: <span class="number">5px</span></span><br><span class="line">        <span class="attribute">white-space</span>: nowrap</span><br><span class="line">        <span class="attribute">overflow</span>: hidden</span><br><span class="line">        <span class="attribute">text-overflow</span>: ellipsis</span><br><span class="line"></span><br><span class="line">      <span class="selector-class">.games-item-content-item-description</span></span><br><span class="line">        <span class="attribute">line-height</span>: <span class="number">20px</span></span><br><span class="line">        <span class="attribute">color</span>: <span class="built_in">var</span>(--anzhiyu-secondtext)</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">60px</span></span><br><span class="line">        <span class="attribute">display</span>: -webkit-box</span><br><span class="line">        <span class="attribute">overflow</span>: hidden</span><br><span class="line">        -webkit-line-clamp: <span class="number">3</span></span><br><span class="line">        -webkit-box-orient: vertical</span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">14px</span></span><br><span class="line"></span><br><span class="line">      <span class="selector-tag">a</span><span class="selector-class">.games-item-content-item-link</span></span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">12px</span></span><br><span class="line">        <span class="attribute">background</span>: <span class="built_in">var</span>(--anzhiyu-gray-op)</span><br><span class="line">        <span class="attribute">padding</span>: <span class="number">4px</span> <span class="number">8px</span></span><br><span class="line">        <span class="attribute">border-radius</span>: <span class="number">8px</span></span><br><span class="line">        <span class="attribute">cursor</span>: pointer</span><br><span class="line"></span><br><span class="line">        <span class="selector-pseudo">&amp;:hover</span></span><br><span class="line">          <span class="attribute">background</span>: <span class="built_in">var</span>(--anzhiyu-main)</span><br><span class="line">          <span class="attribute">color</span>: <span class="built_in">var</span>(--anzhiyu-white)</span><br><span class="line"></span><br><span class="line">      <span class="selector-class">.games-item-content-item-cover</span></span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100%</span></span><br><span class="line">        <span class="attribute">height</span>: <span class="number">200px</span></span><br><span class="line">        <span class="attribute">background</span>: <span class="built_in">var</span>(--anzhiyu-secondbg)</span><br><span class="line">        <span class="attribute">display</span>: flex</span><br><span class="line">        <span class="attribute">justify-content</span>: center</span><br><span class="line">        <span class="attribute">align-items</span>: center;</span><br><span class="line"></span><br><span class="line">      <span class="selector-tag">img</span><span class="selector-class">.games-item-content-item-image</span></span><br><span class="line">        <span class="attribute">object-fit</span>: cover</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">100%</span></span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100%</span></span><br><span class="line">       <span class="comment">// border-radius: 0 </span></span><br><span class="line">       <span class="comment">// 若需要去除图片圆角可以将这里的注释去掉</span></span><br><span class="line"></span><br><span class="line">      <span class="selector-class">.games-item-content-item-toolbar</span></span><br><span class="line">        <span class="attribute">display</span>: flex</span><br><span class="line">        <span class="attribute">justify-content</span>: space-between</span><br><span class="line">        <span class="attribute">position</span>: absolute</span><br><span class="line">        <span class="attribute">bottom</span>: <span class="number">12px</span></span><br><span class="line">        <span class="attribute">left</span>: <span class="number">0</span></span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100%</span></span><br><span class="line">        <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">16px</span></span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span><span class="selector-attr">[data-type=<span class="string">&quot;games&quot;</span>]</span> <span class="selector-id">#web_bg</span></span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">var</span>(--anzhiyu-background);</span><br><span class="line"><span class="selector-tag">body</span><span class="selector-attr">[data-type=<span class="string">&quot;games&quot;</span>]</span> <span class="selector-id">#page</span></span><br><span class="line">  <span class="attribute">border</span>: <span class="number">0</span>;</span><br><span class="line">  <span class="attribute">box-shadow</span>: none <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">0</span> <span class="meta">!important</span>;</span><br><span class="line">  <span class="attribute">background</span>: <span class="number">0</span> <span class="number">0</span> <span class="meta">!important</span>;</span><br><span class="line"><span class="selector-tag">body</span><span class="selector-attr">[data-type=<span class="string">&quot;games&quot;</span>]</span> <span class="selector-id">#page</span> <span class="selector-class">.page-title</span></span><br><span class="line">  <span class="attribute">display</span>: none;</span><br></pre></td></tr></table></figure><p><strong>4. 新建<code>md</code>页面文件</strong></p><p>在博客根目录打开终端，输入以下指令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page games</span><br></pre></td></tr></table></figure><p>打开 <code>/source/games/index.md</code> ，修改为以下形式：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 游戏世界</span><br><span class="line">date: 2024-03-17 21:07:54</span><br><span class="line">type: games</span><br><span class="line">aside: false</span><br><span class="line"><span class="section">comments: true</span></span><br><span class="line"><span class="section">---</span></span><br></pre></td></tr></table></figure><p><strong>5. 添加<code>yml</code>文件</strong></p><p>在 <code>/source/_data/</code> 新建 <code>games.yml</code> 文件，如果 <code>_data</code> 文件夹也没有的话需要自己创建。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span> <span class="attr">class_name:</span> <span class="string">游戏世界</span></span><br><span class="line">  <span class="attr">description:</span> <span class="string">我的游戏世界</span></span><br><span class="line">  <span class="attr">tip:</span> <span class="string">跟</span> <span class="string">石头</span> <span class="string">一起探索世界</span></span><br><span class="line">  <span class="attr">top_background:</span> <span class="string">https://th.bing.com/th/id/R.13a97ef4830efa5e0b87134d622719f3?rik=G7RaJFpxg5PtkA&amp;riu=http%3a%2f%2fupload.techweb.com.cn%2fs%2f640%2f2019%2f0530%2f1559208230699.jpg&amp;ehk=j1G8rMX98TRX52EkLgI5jW1p7lIQp4I8Si1nqEggFRs%3d&amp;risl=&amp;pid=ImgRaw&amp;r=0&amp;sres=1&amp;sresct=1</span></span><br><span class="line">  <span class="attr">buttonText:</span> <span class="string">Steam</span></span><br><span class="line">  <span class="attr">buttonLink:</span> <span class="string">https://steamcommunity.com/</span></span><br><span class="line">  <span class="attr">good_games:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">风景一绝</span></span><br><span class="line">      <span class="attr">description:</span> <span class="string">不会错过的风景</span></span><br><span class="line">      <span class="attr">games_list:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">怪物猎人：世界</span></span><br><span class="line">          <span class="attr">specification:</span> <span class="string">CAPCOM</span> <span class="string">Co.,</span> <span class="string">Ltd.</span></span><br><span class="line">          <span class="attr">description:</span> <span class="string">&quot;在新建构的「Monster Hunter: World」中, 可以体验到你一直期盼的极致猎人生活。&quot;</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">https://cdn.max-c.com/heybox/dailynews/img/94376ca41326836587a137d5999733e5.jpg</span></span><br><span class="line">          <span class="attr">link:</span> <span class="string">https://www.xiaoheihe.cn/games/detail/582010</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">我的最爱</span></span><br><span class="line">      <span class="attr">description:</span> <span class="string">我不能没有它了</span></span><br><span class="line">      <span class="attr">games_list:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">GTA:5</span></span><br><span class="line">          <span class="attr">specification:</span> <span class="string">Rockstar</span> <span class="string">Games</span></span><br><span class="line">          <span class="attr">description:</span> <span class="string">谁还在买GTA5</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">https://imgheybox.max-c.com/heybox/game/header/271590_dXCCk.jpg</span></span><br><span class="line">          <span class="attr">link:</span> <span class="string">https://www.xiaoheihe.cn/games/detail/271590</span></span><br></pre></td></tr></table></figure><p><strong>6. 启用游戏页面</strong></p><p>修改 <code>/_config.anzhiyu.yml</code> （先挑选好图标，再更新<code>ali_iconfont_js</code>）：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line"><span class="string">+</span>  <span class="string">分享:</span></span><br><span class="line"><span class="string">+</span>    <span class="string">游戏世界:</span> <span class="string">/games/</span> <span class="string">||</span> <span class="string">icon-game</span></span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="魔改方法-2"><p><strong>1. 安装插件</strong></p><p>安装插件,在博客根目录下打开终端，运行以下指令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-butterfly-games --save</span><br></pre></td></tr></table></figure><p><strong>2. 填写配置信息</strong></p><p>在站点配置文件<code>_config.yml</code>或者主题配置文件<code>_config.butterfly.yml</code>中添加：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Game Page</span></span><br><span class="line"><span class="comment"># see https://akilar.top/posts/e2d3c450/</span></span><br><span class="line"><span class="attr">games:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">游戏世界</span> </span><br><span class="line">  <span class="attr">description:</span> <span class="string">我的游戏世界</span> </span><br><span class="line">  <span class="attr">tip:</span> <span class="string">跟</span> <span class="string">小屋屋主</span> <span class="string">一起探索世界</span> </span><br><span class="line">  <span class="attr">top_background:</span> <span class="string">https://th.bing.com/th/id/R.13a97ef4830efa5e0b87134d622719f3?rik=G7RaJFpxg5PtkA&amp;riu=http%3a%2f%2fupload.techweb.com.cn%2fs%2f640%2f2019%2f0530%2f1559208230699.jpg&amp;ehk=j1G8rMX98TRX52EkLgI5jW1p7lIQp4I8Si1nqEggFRs%3d&amp;risl=&amp;pid=ImgRaw&amp;r=0&amp;sres=1&amp;sresct=1</span></span><br><span class="line">  <span class="attr">buttonText:</span> <span class="string">Steam</span> </span><br><span class="line">  <span class="attr">buttonLink:</span> <span class="string">https://steamcommunity.com/</span></span><br><span class="line">  <span class="attr">css:</span> <span class="string">https://jsd.cdn.sininno.eu.org/npm/hexo-butterfly-games/lib/games.css</span></span><br><span class="line">  <span class="attr">good_games:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">风景一绝</span></span><br><span class="line">      <span class="attr">description:</span> <span class="string">不会错过的风景</span></span><br><span class="line">      <span class="attr">games_list:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">怪物猎人：世界</span></span><br><span class="line">          <span class="attr">specification:</span> <span class="string">CAPCOM</span> <span class="string">Co.,</span> <span class="string">Ltd.</span></span><br><span class="line">          <span class="attr">description:</span> <span class="string">&quot;在新建构的「Monster Hunter: World」中, 可以体验到你一直期盼的极致猎人生活。&quot;</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">https://cdn.max-c.com/heybox/dailynews/img/94376ca41326836587a137d5999733e5.jpg</span></span><br><span class="line">          <span class="attr">link:</span> <span class="string">https://www.xiaoheihe.cn/games/detail/582010</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">title:</span> <span class="string">我的最爱</span></span><br><span class="line">      <span class="attr">description:</span> <span class="string">我不能没有它了</span></span><br><span class="line">      <span class="attr">games_list:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">GTA:5</span></span><br><span class="line">          <span class="attr">specification:</span> <span class="string">Rockstar</span> <span class="string">Games</span></span><br><span class="line">          <span class="attr">description:</span> <span class="string">谁还在买GTA5</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">https://imgheybox.max-c.com/heybox/game/header/271590_dXCCk.jpg</span></span><br><span class="line">          <span class="attr">link:</span> <span class="string">https://www.xiaoheihe.cn/games/detail/271590</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">games</span></span><br><span class="line">  <span class="attr">front_matter:</span> <span class="comment">#【可选】games页面的 front_matter 配置</span></span><br><span class="line">    <span class="attr">title:</span> <span class="string">游戏人生</span></span><br><span class="line">    <span class="attr">comments:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">top_img:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">games</span></span><br><span class="line">    <span class="attr">aside:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><p><strong>参数定义</strong></p><table><thead><tr><th>参数</th><th>备选值&#x2F;类型</th><th>释义</th></tr></thead><tbody><tr><td>enable</td><td>true&#x2F;false</td><td>控制开关</td></tr><tr><td>name</td><td>text</td><td>顶部标题</td></tr><tr><td>description</td><td>text</td><td>顶部副标题</td></tr><tr><td>tip</td><td>text</td><td>顶部小标题</td></tr><tr><td>top_background</td><td>URL</td><td>顶部背景链接</td></tr><tr><td>buttonText</td><td>text</td><td>按钮文字</td></tr><tr><td>buttonLink</td><td>URL</td><td>按钮对应链接</td></tr><tr><td>good_games.title</td><td>text</td><td>分类标题</td></tr><tr><td>good_games.description</td><td>text</td><td>分类副标题</td></tr><tr><td>good_games.games_list.name</td><td>text</td><td>游戏名字</td></tr><tr><td>good_games.games_list.specification</td><td>text</td><td>游戏产商</td></tr><tr><td>good_games.games_list.description</td><td>text</td><td>游戏简介</td></tr><tr><td>good_games.games_list.image</td><td>URL</td><td>游戏图片链接</td></tr><tr><td>good_games.games_list.link</td><td>URL</td><td>游戏对应链接</td></tr><tr><td>css</td><td>URL</td><td>【可选】开发者接口，自定义css链接</td></tr><tr><td>path</td><td>comments</td><td>【可选】games 的路径名称。默认为 games，生成的页面为 games&#x2F;index.html</td></tr><tr><td>front_matter</td><td>object</td><td>【可选】games 页面的 front_matter 配置,写法见上文示例</td></tr></tbody></table><p><strong>3. 启用游戏页面</strong></p><p>修改 <code>/_config.anzhiyu.yml</code> （先挑选好图标，再更新<code>ali_iconfont_js</code>）：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line"><span class="string">+</span>  <span class="string">分享:</span></span><br><span class="line"><span class="string">+</span>    <span class="string">游戏世界:</span> <span class="string">/games/</span> <span class="string">||</span> <span class="string">icon-game</span></span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div></div><br/><hr><h2 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h2><p>我刚刚搭好时，出现了无法显示图片的问题，一开始还以为是开启了 <code>lazyload</code> 图片懒加载，后来发现其实关系不大，主要是需要安装<code>hexo-asset-img</code>插件</p><p>安装插件,在博客根目录下打开终端，运行以下指令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-asset-img --save</span><br></pre></td></tr></table></figure><br/><hr><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://blog.kouseki.cn/posts/e7dd.html">https://blog.kouseki.cn/posts/e7dd.html</a></p><p><a href="https://blog.sinzmise.top/posts/10045/">https://blog.sinzmise.top/posts/10045/</a></p>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 前端 </tag>
            
            <tag> 游戏 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>用iPerf3测试网络性能</title>
      <link href="/iperf3-Speed-Test/"/>
      <url>/iperf3-Speed-Test/</url>
      
        <content type="html"><![CDATA[<h2 id="什么是-iPerf3-？"><a href="#什么是-iPerf3-？" class="headerlink" title="什么是 iPerf3 ？"></a>什么是 iPerf3 ？</h2><p>iPerf3 是一种用于主动测量 IP 网络上可实现的最大带宽的工具。它支持调整与时序 (timing)、缓冲区 (buffers) 和协议 (TCP、UDP、SCTP with IPv4 &amp; IPv6) 相关的各种参数。对于每个测试，它都会报告带宽 (bandwidth)、丢包 (loss) 和其他参数。</p><p>iPerf3 被广泛用于测试内网网速、网卡性能、内网穿透性能等。</p><br/><hr><h2 id="iPerf3-和-iPerf2-的关系"><a href="#iPerf3-和-iPerf2-的关系" class="headerlink" title="iPerf3 和 iPerf2 的关系"></a>iPerf3 和 iPerf2 的关系</h2><p>iPerf3 不是 iPerf2 的升级版，事实上，二者没什么关系。iPerf3 和 iPerf2 的区别如下：</p><table><thead><tr><th align="center"></th><th align="center">iPerf3</th><th align="center">iPerf2</th></tr></thead><tbody><tr><td align="center">线程数</td><td align="center">单线程</td><td align="center">多线程</td></tr><tr><td align="center">双工测试</td><td align="center">不支持</td><td align="center">支持</td></tr><tr><td align="center">并行技术</td><td align="center">基于进程</td><td align="center">基于线程</td></tr></tbody></table><p>其余的不同之处可参考这个网站：</p><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://iperf2.sourceforge.io/IperfCompare.html">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="">          <i class="anzhiyufont anzhiyu-icon-link" style=""></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">Iperf2 和 Iperf3 对比表格</div>            <div class="tag-link-sitename"> iperf2.sourceforge.io</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><br/><hr><h2 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a>配置环境</h2><p>需要参与测试的两台设备都安装iPerf3。</p><p>安装方法如下（未列举的操作系统请自行搜索安装方法）：</p><div class="tabs" id="安装iperf3"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="安装iperf3-1">Windows</button><button type="button" class="tab " data-href="安装iperf3-2">Linux</button><button type="button" class="tab " data-href="安装iperf3-3">macOS</button><button type="button" class="tab " data-href="安装iperf3-4">OpenWrt/Docker</button></ul><div class="tab-contents"><div class="tab-item-content active" id="安装iperf3-1"><ol><li>下载iPerf3程序包（由于iPerf3没有官方Windows版，你可以选择以下版本：<ul><li>很多人使用的Vivien Guéant于2016年编译的3.1.3版本 <a class="btn-anzhiyu green" href="https://iperf.fr/iperf-download.php" title="iPerf3-Win-Vivien.G"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>iPerf3-Win-Vivien.G</span></a></li><li>持续更新的Budman编译的版本，截至2023年底已编译3.16版本 <a class="btn-anzhiyu blue" href="https://files.budman.pw/" title="iPerf3-Win-Budman"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>iPerf3-Win-Budman</span></a></li></ul></li><li>解压压缩包；</li><li>使用cmd打开文件夹所在目录（或将 iperf3.exe 和 cygwin1.dll 文件复制到 C:\Windows 路径下；或配置环境变量），输入 iperf3 –version 查看是否可以运行。</li></ol></div><div class="tab-item-content" id="安装iperf3-2"><ul><li><p>对于基于Debian的系统（如Ubuntu）:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install iperf3</span><br></pre></td></tr></table></figure></li><li><p>对于基于RedHat的系统（如CentOS）:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo yum update</span><br><span class="line">sudo yum install iperf3</span><br></pre></td></tr></table></figure></li><li><p>对于Fedora:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dnf install iperf3</span><br></pre></td></tr></table></figure></li><li><p>对于Arch Linux:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pacman -Sy iperf3</span><br></pre></td></tr></table></figure></li><li><p>安装完成后，使用运行<code>iperf3</code>命令来验证安装是否成功。</p></li></ul></div><div class="tab-item-content" id="安装iperf3-3"><ol><li>运行终端。</li><li>运行以下命令以安装Homebrew（如果尚未安装）：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/bin/bash -c <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)</span>&quot;</span></span><br></pre></td></tr></table></figure></li><li>更新Homebrew的软件库：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew update</span><br></pre></td></tr></table></figure></li><li>安装iperf3：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install iperf3</span><br></pre></td></tr></table></figure></li></ol><ul><li>安装完成后，使用运行<code>iperf3</code>命令来验证安装是否成功。</li></ul></div><div class="tab-item-content" id="安装iperf3-4"><ul><li>直接在OpenWrt软件包&#x2F;Docker注册表里内搜索<code>iperf3</code>安装即可。</li></ul></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div></div><br/><hr><h2 id="使用-iPerf3-测速"><a href="#使用-iPerf3-测速" class="headerlink" title="使用 iPerf3 测速"></a>使用 iPerf3 测速</h2><p>随便选择一个设备作为服务器端，另一个设备作为客户端，不影响接下来的测试。（如果你使用的是Windows 3.1.3版，则最好不要用Windows作为服务器端，否则可能会影响UDP测试）</p><p>下面是基本操作，可以满足90%的使用场景：</p><p>服务器端：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 启动服务器端：</span></span><br><span class="line">iperf3 -s</span><br></pre></td></tr></table></figure><p>客户器端：<br><strong>TCP上传测试</strong></p><div class="tabs" id="tcp上传测试"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="tcp上传测试-1">语法</button><button type="button" class="tab " data-href="tcp上传测试-2">示例指令</button></ul><div class="tab-contents"><div class="tab-item-content active" id="tcp上传测试-1"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iperf3 -c [服务器端ip] -P [连接数]</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="tcp上传测试-2"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iperf3 -c 192.168.1.21 -P 5</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div></div><p><strong>TCP下载测试</strong></p><div class="tabs" id="tcp下载测试"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="tcp下载测试-1">语法</button><button type="button" class="tab " data-href="tcp下载测试-2">示例指令</button></ul><div class="tab-contents"><div class="tab-item-content active" id="tcp下载测试-1"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iperf3 -c [服务器端ip] -P [连接数] -R</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="tcp下载测试-2"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iperf3 -c 192.168.1.21 -P 5 -R</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div></div><p><strong>UDP测试</strong></p><div class="tabs" id="udp测试"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="udp测试-1">语法</button><button type="button" class="tab " data-href="udp测试-2">Windows-3.1.3的Bug</button><button type="button" class="tab " data-href="udp测试-3">示例指令</button></ul><div class="tab-contents"><div class="tab-item-content active" id="udp测试-1"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iperf3 -c [服务器端ip] -u -b [大致的网络带宽，例如1000M]</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="udp测试-2"><p>Windows 3.1.3版有个bug：-u参数不能与-P共用，Linux服务器端则无此问题。</p></div><div class="tab-item-content" id="udp测试-3"><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iperf3 -c 192.168.1.21 -u -b 2500M</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div></div><br/><p><strong>完整的使用参数可通过<code>iperf3 -h</code>获取：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ]<span class="comment"># iperf3 -h</span></span><br><span class="line">Usage: iperf [-s|-c host] [options]</span><br><span class="line">       iperf [-h|--<span class="built_in">help</span>] [-v|--version]</span><br><span class="line"> </span><br><span class="line">Server or Client:</span><br><span class="line">  -p, --port      <span class="comment">#         server port to listen on/connect to</span></span><br><span class="line">  -f, --format    [kmgKMG]  format to report: Kbits, Mbits, KBytes, MBytes</span><br><span class="line">  -i, --interval  <span class="comment">#         seconds between periodic bandwidth reports</span></span><br><span class="line">  -F, --file name           xmit/recv the specified file</span><br><span class="line">  -A, --affinity n/n,m      <span class="built_in">set</span> CPU affinity</span><br><span class="line">  -B, --<span class="built_in">bind</span>      &lt;host&gt;    <span class="built_in">bind</span> to a specific interface</span><br><span class="line">  -V, --verbose             more detailed output</span><br><span class="line">  -J, --json                output <span class="keyword">in</span> JSON format</span><br><span class="line">  --logfile f               send output to a <span class="built_in">log</span> file</span><br><span class="line">  --forceflush              force flushing output at every interval</span><br><span class="line">  -d, --debug               emit debugging output</span><br><span class="line">  -v, --version             show version information and quit</span><br><span class="line">  -h, --<span class="built_in">help</span>                show this message and quit</span><br><span class="line">Server specific:</span><br><span class="line">  -s, --server              run <span class="keyword">in</span> server mode</span><br><span class="line">  -D, --daemon              run the server as a daemon</span><br><span class="line">  -I, --pidfile file        write PID file</span><br><span class="line">  -1, --one-off             handle one client connection <span class="keyword">then</span> <span class="built_in">exit</span></span><br><span class="line">Client specific:</span><br><span class="line">  -c, --client    &lt;host&gt;    run <span class="keyword">in</span> client mode, connecting to &lt;host&gt;</span><br><span class="line">  -u, --udp                 use UDP rather than TCP</span><br><span class="line">  -b, --bandwidth <span class="comment">#[KMG][/#] target bandwidth in bits/sec (0 for unlimited)</span></span><br><span class="line">                            (default 1 Mbit/sec <span class="keyword">for</span> UDP, unlimited <span class="keyword">for</span> TCP)</span><br><span class="line">                            (optional slash and packet count <span class="keyword">for</span> burst mode)</span><br><span class="line">  --fq-rate <span class="comment">#[KMG]          enable fair-queuing based socket pacing in</span></span><br><span class="line">                            bits/sec (Linux only)</span><br><span class="line">  -t, --time      <span class="comment">#         time in seconds to transmit for (default 10 secs)</span></span><br><span class="line">  -n, --bytes     <span class="comment">#[KMG]    number of bytes to transmit (instead of -t)</span></span><br><span class="line">  -k, --blockcount <span class="comment">#[KMG]   number of blocks (packets) to transmit (instead of -t or -n)</span></span><br><span class="line">  -l, --len       <span class="comment">#[KMG]    length of buffer to read or write</span></span><br><span class="line">                            (default 128 KB <span class="keyword">for</span> TCP, dynamic or 1 <span class="keyword">for</span> UDP)</span><br><span class="line">  --cport         &lt;port&gt;    <span class="built_in">bind</span> to a specific client port (TCP and UDP, default: ephemeral port)</span><br><span class="line">  -P, --parallel  <span class="comment">#         number of parallel client streams to run</span></span><br><span class="line">  -R, --reverse             run <span class="keyword">in</span> reverse mode (server sends, client receives)</span><br><span class="line">  -w, --window    <span class="comment">#[KMG]    set window size / socket buffer size</span></span><br><span class="line">  -C, --congestion &lt;algo&gt;   <span class="built_in">set</span> TCP congestion control algorithm (Linux and FreeBSD only)</span><br><span class="line">  -M, --set-mss   <span class="comment">#         set TCP/SCTP maximum segment size (MTU - 40 bytes)</span></span><br><span class="line">  -N, --no-delay            <span class="built_in">set</span> TCP/SCTP no delay, disabling Nagle<span class="string">&#x27;s Algorithm</span></span><br><span class="line"><span class="string">  -4, --version4            only use IPv4</span></span><br><span class="line"><span class="string">  -6, --version6            only use IPv6</span></span><br><span class="line"><span class="string">  -S, --tos N               set the IP &#x27;</span><span class="built_in">type</span> of service<span class="string">&#x27;</span></span><br><span class="line"><span class="string">  -L, --flowlabel N         set the IPv6 flow label (only supported on Linux)</span></span><br><span class="line"><span class="string">  -Z, --zerocopy            use a &#x27;</span>zero copy<span class="string">&#x27; method of sending data</span></span><br><span class="line"><span class="string">  -O, --omit N              omit the first n seconds</span></span><br><span class="line"><span class="string">  -T, --title str           prefix every output line with this string</span></span><br><span class="line"><span class="string">  --get-server-output       get results from server</span></span><br><span class="line"><span class="string">  --udp-counters-64bit      use 64-bit counters in UDP test packets</span></span><br><span class="line"><span class="string">[KMG] indicates options that support a K/M/G suffix for kilo-, mega-, or giga-</span></span><br><span class="line"><span class="string">iperf3 homepage at: http://software.es.net/iperf/</span></span><br><span class="line"><span class="string">Report bugs to:     https://github.com/esnet/iperf</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 软件工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NAS </tag>
            
            <tag> 路由 </tag>
            
            <tag> 网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客搭建</title>
      <link href="/Hexo-Blog/"/>
      <url>/Hexo-Blog/</url>
      
        <content type="html"><![CDATA[<h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><h3 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h3><div class="tabs" id="安装git"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="安装git-1">Windows/MacOS</button><button type="button" class="tab " data-href="安装git-2">Linux</button></ul><div class="tab-contents"><div class="tab-item-content active" id="安装git-1"><p>官网下载最新版安装包直接安装即可。</p><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://git-scm.com/">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="">          <i class="anzhiyufont anzhiyu-icon-link" style=""></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">下载安装包</div>            <div class="tag-link-sitename"> Git官网</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div></div><div class="tab-item-content" id="安装git-2"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">更新软件源</span></span><br><span class="line">sudo apt update -y</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">升级软件源</span></span><br><span class="line">sudo apt full-upgrade -y</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装Git</span></span><br><span class="line">sudo apt install git-core</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看版本</span></span><br><span class="line">git --version</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div></div><h3 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h3><div class="tabs" id="安装node.js"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="安装node.js-1">Windows/MacOS</button><button type="button" class="tab " data-href="安装node.js-2">Linux</button></ul><div class="tab-contents"><div class="tab-item-content active" id="安装node.js-1"><p>官网下载最新版安装包直接安装即可。<br>(Node.js 版本需不低于 10.13，建议使用 Node.js 12.0 及以上版本)</p><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://nodejs.cn/">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="">          <i class="anzhiyufont anzhiyu-icon-link" style=""></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">下载安装包</div>            <div class="tag-link-sitename"> Node.js官网</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div></div><div class="tab-item-content" id="安装node.js-2"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">下载 NodeJS</span></span><br><span class="line">wget https://nodejs.org/dist/v20.10.0/node-v20.10.0-linux-x64.tar.xz</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">解压 node-v20.10.0-linux-x64.tar.xz</span></span><br><span class="line">tar -xvf node-v20.10.0-linux-x64.tar.xz</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">删除压缩包 node-v20.10.0-linux-x64.tar.xz</span></span><br><span class="line">rm -f node-v20.10.0-linux-x64.tar.xz</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看隐藏文件</span></span><br><span class="line">ls -a</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">配置环境</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">编辑文件</span></span><br><span class="line">vim .bashrc</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">刷新.bashrc</span></span><br><span class="line">source .bashrc</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">内容</span></span><br><span class="line">export PATH=$PATH:/home/yl/nodejs/node-v20.10.0-linux-x64/bin</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看版本</span></span><br><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div></div><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><p>在终端输入以下命令（Windows使用命令提示符）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br><span class="line">hexo init blog</span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure><br/><h2 id="配置Hexo配置文件config-yml"><a href="#配置Hexo配置文件config-yml" class="headerlink" title="配置Hexo配置文件config.yml"></a>配置Hexo配置文件<code>config.yml</code></h2><ul><li>网站基础信息</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">&#x27;&#x27;</span> <span class="comment">#主标题，不要有空格等特殊符号</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">&#x27;&#x27;</span> <span class="comment">#副标题</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">&#x27;&#x27;</span> <span class="comment">#自我描述，使用“&lt;br&gt;”可换行</span></span><br><span class="line"><span class="attr">keywords:</span> <span class="string">&#x27;&#x27;</span> <span class="comment">#关键词，使用英文逗号分隔，使用“`”代替单引号，如：Mitchell`s Box</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">&#x27;&#x27;</span> <span class="comment">#作者名</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">&#x27;&#x27;</span> <span class="comment">#语言</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">&#x27;&#x27;</span> <span class="comment">#时间区域</span></span><br></pre></td></tr></table></figure><p>例如本站的设置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">MitchellsBox</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">&#x27;生活明朗 万物可爱&#x27;</span></span><br><span class="line"><span class="attr">description:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="attr">keywords:</span> <span class="string">&#x27;生活,blog,博客,学习,分享,Hexo,技术,Mitchell`s Box,MitchellsBox&#x27;</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">Mitchell</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-CN</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">&#x27;Asia/Shanghai&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>网址</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## Set your site url here. For example, if you use GitHub Page, set url as &#x27;https://username.github.io/project&#x27;</span></span><br><span class="line"><span class="attr">url:</span> <span class="string">https://MiQieR.github.io/</span> <span class="comment">#这里改成你的域名</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">:title/</span></span><br><span class="line"><span class="attr">permalink_defaults:</span></span><br><span class="line"><span class="attr">pretty_urls:</span></span><br><span class="line">  <span class="attr">trailing_index:</span> <span class="literal">true</span> <span class="comment"># Set to false to remove trailing &#x27;index.html&#x27; from permalinks</span></span><br><span class="line">  <span class="attr">trailing_html:</span> <span class="literal">true</span> <span class="comment"># Set to false to remove trailing &#x27;.html&#x27; from permalinks</span></span><br></pre></td></tr></table></figure><ul><li>目录</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Directory</span></span><br><span class="line"><span class="attr">source_dir:</span> <span class="string">source</span></span><br><span class="line"><span class="attr">public_dir:</span> <span class="string">public</span></span><br><span class="line"><span class="attr">tag_dir:</span> <span class="string">tags</span></span><br><span class="line"><span class="attr">archive_dir:</span> <span class="string">archives</span></span><br><span class="line"><span class="attr">category_dir:</span> <span class="string">categories</span></span><br><span class="line"><span class="attr">code_dir:</span> <span class="string">downloads/code</span></span><br><span class="line"><span class="attr">i18n_dir:</span> <span class="string">:lang</span></span><br><span class="line"><span class="attr">skip_render:</span> <span class="comment"># 跳过文件夹</span></span><br></pre></td></tr></table></figure><ul><li>文章</li></ul><p>文章新建增加年月日方便管理</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Writing</span></span><br><span class="line"><span class="attr">new_post_name:</span> <span class="string">:title.md</span> <span class="comment"># File name of new posts</span></span><br><span class="line"><span class="attr">default_layout:</span> <span class="string">post</span></span><br><span class="line"><span class="attr">titlecase:</span> <span class="literal">false</span> <span class="comment"># Transform title into titlecase</span></span><br><span class="line"><span class="attr">external_link:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># Open external links in new tab</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">site</span> <span class="comment"># Apply to the whole site</span></span><br><span class="line">  <span class="attr">exclude:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="attr">filename_case:</span> <span class="number">0</span></span><br><span class="line"><span class="attr">render_drafts:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">post_asset_folder:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">relative_link:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">future:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">syntax_highlighter:</span> <span class="string">highlight.js</span></span><br><span class="line"><span class="attr">highlight:</span></span><br><span class="line">  <span class="attr">line_number:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">auto_detect:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">tab_replace:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="attr">wrap:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">hljs:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">prismjs:</span></span><br><span class="line">  <span class="attr">preprocess:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">line_number:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">tab_replace:</span> <span class="string">&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>主页设置</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Home page setting</span></span><br><span class="line"><span class="comment"># path: Root path for your blogs index page. (default = &#x27;&#x27;)</span></span><br><span class="line"><span class="comment"># per_page: Posts displayed per page. (0 = disable pagination)</span></span><br><span class="line"><span class="comment"># order_by: Posts order. (Order by date descending by default)</span></span><br><span class="line"><span class="attr">index_generator:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="number">10</span></span><br><span class="line">  <span class="attr">order_by:</span> <span class="string">-date</span></span><br></pre></td></tr></table></figure><ul><li>分类 &amp; 标签</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Category &amp; Tag</span></span><br><span class="line"><span class="attr">default_category:</span> <span class="string">uncategorized</span></span><br><span class="line"><span class="attr">category_map:</span></span><br><span class="line"><span class="attr">tag_map:</span></span><br></pre></td></tr></table></figure><ul><li>元数据元素</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Metadata elements</span></span><br><span class="line"><span class="comment">## https://developer.mozilla.org/en-US/docs/Web/HTML/Element/meta</span></span><br><span class="line"><span class="attr">meta_generator:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><ul><li>日期 &#x2F; 时间格式</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Date / Time format</span></span><br><span class="line"><span class="comment">## Hexo uses Moment.js to parse and display date</span></span><br><span class="line"><span class="comment">## You can customize the date format as defined in</span></span><br><span class="line"><span class="comment">## http://momentjs.com/docs/#/displaying/format/</span></span><br><span class="line"><span class="attr">date_format:</span> <span class="string">YYYY-MM-DD</span></span><br><span class="line"><span class="attr">time_format:</span> <span class="string">HH:mm:ss</span></span><br><span class="line"><span class="comment">## updated_option supports &#x27;mtime&#x27;, &#x27;date&#x27;, &#x27;empty&#x27;</span></span><br><span class="line"><span class="attr">updated_option:</span> <span class="string">&#x27;mtime&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>分页设置</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Pagination</span></span><br><span class="line"><span class="comment">## Set per_page to 0 to disable pagination</span></span><br><span class="line"><span class="attr">per_page:</span> <span class="number">10</span></span><br><span class="line"><span class="attr">pagination_dir:</span> <span class="string">page</span></span><br></pre></td></tr></table></figure><ul><li>主题选择</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">anzhiyu</span></span><br></pre></td></tr></table></figure><ul><li>博客部署</li></ul><p>首先需要安装插件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">&#x27;git&#x27;</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://github.com/MiQieR/MiQieR.github.io.git</span> <span class="comment">#如果你托管到GitHub，这里填写该项目的地址</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span> <span class="comment">#该项目的分支</span></span><br></pre></td></tr></table></figure><br/><h2 id="Front-matter-的基本认识"><a href="#Front-matter-的基本认识" class="headerlink" title="Front-matter 的基本认识"></a>Front-matter 的基本认识</h2><h3 id="Page-Front-matter-用于页面配置"><a href="#Page-Front-matter-用于页面配置" class="headerlink" title="Page Front-matter 用于页面配置"></a>Page Front-matter 用于页面配置</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: # 【必需】页面标题</span><br><span class="line">date: # 【必需】页面创建日期</span><br><span class="line">type: # 【必需】标签、分类、关于、音乐馆、友情链接、相册、相册详情、朋友圈、即刻页面需要配置</span><br><span class="line">updated: # 【可选】页面更新日期</span><br><span class="line">description: # 【可选】页面描述</span><br><span class="line">keywords: # 【可选】页面关键字</span><br><span class="line">comments: # 【可选】显示页面评论模块(默认 true)</span><br><span class="line">top<span class="emphasis">_img: # 【可选】页面顶部图片</span></span><br><span class="line"><span class="emphasis">mathjax: # 【可选】显示 mathjax(当设置 mathjax 的 per_</span>page: false 时，才需要配置，默认 false)</span><br><span class="line">katex: # 【可选】显示 katex(当设置 katex 的 per<span class="emphasis">_page: false 时，才需要配置，默认 false)</span></span><br><span class="line"><span class="emphasis">aside: # 【可选】显示侧边栏 (默认 true)</span></span><br><span class="line"><span class="emphasis">aplayer: # 【可选】在需要的页面加载 aplayer 的 js 和 css,请参考文章下面的音乐 配置</span></span><br><span class="line"><span class="emphasis">highlight_</span>shrink: # 【可选】配置代码框是否展开(true/false)(默认为设置中 highlight<span class="emphasis">_shrink 的配置)</span></span><br><span class="line"><span class="emphasis">top_</span>single<span class="emphasis">_background: # 【可选】部分页面的顶部模块背景图片</span></span><br><span class="line"><span class="emphasis">---</span></span><br></pre></td></tr></table></figure><h3 id="Post-Front-matter-用于文章页配置"><a href="#Post-Front-matter-用于文章页配置" class="headerlink" title="Post Front-matter 用于文章页配置"></a>Post Front-matter 用于文章页配置</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title:  # 【必需】文章标题</span><br><span class="line">date:  # 【必需】文章创建日期</span><br><span class="line">updated:  # 【可选】文章更新日期</span><br><span class="line">tags:  # 【可选】文章标签</span><br><span class="line">categories:  # 【可选】文章分类</span><br><span class="line">keywords:  # 【可选】文章关键字</span><br><span class="line">description:  # 【可选】文章描述</span><br><span class="line">top<span class="emphasis">_img:  # 【可选】文章顶部图片</span></span><br><span class="line"><span class="emphasis">cover:  # 【可选】文章缩略图(如果没有设置 top_</span>img,文章页顶部将显示缩略图，可设为 false/图片地址/留空)</span><br><span class="line">comments:  # 【可选】显示文章评论模块(默认 true)</span><br><span class="line">toc:  # 【可选】显示文章 TOC(默认为设置中 toc 的 enable 配置)</span><br><span class="line">toc<span class="emphasis">_number:  # 【可选】显示 toc_</span>number(默认为设置中 toc 的 number 配置)</span><br><span class="line">toc<span class="emphasis">_style_</span>simple:  # 【可选】显示 toc 简洁模式</span><br><span class="line">copyright:  # 【可选】显示文章版权模块(默认为设置中 post<span class="emphasis">_copyright 的 enable 配置)</span></span><br><span class="line"><span class="emphasis">copyright_</span>author:  # 【可选】文章版权模块的文章作者</span><br><span class="line">copyright<span class="emphasis">_author_</span>href:  # 【可选】文章版权模块的文章作者链接</span><br><span class="line">copyright<span class="emphasis">_url:  # 【可选】文章版权模块的文章链接链接</span></span><br><span class="line"><span class="emphasis">copyright_</span>info:  # 【可选】文章版权模块的版权声明文字</span><br><span class="line">mathjax:  # 【可选】显示 mathjax(当设置 mathjax 的 per<span class="emphasis">_page: false 时，才需要配置，默认 false)</span></span><br><span class="line"><span class="emphasis">katex:  # 【可选】显示 katex(当设置 katex 的 per_</span>page: false 时，才需要配置，默认 false)</span><br><span class="line">aplayer:  # 【可选】在需要的页面加载 aplayer 的 js 和 css,请参考文章下面的音乐 配置</span><br><span class="line">highlight<span class="emphasis">_shrink:  # 【可选】配置代码框是否展开(true/false)(默认为设置中 highlight_</span>shrink 的配置)</span><br><span class="line">aside:  # 【可选】显示侧边栏 (默认 true)</span><br><span class="line">swiper<span class="emphasis">_index:  # 【可选】首页轮播图配置 index 索引，数字越小越靠前</span></span><br><span class="line"><span class="emphasis">top_</span>group<span class="emphasis">_index:  # 【可选】首页右侧卡片组配置, 数字越小越靠前</span></span><br><span class="line"><span class="emphasis">ai:  # 【可选】文章ai摘要</span></span><br><span class="line"><span class="emphasis">main_</span>color:  # 【可选】文章主色，必须是16进制颜色且有6位，不可缩减，例如#ffffff 不可写成#fff</span><br><span class="line">---</span><br></pre></td></tr></table></figure><br/><h2 id="Hexo基本命令"><a href="#Hexo基本命令" class="headerlink" title="Hexo基本命令"></a>Hexo基本命令</h2><ul><li>新建文章</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">&quot;文章名称&quot;</span> </span><br></pre></td></tr></table></figure><ul><li>新建页面</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page <span class="string">&quot;页面名称&quot;</span></span><br></pre></td></tr></table></figure><ul><li>删除生成的静态文件</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line"><span class="comment"># 可简写为hexo cl</span></span><br></pre></td></tr></table></figure><ul><li>生成静态文件</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br><span class="line"><span class="comment"># 可简写为hexo g</span></span><br></pre></td></tr></table></figure><ul><li>启动本地服务器查看网页效果</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br><span class="line"><span class="comment"># 可简写为hexo s</span></span><br><span class="line"><span class="comment"># 访问 http://localhost:4000/ 查看</span></span><br></pre></td></tr></table></figure><ul><li>部署网站</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy</span><br><span class="line"><span class="comment"># 可简写为hexo d</span></span><br></pre></td></tr></table></figure><ul><li>使用<code>&amp;&amp;</code>连接多个命令，比如常见的“hexo三连”：</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl &amp;&amp; hexo g &amp;&amp; hexo d</span><br></pre></td></tr></table></figure><br/><h2 id="使用第三方主题"><a href="#使用第三方主题" class="headerlink" title="使用第三方主题"></a>使用第三方主题</h2><p>这里以本站使用的<code>Anzhiyu</code>主题为例</p><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://github.com/anzhiyu-c/hexo-theme-anzh">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="">          <i class="anzhiyufont anzhiyu-icon-link" style=""></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">安知鱼主题</div>            <div class="tag-link-sitename"> 基于Butterfly的Hexo主题</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><ul><li>安装安知鱼主题</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b main https://github.com/anzhiyu-c/hexo-theme-anzhiyu.git themes/anzhiyu</span><br></pre></td></tr></table></figure><ul><li>修改Hexo配置文件<code>_config.yml</code>以改用安知鱼主题</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">anzhiyu</span></span><br></pre></td></tr></table></figure><ul><li>安装<code>pug</code>和<code>stylus</code>渲染插件</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure><ul><li>覆盖主题配置文件</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp -rf ./themes/anzhiyu/_config.yml ./_config.anzhiyu.yml</span><br></pre></td></tr></table></figure><ul><li>参考官方文档配置主题<div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://docs.anheyu.com/">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="">          <i class="anzhiyufont anzhiyu-icon-link" style=""></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">安知鱼主题官方文档</div>            <div class="tag-link-sitename"> 安和鱼</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div></li></ul>]]></content>
      
      
      <categories>
          
          <category> 博客搭建 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建环境：STM32 在 QEMU 虚拟机上运行 Cortex-M 版 FreeRTOS (基于 Eclipse IDE)</title>
      <link href="/FreeRTOS-STM32-QEMU-Eclipse/"/>
      <url>/FreeRTOS-STM32-QEMU-Eclipse/</url>
      
        <content type="html"><![CDATA[<blockquote><p>别问我为什么用 Eclipse 这么古老的 IDE。我找不到别的方式能满足在 STM32 在 QEMU 虚拟机上运行 Cortex-M 版 FreeRTOS 这苛刻的要求了。</p></blockquote><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>在 Windows 10&#x2F;11 系统的PC上搭建环境。</p><p><strong>步骤 1 ~ 9：</strong>搭建 Eclipse 环境，并在 QEMU 上分别运行 FreeRTOS Demo 和 LED 闪烁 Demo</p><p><strong>步骤 10：</strong>将 FreeRTOS 移植到 Eclipse 中的项目中</p><br/><h2 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h2><h3 id="1-安装-QEMU"><a href="#1-安装-QEMU" class="headerlink" title="1. 安装 QEMU"></a>1. 安装 QEMU</h3><a class="btn-anzhiyu larger" href="https://qemu.weilnetz.de/"   title="下载 QEMU 安装包"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>下载 QEMU 安装包</span></a><p>推荐版本：<code>v8.1.0-12034-g129566d84e</code></p><p>在终端运行下面的命令来检查安装是否成功：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">qemu-system-x86_64 --version</span><br></pre></td></tr></table></figure><p>添加 QEMU 安装文件夹到环境变量，默认路径为<code>C:\Program Files\qemu</code></p><br/><h3 id="2-安装-Eclipse"><a href="#2-安装-Eclipse" class="headerlink" title="2. 安装 Eclipse"></a>2. 安装 Eclipse</h3><a class="btn-anzhiyu larger" href="https://mp.weixin.qq.com/s/sVqIZjhrNFjLgGRkSTsGtA/"   title="下载 Eclipse 安装包"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>下载 Eclipse 安装包</span></a><p>推荐版本：<code>Eclipse 2020-12</code> （不推荐使用最新版本）</p><p>选择如下图的正确版本：</p><img src="/FreeRTOS-STM32-QEMU-Eclipse/FreeRTOS-STM32-QEMU-Eclipse_1.jpg" class="" title="图片"><br/><h3 id="3-安装-Eclipse-CDT-C-C-Development-Tooling"><a href="#3-安装-Eclipse-CDT-C-C-Development-Tooling" class="headerlink" title="3. 安装 Eclipse CDT (C&#x2F;C++ Development Tooling)"></a>3. 安装 Eclipse CDT (C&#x2F;C++ Development Tooling)</h3><a class="btn-anzhiyu larger" href="https://github.com/eclipse-cdt/cdt/blob/main/Downloads.md"   title="下载 Eclipse CDT"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>下载 Eclipse CDT</span></a><p>推荐版本：<code>CDT 10.1.0 for Eclipse 2020-12</code></p><img src="/FreeRTOS-STM32-QEMU-Eclipse/FreeRTOS-STM32-QEMU-Eclipse_2.jpg" class="" title="图片"><br/><h3 id="4-安装-MinGW"><a href="#4-安装-MinGW" class="headerlink" title="4. 安装 MinGW"></a>4. 安装 MinGW</h3><a class="btn-anzhiyu larger" href="https://sourceforge.net/projects/mingw/files/MinGW/"   title="下载 MinGW"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>下载 MinGW</span></a><p>参考这篇<a href="https://zhuanlan.zhihu.com/p/36450694">知乎专栏安装 MinGW</a></p><p>添加 MinGW 到环境变量，需要添加的路径为：</p><ul><li><code>C:\MinGW\bin</code></li><li><code>C:\MinGW\msys\1.0\bin</code></li><li><code>C:\MinGW\mingw32\bin</code></li></ul><p>在终端运行下面的命令来检查安装是否成功：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gcc -v</span><br></pre></td></tr></table></figure><br/><h3 id="5-安装-GNU-Arm-Embedded-Toolchain"><a href="#5-安装-GNU-Arm-Embedded-Toolchain" class="headerlink" title="5. 安装 GNU Arm Embedded Toolchain"></a>5. 安装 GNU Arm Embedded Toolchain</h3><a class="btn-anzhiyu larger" href="https://github.com/xpack-dev-tools/arm-none-eabi-gcc-xpack/releases/"   title="下载 GNU Arm Embedded Toolchain"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>下载 GNU Arm Embedded Toolchain</span></a><p>推荐版本：<code>10.3.1-2.2</code> （不推荐使用最新版本）</p><p>添加 bin 文件夹到环境变量，需要添加的路径为：<code>...\arm-none-eabi-gcc-10.3.1-2.2-win32-x64\xpack-arm-none-eabi-gcc-10.3.1-2.2\bin</code></p><br/><h3 id="6-安装-Cygwin"><a href="#6-安装-Cygwin" class="headerlink" title="6. 安装 Cygwin"></a>6. 安装 Cygwin</h3><a class="btn-anzhiyu larger" href="https://www.cygwin.com/install.html"   title="下载 Cygwin"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>下载 Cygwin</span></a><p>推荐使用最新版本</p><p>参考这篇<a href="https://blog.csdn.net/weixin_44778232/article/details/127579150">CSDN 安装 Cygwin</a></p><p>添加 bin 文件夹到环境变量，需要添加的路径为：<code>C:\cygwin64\bin</code></p><p>在终端运行下面的命令来检查安装是否成功：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cygcheck -c cygwin</span><br><span class="line">gcc --version</span><br><span class="line">g++ --version</span><br><span class="line">gdb --version</span><br><span class="line">make --version</span><br></pre></td></tr></table></figure><br/><h3 id="7-下载-FreeRTOS"><a href="#7-下载-FreeRTOS" class="headerlink" title="7. 下载 FreeRTOS"></a>7. 下载 FreeRTOS</h3><a class="btn-anzhiyu larger" href="https://www.freertos.org/zh-cn-cmn-s/"   title="下载 FreeRTOS"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>下载 FreeRTOS</span></a><p>加载 FreeRTOS demo 到 Eclipse</p><img src="/FreeRTOS-STM32-QEMU-Eclipse/FreeRTOS-STM32-QEMU-Eclipse_3.jpg" class="" title="图片"><img src="/FreeRTOS-STM32-QEMU-Eclipse/FreeRTOS-STM32-QEMU-Eclipse_4.jpg" class="" title="图片"><p>接下来便可以运行 FreeRTOS demo 了：</p><img src="/FreeRTOS-STM32-QEMU-Eclipse/FreeRTOS-STM32-QEMU-Eclipse_5.jpg" class="" title="图片"><img src="/FreeRTOS-STM32-QEMU-Eclipse/FreeRTOS-STM32-QEMU-Eclipse_6.jpg" class="" title="图片"><br/><h3 id="8-下载-QEMU-for-ARM"><a href="#8-下载-QEMU-for-ARM" class="headerlink" title="8. 下载 QEMU for ARM"></a>8. 下载 QEMU for ARM</h3><a class="btn-anzhiyu larger" href="https://github.com/xpack-dev-tools/qemu-arm-xpack/releases/"   title="下载 QEMU for ARM"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>下载 QEMU for ARM</span></a><p>推荐版本：<code>2.8.0-12</code> （不推荐使用最新版本）</p><p>添加 bin 文件夹到环境变量，需要添加的路径为：<code>...\xpack-qemu-arm-2.8.0-12-win32-x64\xpack-qemu-arm-2.8.0-12\bin</code></p><h3 id="9-创建一个-STM32-F407-项目"><a href="#9-创建一个-STM32-F407-项目" class="headerlink" title="9. 创建一个 STM32-F407 项目"></a>9. 创建一个 STM32-F407 项目</h3><img src="/FreeRTOS-STM32-QEMU-Eclipse/FreeRTOS-STM32-QEMU-Eclipse_7.jpg" class="" title="图片"><img src="/FreeRTOS-STM32-QEMU-Eclipse/FreeRTOS-STM32-QEMU-Eclipse_8.jpg" class="" title="图片"><p>接下来便可以运行项目：</p><img src="/FreeRTOS-STM32-QEMU-Eclipse/FreeRTOS-STM32-QEMU-Eclipse_9.jpg" class="" title="图片"><img src="/FreeRTOS-STM32-QEMU-Eclipse/FreeRTOS-STM32-QEMU-Eclipse_10.jpg" class="" title="图片"><br/><h3 id="10-将-FreeRTOS-移植到-Eclipse-中的项目中"><a href="#10-将-FreeRTOS-移植到-Eclipse-中的项目中" class="headerlink" title="10. 将 FreeRTOS 移植到 Eclipse 中的项目中"></a>10. 将 FreeRTOS 移植到 Eclipse 中的项目中</h3><h4 id="10-1"><a href="#10-1" class="headerlink" title="10-1"></a>10-1</h4><p>打开在第7步中下载的 FreeRTOS 文件，可以删除除了<code>FreeRTOS</code>文件夹外的其它文件。</p><p>继续打开<code>FreeRTOS</code>文件夹，可以删除除了<code>Demo</code>和<code>Source</code>文件夹外的其它文件。</p><p>继续打开<code>Demo</code>文件夹，打开<code>CORTEX_STM32F103_GCC_Rowley</code>文件夹，复制出来一份<code>FreeRTOSConfig.h</code>文件，然后删除整个Demo文件夹。</p><h4 id="10-2"><a href="#10-2" class="headerlink" title="10-2"></a>10-2</h4><p>打开<code>Source\portable</code>文件夹，可以删除除了<code>GCC</code>和<code>MemMang</code>文件夹外的其它文件。</p><p>继续打开<code>GCC</code>文件夹，由于我们模拟的STM32F103，所以删除除了<code>ARM_CM3</code>文件夹外的其它文件。</p><p>打开<code>MemMang</code>文件夹，选择一种内存管理方式，例如我选择的<code>heap_4.c</code>。保存整个FreeRTOS文件夹。</p><h4 id="10-3"><a href="#10-3" class="headerlink" title="10-3"></a>10-3</h4><p>启动 Eclipse，点击 File &gt; New &gt; Project，选择 C project 然后点 Next：</p><img src="/FreeRTOS-STM32-QEMU-Eclipse/FreeRTOS-STM32-QEMU-Eclipse_11.jpg" class="" title="图片"><p>选择 STM32F1xx C&#x2F;C++ Project：</p><img src="/FreeRTOS-STM32-QEMU-Eclipse/FreeRTOS-STM32-QEMU-Eclipse_12.jpg" class="" title="图片"><p>使用默认配置，一直点击 Next。使用 GNU ARM 的 bin 目录：</p><img src="/FreeRTOS-STM32-QEMU-Eclipse/FreeRTOS-STM32-QEMU-Eclipse_13.jpg" class="" title="图片"><h4 id="10-4"><a href="#10-4" class="headerlink" title="10-4"></a>10-4</h4><p>将 FreeRTOS 文件夹粘贴到项目文件中：</p><img src="/FreeRTOS-STM32-QEMU-Eclipse/FreeRTOS-STM32-QEMU-Eclipse_14.jpg" class="" title="图片"><p>将 FreeRTOSConfig.h 文件粘贴到项目文件中：</p><img src="/FreeRTOS-STM32-QEMU-Eclipse/FreeRTOS-STM32-QEMU-Eclipse_15.jpg" class="" title="图片"><h4 id="10-5"><a href="#10-5" class="headerlink" title="10-5"></a>10-5</h4><p>右键项目根目录，选择 Properties，然后按照下图操作：</p><img src="/FreeRTOS-STM32-QEMU-Eclipse/FreeRTOS-STM32-QEMU-Eclipse_16.jpg" class="" title="图片"><p>添加下图中的3个目录：</p><img src="/FreeRTOS-STM32-QEMU-Eclipse/FreeRTOS-STM32-QEMU-Eclipse_17.jpg" class="" title="图片"><p>对项目中的每个文件夹右键，选择 Properties，关闭<code>Exclude resource from build</code>，以解决文件缺失错误：</p><img src="/FreeRTOS-STM32-QEMU-Eclipse/FreeRTOS-STM32-QEMU-Eclipse_18.jpg" class="" title="图片"><h4 id="10-6"><a href="#10-6" class="headerlink" title="10-6"></a>10-6</h4><p>在<code>main.c</code>中添加如下代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;FreeRTOS.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;FreeRTOSConfig.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;task.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;queue.h&quot;</span></span></span><br></pre></td></tr></table></figure><h4 id="10-7"><a href="#10-7" class="headerlink" title="10-7"></a>10-7</h4><p>打开 Run configurations：</p><img src="/FreeRTOS-STM32-QEMU-Eclipse/FreeRTOS-STM32-QEMU-Eclipse_19.jpg" class="" title="图片"><p>添加如下信息：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Board name : STM32-P103</span><br><span class="line">Device name : STM32F103RB</span><br></pre></td></tr></table></figure><img src="/FreeRTOS-STM32-QEMU-Eclipse/FreeRTOS-STM32-QEMU-Eclipse_20.jpg" class="" title="图片"><p>在 global 中添加 QEMU 的 bin 目录，然后点击 Apply 和 Apply and close：</p><img src="/FreeRTOS-STM32-QEMU-Eclipse/FreeRTOS-STM32-QEMU-Eclipse_21.jpg" class="" title="图片"><h4 id="成功！"><a href="#成功！" class="headerlink" title="成功！"></a>成功！</h4><img src="/FreeRTOS-STM32-QEMU-Eclipse/FreeRTOS-STM32-QEMU-Eclipse_22.jpg" class="" title="图片">]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows </tag>
            
            <tag> 嵌入式 </tag>
            
            <tag> 开发板 </tag>
            
            <tag> 开发 </tag>
            
            <tag> 虚拟机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我家云安装OpenWrt：作为旁路由/软路由+轻量化NAS</title>
      <link href="/Chainedbox-OpenWrt/"/>
      <url>/Chainedbox-OpenWrt/</url>
      
        <content type="html"><![CDATA[<h2 id="经典开篇先说两句"><a href="#经典开篇先说两句" class="headerlink" title="经典开篇先说两句"></a>经典开篇先说两句</h2><p>上一篇博客发布之后，我用了一段时间OMV系统，感觉还可以，只是想要安装软件实现其他功能不太方便。很多软件都无法安装，而且软件安装后，我也懒得改主页图标和端口的映射。最重要的一点是，我了解到在群辉系统或者OpenWrt系统中，阿里云盘是可以映射到本地作为本地磁盘的一部分，而且还有NASTools这款全自动整理、削刮影音库的软件，这无疑是戳到了我的使用痛点。然而我一直没有见过我家云的OpenWrt固件，直到我看到了一个定制OpenWrt固件的网站…</p><br/><hr><h2 id="硬件配置"><a href="#硬件配置" class="headerlink" title="硬件配置"></a>硬件配置</h2><p>重温一下我家云的硬件配置（粒子云相同）：</p><ul><li>CPU：瑞芯微 RK3288<ul><li>4x ARM Cortex-A17 @ 1.5Ghz <em>(被限制了主频，实际最高1.3Ghz)</em></li><li>28nm 制程，GPU为Mali-T764 <em>(但无法驱动)</em></li></ul></li><li>内存：1GB DDR3 RAM</li><li>闪存：8GB EMMC ROM</li><li>接口：1x SATA3 (3.5寸硬盘槽位)，1x USB 3.0，1x USB 2.0，1x 1000M RJ45<ul><li>受限于RK3288的带宽，SATA3 和 USB 3.0 无法同时工作</li></ul></li></ul><blockquote><p>我家云的CPU与友善R2S是同款RK3288平台，而且R2S的一个网口也是USB转接的，这也说明我家云其实是可以在USB口插一个USB网卡，当R2S软路由去使用</p></blockquote><br/><hr><h2 id="刷机方法"><a href="#刷机方法" class="headerlink" title="刷机方法"></a>刷机方法</h2><p>订制OpenWrt固件的网站：<a href="https://supes.top/">https://supes.top/</a></p><p>如果你懒得去订制，也可以选择下载我订制的固件：<a href="https://cloud.189.cn/t/ZJB7ZfzeAfqi">下载链接</a>（访问码：spk4）| .gz格式压缩包，请解压后使用</p><p><em>supes.top提供的有两个包我没有用到，这里也分享出来吧：<a href="https://cloud.189.cn/t/JvIFjarQJfue">下载</a>（访问码：rur6）</em></p><p>具体的刷机方法和之前刷OMV的方法相同，这里就不再赘述，本文将重点讲讲刷好后的使用方法。</p><br/><hr><h2 id="首次使用"><a href="#首次使用" class="headerlink" title="首次使用"></a>首次使用</h2><blockquote><p>不同于OMV这种就是作为NAS的系统，OpenWrt这个作为路由的系统在初次配置上显然更加繁琐</p></blockquote><h3 id="设置网络"><a href="#设置网络" class="headerlink" title="设置网络"></a>设置网络</h3><p>由于默认的网口地址是10.0.0.1，是路由的地址，所以需要先将我家云网口的地址改为主路由下的网段。可以参考旁路由的设置方法。</p><ol><li><p>将我家云和电脑通过网线连接，在浏览器中打开后台地址；如果你用的是我订制的固件，那么后台地址就是10.0.0.1</p></li><li><p>登录后台，如果你用的是我订制的固件，那么密码就是root</p></li><li><p>选择网络 - 接口，点击LAN口的编辑按钮，将 IPv4 地址改为主路由网段下的地址。比如我的华硕主路由的地址是192.168.50.1，那么网段下的地址就为192.168.50.2~192.168.50.254。改好后点击保存并应用</p></li><li><p>将我家云与主路由通过网线连接，在浏览器中打开上一步中设置的地址，即可打开我家云的后台管理界面</p></li><li><p>选择网络 - 接口，点击LAN口的编辑按钮，在 IPv4 网关 和 DNS 服务器 处填写主路由的IP地址，然后勾选 DHCP服务器 下的 忽略此接口 选项。改好后点击保存并应用</p></li><li><p>网络 - 防火墙 - 常规设置，取消勾选 启用 SYN-flood 防御 和 Enable FullCone NAT6 选项框</p></li><li><p>网络 - 防火墙 - 区域，勾选 lan→wan 的 IP 动态伪装</p></li></ol><h3 id="安装必要的软件"><a href="#安装必要的软件" class="headerlink" title="安装必要的软件"></a>安装必要的软件</h3><blockquote><p>由于supes.top定制OpenWrt固件时，非赞助用户只能选择10个软件包，所以有一些软件需要我们自己安装</p></blockquote><ul><li><p>通常安装软件的方法为 系统 - 软件包，先点击更新列表，再到筛选器中寻找要安装的软件包，点击安装即可</p></li><li><p>也可通过上传软件包，安装下载好的软件包</p></li><li><p>还有一种方法就是安装 iStore 商店，很多软件都可以在 iStore 中安装：</p><ul><li><a href="">下载luci-app-store_0.1.8-10_all.ipk</a></li></ul></li></ul><h4 id="安装必要软件包"><a href="#安装必要软件包" class="headerlink" title="安装必要软件包"></a>安装必要软件包</h4><p>如果你用的是我订制的固件，那么以下软件包已经包含了：</p><p><code>luci-app-aliyundrive-webdav</code> 阿里云盘WebDav，<code>luci-app-aria2</code> Aria2下载工具，<code>luci-app-dockerman</code> Docker管理，<code>luci-app-filebrowser</code> 文件管理，<code>luci-app-netdata</code> 性能监测，<code>luci-app-ramfree</code> 释放内存，<code>luci-app-samba4</code> 文件共享，<code>luci-app-ttyd</code> 终端</p><p>推荐安装：</p><p><code>luci-app-diskman </code> 磁盘管理，<code>luci-app-qbittorrent</code> BT下载工具，<code>luci-app-transmission</code> BT下载，<code>luci-app-vsftpd</code> FTP服务器</p><p>如果你有其他特殊需求，可以自行订制固件或自行安装需要的软件</p><h4 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h4><blockquote><p>supes.top订制的固件居然没有Docker……所以还得手动安装</p><p>这部分参考自<a href="https://opclash.com/luyou/283.html">https://opclash.com/luyou/283.html</a></p></blockquote><ol><li><p>安装所需依赖：<code>luci-lib-jsonc</code>，<code>luci-lib-docker</code>，<code>dockerd</code>，<code>docker</code>；注意使用筛选器时需要删掉默认填上去的<code>luci-app</code></p></li><li><p>将 EMMC 中 5.15GB 的一块分区划给Docker使用：进入 系统 - 挂载点 - 挂载点，点击 添加，UUID选择有 <code>/dev/mmcblk0p4</code> 的那个UUID；挂载点点击自定义，然后<code>/opt</code> 回车，点击保存</p><img src="/Chainedbox-OpenWrt/Chainedbox-OpenWrt_1.jpg" class="" title="图片"></li><li><p>更换 配置OPKG 内的软件源这步可以跳过，op.supes.top 提供的软件源还是可以的</p></li><li><p>安装 <code>luci-app-dockerman</code>，如果之前没安装，这里必须要安装了</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">luci-app-dockerman的开源地址：</span></span><br><span class="line">https://github.com/lisaac/luci-app-dockerman</span><br></pre></td></tr></table></figure></li><li><p>启动Docker</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">启动Docker：</span></span><br><span class="line">/etc/init.d/dockerd start</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">设置Docker开机自启：</span></span><br><span class="line">ln -s /etc/init.d/dockerd /etc/rc.d/S99docker</span><br></pre></td></tr></table></figure></li></ol><br/><hr><h2 id="整一些花活"><a href="#整一些花活" class="headerlink" title="整一些花活"></a>整一些花活</h2><h3 id="挂载阿里云盘为WebDav服务"><a href="#挂载阿里云盘为WebDav服务" class="headerlink" title="挂载阿里云盘为WebDav服务"></a>挂载阿里云盘为WebDav服务</h3><ul><li>挂载网盘为WebDav后，局域网内的手机平板等设备就可以通过WebDav服务观看网盘内的电影了</li><li>原理是使用 阿里云盘WebDav</li></ul><h4 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h4><ol><li>如果你前面没有安装<code>luci-app-aliyundrive-webdav</code>软件包，则这里必须安装</li><li>打开 服务 - 阿里云盘WebDav，勾选启用；双击 Refresh Token，用手机端阿里云盘扫描二维码；监听主机 填写我家云的IP地址，监听端口可以自己设置，1024~49151内不与其他软件冲突即可；最后设置用户名和密码，保存并应用</li><li>此时手机端播放器就可以添加WebDav服务了。例如nPlayer：网络 - 左上角加号 - WebDav，标题随便填，主机填我家云的IP，用户名、密码和端口填刚刚填的，路径&#x2F;，点击右上角存储即可</li></ol><blockquote><p>这里也可使用 Alist 软件 (从iStore中安装) 挂载其他网盘为WebDav服务，方法类似，具体每种网盘获取Token的方法请参考<a href="https://alist.nn.ci/zh/">Alist官方文档</a></p></blockquote><br/><h3 id="将阿里云盘WebDav服务挂载到本地"><a href="#将阿里云盘WebDav服务挂载到本地" class="headerlink" title="将阿里云盘WebDav服务挂载到本地"></a>将阿里云盘WebDav服务挂载到本地</h3><ul><li>这样就可以使我家云上的软件访问阿里云盘中的文件了</li><li>原理是使用 Rclone</li></ul><blockquote><p>理论上可以通过CloudDrive (Docker版，<a href="https://hub.docker.com/r/cloudnas/clouddrive">官方地址</a>) 挂载，但是我经过测试，发现挂载后emby、Jellyfin等家庭流媒体库软件无法搜索到挂载的网盘，无论是通过CloudDrive直接挂载阿里云盘，还是先用阿里云盘WebDav&#x2F;Alist挂载为WebDav服务，再用CloudDrive挂载都不行</p><blockquote><p>网上有人说使用 <code>luci-app-cifs-mount</code> 共享盘挂载软件包也能起到与本部分相同的作用，但我并未尝试</p></blockquote></blockquote><blockquote><p>这部分参考自：<a href="https://blog.csdn.net/qq_36630201/article/details/120057928?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522167691218416782427489178%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&request_id=167691218416782427489178&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-2-120057928-null-null.142%5Ev73%5Econtrol_1,201%5Ev4%5Eadd_ask,239%5Ev2%5Einsert_chatgpt&utm_term=rclone%E6%8C%82%E8%BD%BDwebdav&spm=1018.2226.3001.4187">将阿里云盘挂载为Webdav并使用rclone挂载到本地</a>，<a href="https://www.right.com.cn/FORUM/forum.php?mod=viewthread&tid=7371875&page=1&simpletype=no">rclone 开机自动挂载目录怎样搞！！</a> 和 <a href="https://www.right.com.cn/FORUM/forum.php?mod=viewthread&tid=8227874&highlight=rclone+%EF%BF%BD%EF%BF%BD%EF%BF%BD%EF%BF%BD%EF%BF%BD%D4%B6%EF%BF%BD%EF%BF%BD%EF%BF%BD%EF%BF%BD%EF%BF%BD">[N1盒子] openwrt通过rclone挂载onedrive网盘并设置开机自动挂载教程</a></p></blockquote><h4 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h4><ol><li><p>安装 <code>luci-app-rclone</code> 软件包，但可能是软件源的问题，它必须的包 <code>rclone-ng</code> 和它自己都不能正常安装，所以这两个包我在网上找到的，并手动安装上。这是我下载的 <code>rclone-ng</code> 和 <code>luci-app-rclone</code> 包：<a href="https://cloud.189.cn/t/iauaY3zuE3qm">下载这两个包</a>（访问码：nlr7）</p></li><li><p>打开 存储 - Rclone，勾选 启动 rclone 后台服务 选项框，保存并应用</p></li><li><p>配置rclone，在终端中输入：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rclone config</span><br></pre></td></tr></table></figure><p>然后根据提示操作即可：其中 type 选 webdav (38)，url 输入 <code>http://&lt;我家云的IP&gt;:&lt;阿里云盘WebDav的监听端口</code> ，vendor 选 other (5)，password 自己设置即可，Edit advanced config? 选 n</p></li><li><p>按q退出后，配置文档会保存在<code>/root/.config/rclone/rclone.conf</code>，我们需要移动它到 存储 - Rclone 中设定的 rclone 配置文件地址，即 <code>/etc/systemd/system/rclone.conf</code> 下：</p><blockquote><p>你也可以在 存储 - Rclone 中点击下载，查看Rclone的配置文档，使用VS Code编辑后再上传</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv /root/.config/rclone/rclone.conf /etc/systemd/system/rclone.conf</span><br></pre></td></tr></table></figure></li><li><p>建立一个文件夹，作为挂载的目录，这里我的代码如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir /mnt/sda1/Aliyundrive</span><br></pre></td></tr></table></figure></li><li><p>挂载</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">rclone mount &lt;DriveName&gt;:&lt;Folder&gt; &lt;LocalFolder&gt; --cache-dir /tmp --allow-other --vfs-cache-mode writes --allow-non-empty</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">按 Ctrl+c 会卸载(Unmount)</span></span><br></pre></td></tr></table></figure><p>这里需要根据实际情况，替换代码中被&lt;&gt;标记的部分：&lt;DriveName&gt;为配置Rclone的时候设置的name；&lt;Folder&gt; 没有特殊要求的话填 <code>/</code> 即可；&lt;LocalFolder&gt;是你本地挂载的地址，也就是上一步中<code>mkdir</code>后面的地址</p><p>输入这段命令并回车后如果没有返回，那就是正在挂载中，在 系统 - 挂载点 - 已挂载的文件系统 处可以看到，你也可以通过 存储 - 文件管理器 - 打开管理界面 (FileBrowser) 查看是否可以访问挂载的阿里云盘</p></li><li><p>开机自启</p><p>上面这段命令直接填入本地启动脚本是无法在开机的时候挂载成功的，且上面一步中结束运行挂载命令就会卸载，因此需要写一个脚本，开机时运行脚本来挂载。</p><p>首先在终端中执行以下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/init.d/rcloned</span><br></pre></td></tr></table></figure><p>然后在 vi 中粘贴以下代码（按键盘上的INS键输入，按esc再输入<code>:wq</code> 回车即可退出 vi）</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">### BEGIN INIT INFO</span></span><br><span class="line"><span class="comment"># Provides:          rclone</span></span><br><span class="line"><span class="comment"># Required-Start:    $all</span></span><br><span class="line"><span class="comment"># Required-Stop:     $all</span></span><br><span class="line"><span class="comment"># Default-Start:     2 3 4 5</span></span><br><span class="line"><span class="comment"># Default-Stop:      0 1 6</span></span><br><span class="line"><span class="comment"># Short-Description: Start rclone at boot time</span></span><br><span class="line"><span class="comment"># Description:       Enable rclone by daemon.</span></span><br><span class="line"><span class="comment">### END INIT INFO</span></span><br><span class="line">PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin</span><br><span class="line"></span><br><span class="line"><span class="comment"># 以下部分需要修改：</span></span><br><span class="line">REMOTE=<span class="string">&#x27;&#x27;</span></span><br><span class="line">LOCAL=<span class="string">&#x27;&#x27;</span></span><br><span class="line">CONFIG=<span class="string">&#x27;/root/.config/rclone/rclone.conf&#x27;</span></span><br><span class="line">DEMO=<span class="string">&#x27;rclone&#x27;</span></span><br><span class="line"> </span><br><span class="line">[ -n <span class="string">&quot;<span class="variable">$REMOTE</span>&quot;</span> ] || <span class="built_in">exit</span> 1;</span><br><span class="line">[ -x <span class="string">&quot;<span class="subst">$(which fusermount)</span>&quot;</span> ] || <span class="built_in">exit</span> 1;</span><br><span class="line">[ -x <span class="string">&quot;<span class="subst">$(which $DEMO)</span>&quot;</span> ] || <span class="built_in">exit</span> 1;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;<span class="variable">$1</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">start)</span><br><span class="line">  ps -ef |grep -v grep |grep -q <span class="string">&quot;<span class="variable">$REMOTE</span>&quot;</span></span><br><span class="line">  [ $? -eq <span class="string">&#x27;0&#x27;</span> ] &amp;&amp; &#123;</span><br><span class="line">    DEMOPID=<span class="string">&quot;<span class="subst">$(ps -C $DEMO -o pid= |head -n1 |grep -o &#x27;[0-9]\&#123;1,\&#125;&#x27;)</span>&quot;</span></span><br><span class="line">    [ -n <span class="string">&quot;<span class="variable">$DEMOPID</span>&quot;</span> ] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$DEMO</span> already in running.[<span class="variable">$DEMOPID</span>]&quot;</span>;</span><br><span class="line">    <span class="built_in">exit</span> 1;</span><br><span class="line">  &#125;</span><br><span class="line">  fusermount -zuq <span class="variable">$LOCAL</span> &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">  <span class="built_in">mkdir</span> -p <span class="variable">$LOCAL</span></span><br><span class="line">  rclone mount <span class="variable">$REMOTE</span> <span class="variable">$LOCAL</span> --config <span class="variable">$CONFIG</span> --copy-links --no-gzip-encoding --no-check-certificate --allow-other --allow-non-empty --<span class="built_in">umask</span> 000 &gt;/dev/null 2&gt;&amp;1 &amp;</span><br><span class="line">  <span class="built_in">sleep</span> 3;</span><br><span class="line">  DEMOPID=<span class="string">&quot;<span class="subst">$(ps -C $DEMO -o pid=|head -n1 |grep -o &#x27;[0-9]\&#123;1,\&#125;&#x27;)</span>&quot;</span></span><br><span class="line">  [ -n <span class="string">&quot;<span class="variable">$DEMOPID</span>&quot;</span> ] &amp;&amp; &#123;</span><br><span class="line">    <span class="built_in">echo</span> -ne <span class="string">&quot;<span class="variable">$DEMO</span> start running.[<span class="variable">$DEMOPID</span>]\n<span class="variable">$REMOTE</span> --&gt; <span class="variable">$LOCAL</span>\n\n&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&#x27;ok&#x27;</span> &gt;/root/ok</span><br><span class="line">    <span class="built_in">exit</span> 0;</span><br><span class="line">  &#125; || &#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$DEMO</span> start fail! &quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 1;</span><br><span class="line">  &#125;</span><br><span class="line">  ;;</span><br><span class="line">stop)</span><br><span class="line">  DEMOPID=<span class="string">&quot;<span class="subst">$(ps -C $DEMO -o pid= |head -n1 |grep -o &#x27;[0-9]\&#123;1,\&#125;&#x27;)</span>&quot;</span></span><br><span class="line">  [ -z <span class="string">&quot;<span class="variable">$DEMOPID</span>&quot;</span> ] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$DEMO</span> not running.&quot;</span></span><br><span class="line">  [ -n <span class="string">&quot;<span class="variable">$DEMOPID</span>&quot;</span> ] &amp;&amp; <span class="built_in">kill</span> -9 <span class="variable">$DEMOPID</span> &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">  [ -n <span class="string">&quot;<span class="variable">$DEMOPID</span>&quot;</span> ] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$DEMO</span> is stopped.[<span class="variable">$DEMOPID</span>]&quot;</span></span><br><span class="line">  fusermount -zuq <span class="variable">$LOCAL</span> &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">  ;;</span><br><span class="line">init)</span><br><span class="line">  fusermount -zuq <span class="variable">$LOCAL</span></span><br><span class="line">  <span class="built_in">rm</span> -rf <span class="variable">$LOCAL</span>;</span><br><span class="line">  <span class="built_in">mkdir</span> -p <span class="variable">$LOCAL</span>;</span><br><span class="line">  <span class="built_in">chmod</span> a+x <span class="variable">$0</span>;</span><br><span class="line">  update-rc.d -f $(<span class="built_in">basename</span> <span class="variable">$0</span>) remove;</span><br><span class="line">  update-rc.d -f $(<span class="built_in">basename</span> <span class="variable">$0</span>) defaults;</span><br><span class="line">  rclone config;</span><br><span class="line">  ;;</span><br><span class="line"><span class="keyword">esac</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">exit</span> 0</span><br></pre></td></tr></table></figure><p>这段代码也需要根据实际情况修改（需要修改的位置已经在代码中标出）：</p><ul><li><p>REMOTE 处在引号内填第6步的 &lt;DriveName&gt;:&lt;Folder&gt;&lt;空格&gt;，也就是配置Rclone的时候设置的name加上冒号和<code>/</code>和空格</p></li><li><p>LOCAL 处在引号内填第6步的 &lt;LocalFolder&gt;</p></li></ul></li></ol><img src="/Chainedbox-OpenWrt/Chainedbox-OpenWrt_2.png" class="" title="图片"><ol start="8"><li><p>在系统→本地启动脚本最下面添加以下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sheep 10s</span><br><span class="line">bash /etc/init.d/rcloned start</span><br></pre></td></tr></table></figure><p>保存后重启我家云，看看挂载点是否正常</p></li></ol><h3 id="本地影音服务器"><a href="#本地影音服务器" class="headerlink" title="本地影音服务器"></a>本地影音服务器</h3><p>在 iStore 中安装 Emby，Jellyfin，或是 Plex 即可。配置它们的方法以前的帖子里有说，这里不再赘述。</p><h3 id="nas-tools自动管理影视库"><a href="#nas-tools自动管理影视库" class="headerlink" title="nas-tools自动管理影视库"></a>nas-tools自动管理影视库</h3><blockquote><p>就在我写本文时传来噩耗，nas-tools的作者因为testv的一个视频被迫下架了。难怪之前活的好好的，我直到它下架才知道有这么一个神器，感觉以前手动整理影视库的我真傻啊……</p></blockquote><p>关于 nas-tools 我还没了解太多，只知道它功能强大，可以在 Aria2 下载完成后，按照 emby &#x2F; Jellyfin 或是 Plex 识别媒体库的格式重命名影视文件，并放到对应的目录，还能削刮影视的封面、nfo、演员表等。用户仅需设置一次nas-tools，未来只管向Aria2推送下载链接，然后只需要等待 emby &#x2F; Jellyfin 或是 Plex 识别并生成海报墙。</p><p>此博客发布时 iStore 中仍可安装 nas-tools，应该是 iStore 有 nas-tools 的Docker镜像</p><p>如果你有使用 emby &#x2F; Jellyfin 或是 Plex，非常推荐使用 nas-tools，请自行搜索 nas-tools 的使用教程</p><br/><hr><h2 id="作为旁路由-软路由"><a href="#作为旁路由-软路由" class="headerlink" title="作为旁路由&#x2F;软路由"></a>作为旁路由&#x2F;软路由</h2><p>作为旁路由只需按照旁路由去设置即可；作为软路由则需要放弃内部的SATA硬盘位，用USB3.0转接RJ45，再设置wan口和lan口的配置即可，具体方法不再赘述。</p><br/><hr><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>这几天连续折腾了几天NAS，给我折磨坏了。事实证明，我家云的性能跑Docker里的阿里云盘WebDav，再跑个Jellyfin就已经卡的不成样子了（当然arm64平台的Jellyfin性能确实不如emby），但是我如果后台再跑个nas-tools和Aria2，它还能正常播放那才是神奇……所以，我感觉我要么回归硬盘挂路由上有Samba看电影，要么就得买个性能更强的，要么就现在凑合用，别想看海报墙了……</p>]]></content>
      
      
      <categories>
          
          <category> NAS/路由 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NAS </tag>
            
            <tag> 路由 </tag>
            
            <tag> 折腾 </tag>
            
            <tag> 捡垃圾 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我家云安装OMV：单盘NAS</title>
      <link href="/Chainedbox-OMV/"/>
      <url>/Chainedbox-OMV/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>其实我手上这台我家云入手有几个月了，之前一直没有发博客是因为没空。现在终于有时间了，就想好好聊聊这个有意思的小机器。</p><p>在卖掉之前博客中提到的星际蜗牛机箱的4盘位NAS后，我也尝试了华硕路由接移动硬盘的入门级玩法，体验完几乎是两级的NAS后，我对自己的需求有了更加清晰的认识：我不需要那么多的盘位，因为我暂时用不到那么大的容量（也买不起那么多硬盘），而且4盘位机箱体积太大；x86处理器运行Windows系统在某些方面确实要更加舒服一些，但是没有ARM处理器运行Linux省电，而电费是一大笔未来的隐藏开销；2.5寸硬盘受限于体积，最大容量对比3.5寸硬盘还是相差太多，而且价格也相差不少。</p><p>综上，我发现自己需要一个体积不大，至少一个3.5寸盘位，ARM平台，至少有1个千兆网口的机器。</p><p>经过我的一番寻找，最终锁定了猫盘PLUS和我家云&#x2F;粒子云这两款产品，而它们的价格差距不小，所以最终我选择了我家云&#x2F;粒子云。</p><br/><hr><h2 id="硬件配置"><a href="#硬件配置" class="headerlink" title="硬件配置"></a>硬件配置</h2><blockquote><p>我家云的CPU是知名软路由友善R2S的同款，这也决定了二者间众多的相似点。</p></blockquote><ul><li><p>CPU：瑞芯微 RK3288</p><ul><li>4x ARM Cortex-A17 @ 1.5Ghz <em>(被限制了主频，实际最高1.3Ghz)</em></li><li>28nm 制程，GPU为Mali-T764 <em>(但无法驱动)</em></li></ul></li><li><p>内存：1GB DDR3 RAM</p></li><li><p>闪存：8GB EMMC ROM</p></li><li><p>接口：1x SATA3 (3.5寸硬盘槽位)，1x USB 3.0，1x USB 2.0，1x 1000M RJ45</p><ul><li>受限于RK3288的带宽，SATA3 和 USB 3.0 无法同时工作</li></ul></li></ul><br/><hr><h2 id="刷机方法"><a href="#刷机方法" class="headerlink" title="刷机方法"></a>刷机方法</h2><ol><li><p>首先下载驱动(DriverAssitant_v4.8.zip) 和刷机工具(AndroidTool_Release.7z)：<a href="https://cloud.189.cn/t/reQb22yiEVza">https://cloud.189.cn/t/reQb22yiEVza</a>  | 访问码：3f9z</p></li><li><p>下载线刷固件，大家可以从下面几个帖子中获取刷机包（排名不分先后）:</p><p>Armbian+openmedia+entware导航 5.4.2内核固件 | <a href="https://pan.baidu.com/s/1mCCfIuz7wYTmyJOfre8Y-Q?pwd=x9pc">固件发布地址</a></p><p>[固件]我家云&#x2F;粒子云【影音娱乐服务】-硬盘不掉可休眠-灯亮风扇转-可关机-smb高速读写 | <a href="http://av98.byethost10.com/?thread-785.htm&i=2">固件发布地址1</a> <a href="https://www.right.com.cn/forum/thread-1042032-1-1.html">固件发布地址2</a></p><p>Armbian_wojiayun_powersee_2021-03-10_Debian（我忘记来源了）| <a href="https://cloud.189.cn/t/3Y7zYrNFjyA3">固件下载地址</a>（访问码：fjr7）</p></li><li><p>安装驱动：解压DriverAssitant_v4.8.zip，运行里面的 DriverInstall.exe，点击“驱动安装”按钮安装驱动，如果想卸载驱动，点击“驱动卸载”按钮</p></li><li><p>刷机前准备：解压 AndroidTool_Release.7z 到 AndroidTool_Release 目录，将 rk3328_loader.bin 复制到 AndroidTool_Release\Image\ 路径中，解压固件压缩包，运行 AndroidTool.exe 瑞芯微开发工具，点击第二行路径右边的白色格子（如下图所示），在弹出的菜单中选中解压的固件.img文件</p></li></ol><img src="/Chainedbox-OMV/Chainedbox-OMV_1.png" class="" title="图片"><ol start="5"><li><p>使我家云进入 RockUSB 模式</p><p>保持我家云处于关机断电状态，去除所有线缆</p><p>用USB双公头线连接我家云 USB2.0 端口和电脑背板的USB端口</p><p>使用卡针或回形针插入我家云的RESET孔并保持按下状态</p><p>插入我家云的电源给我家云加点</p><p>等待3秒左右，待瑞芯微开发工具中显示的 “没有发现设备” 变为 “发现一个LOADER设备” 时可以松开RESET</p></li><li><p>使我家云进入 Maskrom 模式</p><p>瑞芯微开发工具 切换页面到 高级功能 页面，点击“进入Maskrom”</p><p>此时瑞芯微开发工具中显示的 “发现一个LOADER设备” 变为 “发现一个MASKROM设备” </p></li><li><p>开始刷机</p><p>瑞芯微开发工具 切换页面回 下载镜像 页面，点击“执行”按钮开始烧录，烧录时不要断电！</p><p>烧录完成后，瑞芯微开发工具右侧能看到成功提示，此时需要手动断电，拔出USB线并连接网线后首次开机</p></li></ol><br/><hr><h2 id="初次使用"><a href="#初次使用" class="headerlink" title="初次使用"></a>初次使用</h2><ol><li><p>在浏览器中访问 <a href="http://omv/">http://omv/</a> 或者我家云的<code>IP:88</code>即可进入后台界面，输入获取刷机包网页的教程中所给的账号密码即可登录。</p></li><li><p>登录以后，点击磁盘选项，看看你的磁盘正不正常：</p> <img src="/Chainedbox-OMV/Chainedbox-OMV_2.jpg" class="" title="图片"></li><li><p>如果这里没有读取到磁盘，直接重启一下omv：</p> <img src="/Chainedbox-OMV/Chainedbox-OMV_3.jpg" class="" title="图片"></li><li><p>重启以后，就可以看到硬盘了。如果你的硬盘之前没有格式化成ext4格式，建议点下擦除，我这里仅演示，所以没点：</p> <img src="/Chainedbox-OMV/Chainedbox-OMV_4.jpg" class="" title="图片"></li><li><p>点击系统文件，选择sda1这个，点挂载。挂载以后，就可以看到硬盘的容量了。</p> <img src="/Chainedbox-OMV/Chainedbox-OMV_5.jpg" class="" title="图片"></li><li><p>点下面的共享文件夹，添加，选择设备，输入文件夹名字，比如wjy（这个路径并不是真实的硬盘路径，只是相对路径&#x2F;挂载路径），然后保存：</p> <img src="/Chainedbox-OMV/Chainedbox-OMV_6.jpg" class="" title="图片"></li><li><p>点击下面的SMB，将SMB打开，应用</p> <img src="/Chainedbox-OMV/Chainedbox-OMV_7.jpg" class="" title="图片"></li><li><p>然后点击用户，添加一个用户，比如用户名aa,密码aa：</p> <img src="/Chainedbox-OMV/Chainedbox-OMV_8.jpg" class="" title="图片"></li><li><p>刷新一下页面，看到smb服务开启，就代表正常了</p></li><li><p>点击这个文件夹，可以设置一下权限，让这个账户能够读写：</p><img src="/Chainedbox-OMV/Chainedbox-OMV_9.jpg" class="" title="图片"></li><li><p>在电脑文件管理器输入：<code>\\&lt;我家云IP&gt;</code> 输入刚刚建立的账户aa密码aa，即可找到刚刚建立的共享文件夹，右键点击它，选择映射到网络驱动器，这样共享文件夹就会显示在电脑的本地磁盘后面，方便访问</p></li></ol><br/><hr><h2 id="Q-A"><a href="#Q-A" class="headerlink" title="Q&amp;A"></a>Q&amp;A</h2><ol><li><p>有的固件风扇噪音太大怎么办？</p><p>-这个帖子分享了一个风扇自动调速小工具：<a href="https://www.right.com.cn/forum/thread-1269242-1-1.html">https://www.right.com.cn/forum/thread-1269242-1-1.html</a></p></li><li><p>我家云的功耗如何？</p><p>-经网友测试，满载功耗在10W左右，待机功耗更低</p></li><li><p>刷过固件后再刷另一个固件，访问我家云主页，主页还是老固件的怎么办？</p><p>-清除了浏览器的缓存，再次打开我家云的web管理界面就正常了</p></li><li><p>荔枝相册、可道云、易有云、威力同步等将8G EMMC沾满，没有使用硬盘怎么办？</p><p>-它们默认都是储存在主板自带的8G硬盘里的，而且软件里面没办法设置储存路径，必须通过转移操作，将 wwwroot 目录放到2T机械硬盘上，这些软件才会默认使用挂载的硬盘，具体方法请观看@破戒小僧的视频 <a class="btn-anzhiyu pink" href="https://www.bilibili.com/video/BV1ve411s7kz/"   title="Bilibili"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>Bilibili</span></a></p></li><li><p>用一段时间后掉盘怎么办？</p><p>-这是我家云的硬件设计问题，原因可能有很多：USB转SATA芯片过热，硬盘休眠后导致电源电流不足。这些问题不一定会在每一台我家云上出现（粒子云基本无一幸免），但是一旦遇到就很麻烦，目前的OMV系统基本都已经在软件方面尽可能地去防掉盘，但是USB转SATA芯片的硬件问题，不是简单改散热就能解决，需要飞线连接另一块USB转SATA转接板。具体可以参考下面的几个帖子：</p><p><a href="https://www.right.com.cn/FORUM/thread-4069351-1-1.html">我家云不掉盘方法，稳定使用90天，不用硬改</a></p><p><a href="https://www.right.com.cn/forum/thread-634740-1-1.html">粒子云&#x2F;我家云OMV基本稳定运行不掉盘的刷机方法</a></p></li><li><p>1GB RAM 和 8GB ROM不够用怎么办？</p><p>-我家云主板的背面是留有另外的2个内存焊点的，经测试，直接焊上内存颗粒即可使用；闪存颗粒也是可以替换的，目前最大可以扩容至64GB。如有需要，可以在淘宝&#x2F;闲鱼上搜搜</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> NAS/路由 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NAS </tag>
            
            <tag> 折腾 </tag>
            
            <tag> 捡垃圾 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NAS/路由：使用Aria2下载器</title>
      <link href="/NAS-Aria2-Downloader/"/>
      <url>/NAS-Aria2-Downloader/</url>
      
        <content type="html"><![CDATA[<h2 id="NAS或路由安装Aria2"><a href="#NAS或路由安装Aria2" class="headerlink" title="NAS或路由安装Aria2"></a>NAS或路由安装Aria2</h2><ul><li><p>华硕路由需要刷官改固件或梅林固件，然后在 软件中心 - 全部软件 中安装 aria2 （梅林系统路由同理）</p></li><li><p>OpenWrt系统路由需要安装 <code>luci-app-aria2</code>，可以用以下命令安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">opkg update</span><br><span class="line">opkg install luci-app-aria2</span><br></pre></td></tr></table></figure></li><li><p>其他系统请自行搜索安装方法</p></li></ul><br/><hr><h2 id="运行Aria2"><a href="#运行Aria2" class="headerlink" title="运行Aria2"></a>运行Aria2</h2><ol><li><p>勾选Aria2面板中的启动</p></li><li><p>设置下载目录，必须为NAS或路由真实存在的目录</p></li><li><p>RPC选项中，RPC认证方式为令牌(token)，令牌可以随机生成</p></li><li><p>启动 AriaNg，在 AiraNg设置 - RPC - Aria2 RPC秘钥 中填写上一步中的令牌</p></li><li><p>重新加载AriaNg，Aria2 状态 显示已连接即为成功</p></li></ol><br/><hr><h2 id="浏览器安装插件"><a href="#浏览器安装插件" class="headerlink" title="浏览器安装插件"></a>浏览器安装插件</h2><ol><li><p>浏览器安装 Tampermonkey 插件</p></li><li><p>安装 网盘直链下载助手 脚本 <a class="btn-anzhiyu " href="https://www.youxiaohou.com/install.html"   title="安装方法"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>安装方法</span></a></p></li></ol><br/><hr><h2 id="本地网络下推送RPC到Aria2下载"><a href="#本地网络下推送RPC到Aria2下载" class="headerlink" title="本地网络下推送RPC到Aria2下载"></a>本地网络下推送RPC到Aria2下载</h2><ol><li><p>打开 网盘直链下载助手 支持的网盘，这里以阿里云盘为例</p></li><li><p>勾选要下载的文件（不能是文件夹）</p></li><li><p>选择上方的 下载助手 - RPC下载</p></li><li><p>第一次使用需要 设置RPC参数：</p><ul><li><p>RPC主机为NAS或路由的IP地址</p></li><li><p>RPC秘钥为之前设置的RPC秘钥</p></li><li><p>保存路径为之前设置的下载目录</p></li><li><p>终端类型选择Linux Shell （OMV、OpenWrt和梅林都是）</p></li></ul></li><li><p>点击 发送全部链接 即可</p></li></ol><br/><hr><h2 id="远程推送RPC到Aria2下载"><a href="#远程推送RPC到Aria2下载" class="headerlink" title="远程推送RPC到Aria2下载"></a>远程推送RPC到Aria2下载</h2><h3 id="使用ddnsto服务"><a href="#使用ddnsto服务" class="headerlink" title="使用ddnsto服务"></a>使用ddnsto服务</h3><ol><li><p>NAS或路由安装ddnsto</p><ul><li><p>华硕路由需要刷官改固件或梅林固件，然后在 软件中心 - 全部软件 中安装 ddnsto远程控制（梅林系统路由同理）</p></li><li><p>OpenWrt系统路由需要安装 <code>luci-app-aria2</code>，可以用以下命令安装：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">opkg update</span><br><span class="line">opkg install luci-app-ddnsto</span><br></pre></td></tr></table></figure></li><li><p>其他系统请自行搜索安装方法</p></li></ul></li><li><p>在<a href="https://www.ddnsto.com/">ddnsto官网</a>注册账户</p></li><li><p>进入<a href="https://www.ddnsto.com/app/#/devices">ddnsto控制台</a>，点击右上角令牌旁的复制</p></li><li><p>回到NAS或路由的ddnsto，粘贴到ddnsto Token，开启ddnsto开关后保存</p></li><li><p>等一会儿就能在<a href="https://www.ddnsto.com/app/#/devices">ddnsto控制台</a>看到添加的设备</p></li><li><p>购买一个免费套餐即可，7天后可以再买免费套餐</p></li><li><p>添加域名映射，主域名随意填，目标主机地址填 http:&#x2F;&#x2F;&lt;NAS或路由在本地网络的IP&gt;:6800</p><p>例如华硕路由安装Aria2时，填写<code>http://192.168.50.1:6800</code></p></li><li><p>等一分钟域名生效，点击显示http，记住主域名下的http链接</p></li></ol><h3 id="远程推送RPC"><a href="#远程推送RPC" class="headerlink" title="远程推送RPC"></a>远程推送RPC</h3><p>其他操作与本地网络下相同，仅需更改RPC参数：</p><ol><li>RPC主机填写上一步中的http链接，不带最后的冒号和端口号</li><li>RPC端口填写上一步中的http链接的端口号</li></ol><p>其他保存不变即可，这样就能在本地网络之外，远程推送RPC下载到NAS或路由的Aria2</p>]]></content>
      
      
      <categories>
          
          <category> 软件工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NAS </tag>
            
            <tag> 路由 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>折腾搭载高通410的随身WiFi</title>
      <link href="/Pocket-WiFi-with-Snapdragon-410/"/>
      <url>/Pocket-WiFi-with-Snapdragon-410/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>前几天意外在B站看到一个视频，十块钱买的随身WiFi棒子，使用的SoC居然是和红米2 &#x2F; 初代红米Note同款的高通骁龙410（MSM8916），且运行着Android 4.4系统，并且已经被大神破解，可以刷机。于是我直接买了一个来玩玩。</p><br/><hr><br/><h2 id="硬件配置"><a href="#硬件配置" class="headerlink" title="硬件配置"></a>硬件配置</h2><ul><li><p>型号：椰贝标准版</p><ul><li>外壳背部印字：UT6-21</li><li>主板丝印：UFI003_MB_V02</li><li>天线印字：UFI003_CN_CT(ZC)_V1.0</li></ul></li><li><p>SoC：高通骁龙410（MSM8916）</p><ul><li>4x ARM Cortex-A53 @ 1GHz<em>（为OpenWrt &#x2F; Debian下频率；Android下默认400MHz，最高可达533MHz）</em></li></ul></li><li><p>内存：512MB LPDDR2 RAM</p></li><li><p>闪存：4GB EMMC ROM</p></li><li><p>接口：1x USB 2.0 Male，1x SIM，1x Reset Button</p></li><li><p>天线：4G LTE，2.4G WiFi，Bluetooth</p><ul><li>WiFi和热点不可同时启用，即无法作为WiFi中继</li></ul></li></ul><br/><h3 id="关于产品型号"><a href="#关于产品型号" class="headerlink" title="关于产品型号"></a>关于产品型号</h3><p>由于现在市场极其混乱，数十种不同型号和配置的随身WiFi混迹其中，且商家不会告诉你使用的处理器方案。经过广大网友的尝试，基本可以确定两个品牌最便宜的款式一定是高通骁龙410方案（且都是芷荷代工）：椰贝和先机。它们的区别是</p><ul><li>椰贝基本都是UFI003板子，主板有一面没有信号屏蔽罩，有SIM卡槽，4GB EMMC ROM</li><li>先机目前是UFI001和UFI003混发，主板信号屏蔽罩完整<ul><li>UFI001型有SIM卡槽，<strong>8GB</strong> EMMC ROM</li><li>UFI003型<strong>没有</strong>SIM卡槽，4GB EMMC ROM</li></ul></li></ul><p><strong>推荐下载*<a href="https://www.coolapk.com/">酷安App</a><em>，里面</em>随身wifi*话题中不时会有开车，且几乎包含了本文几乎所有的知识来源</strong></p><br/><hr><br/><h2 id="刷机方法"><a href="#刷机方法" class="headerlink" title="刷机方法"></a>刷机方法</h2><blockquote><p>下载刷机工具前，确保关闭杀毒软件，否则可能将刷机工具中的部分文件当作病毒删除！</p></blockquote><h3 id="安装ADB工具"><a href="#安装ADB工具" class="headerlink" title="安装ADB工具"></a>安装ADB工具</h3><ol><li><p>从Google.cn下载SDK Platform-Tools：<a href="https://developer.android.google.cn/studio/releases/platform-tools?hl=zh-cn#downloads">SDK Platform Tools 版本说明  | Android Developers</a></p></li><li><p>解压，并将 platform-tools 文件夹放置于 C:\Users\<em>你的用户名</em>\AppData\Local\Android\Sdk\ 文件夹下</p></li><li><p>在 控制面板 -&gt; 系统属性 -&gt; 环境变量中，新建系统变量，名称为 <code>Android</code> ，值为 <code>C:\Users\你的用户名\AppData\Local\Android\Sdk\platform-tools</code><img src="/Pocket-WiFi-with-Snapdragon-410/Pocket-WiFi-with-Snapdragon-410_1.png" class="" title="图片"></p></li><li><p>在用户变量 -&gt; Path 中，新建 <code>%Android%</code></p></li><li><p>在 cmd 中输入 <code>adb</code> 回车，能看到 Android Debug Bridge version 即成功</p></li></ol><br/><h3 id="高通9008模式下备份和恢复"><a href="#高通9008模式下备份和恢复" class="headerlink" title="高通9008模式下备份和恢复"></a>高通9008模式下备份和恢复</h3><h4 id="安装高通9008驱动"><a href="#安装高通9008驱动" class="headerlink" title="安装高通9008驱动"></a>安装高通9008驱动</h4><ol><li>下载<a href="https://cloud.189.cn/t/QRfqaiiaIZ7f">9008免签名驱动.zip</a> (访问码:8ptl)</li><li>解压并安装</li></ol><br/><h4 id="以9008模式连接电脑"><a href="#以9008模式连接电脑" class="headerlink" title="以9008模式连接电脑"></a>以9008模式连接电脑</h4><p>​方法1：如图所示，按住主板上的恢复按钮的同时插入电脑，插入后松开按钮 <img src="/Pocket-WiFi-with-Snapdragon-410/Pocket-WiFi-with-Snapdragon-410_2.jpg" class="" title="图片"></p><p>​方法2：若没有上图中的按钮，但插入电脑默认开启ADB设备的，可以通过ADB进入9008模式，cmd命令如下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看adb设备，List of devices attached下方有代码证明有adb设备插入</span></span><br><span class="line">adb devices</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">重启设备到9008模式</span></span><br><span class="line">adb reboot edl</span><br></pre></td></tr></table></figure><p>​方法3：既没有恢复按钮，又没有默认开启ADB设备的，可尝试短接按钮处引脚的时候插入电脑</p><ul><li><p>连接后，设备管理器的端口中将出现9008设备：</p><img src="/Pocket-WiFi-with-Snapdragon-410/Pocket-WiFi-with-Snapdragon-410_3.jpg" class="" title="图片"></li></ul><br/><h4 id="使用miko工具全盘备份"><a href="#使用miko工具全盘备份" class="headerlink" title="使用miko工具全盘备份"></a>使用miko工具全盘备份</h4><blockquote><p>建议随身WiFi拿到手后首先全盘备份，如果后续刷成砖，可以靠出厂固件救砖</p></blockquote><ol><li><p>下载<a href="https://cloud.189.cn/t/nem6f2rAnq2q">miko_service_tool_pro.zip</a> (访问码:fd4x)</p></li><li><p>解压，并将文件夹其放置于 C:\Program Files (x86) 目录下</p></li><li><p>打开 Loader.exe</p></li><li><p>选择 Read -&gt; Partition Backup&#x2F;Erase</p></li><li><p>双击 “Double Click To Open Save Folder” 并选择保存位置</p></li><li><p>点击 “Load Partition Structure” 待右侧读取完分区信息后，点击 “Read Full Image”，并设置保存的备份bin文件名称</p></li></ol><p>​<img src="/Pocket-WiFi-with-Snapdragon-410/Pocket-WiFi-with-Snapdragon-410_4.jpg" class="" title="图片"></p><br/><h4 id="使用miko工具全盘恢复"><a href="#使用miko工具全盘恢复" class="headerlink" title="使用miko工具全盘恢复"></a>使用miko工具全盘恢复</h4><ol><li>打开 C:\Program Files (x86)\miko_service_tool_pro\miko_service_tool_pro 目录下的 Loader.exe</li><li>选择 Flash -&gt; emmc block0 flasher</li><li>双击 “Double Click To Open EMMC DATA” 并选择之前备份的bin文件</li><li>点击 FLASH! 并开始刷机，进度到100%后，建议重新插拔一次随身WiFi</li></ol><img src="/Pocket-WiFi-with-Snapdragon-410/Pocket-WiFi-with-Snapdragon-410_5.png" class="" title="图片"><br/><h4 id="使用Qualcomm-Premium-Tool在9008模式下手动刷机"><a href="#使用Qualcomm-Premium-Tool在9008模式下手动刷机" class="headerlink" title="使用Qualcomm Premium Tool在9008模式下手动刷机"></a>使用Qualcomm Premium Tool在9008模式下手动刷机</h4><ol><li><p>下载<a href="https://cloud.189.cn/t/aaYjErQjeuEj">Qualcomm Premium Tool V2.4 cracked+WORKING KEYGEN.zip</a> (访问码:8dui)</p></li><li><p>使用注册机破解：</p><p>a. 打开 CMD_KEYGEN_CRACKED_by_FACEBOOK.exe</p><p>b. 点击 Generate Key，生成key文件，随意起名</p><p>c. 打开 Qualcomm Premium Tool.exe</p><p>d. 点击help -&gt; activate，选择刚刚保存的key文件，即可完成注册机破解</p></li><li><p>进入9008模式</p></li><li><p>选择 Qualcomm -&gt; partition 点击Scan扫描设备</p><img src="/Pocket-WiFi-with-Snapdragon-410/Pocket-WiFi-with-Snapdragon-410_6.png" class="" title="图片"></li><li><p>选择write，再点击对应分区，然后Do Job，选择刷机包文件夹中对应的分区的img文件即可。重复此步骤，直到刷完刷机包文件夹中所有的img文件。</p><img src="/Pocket-WiFi-with-Snapdragon-410/Pocket-WiFi-with-Snapdragon-410_7.png" class="" title="图片"></li></ol><br/><br/><h3 id="进入Fastboot模式"><a href="#进入Fastboot模式" class="headerlink" title="进入Fastboot模式"></a>进入Fastboot模式</h3><blockquote><p>除9008模式下的备份与恢复外，其余所有系统的刷机都需要进入Fastboot模式（OpenWrt和Debian也自带并默认开启ADB）。使用ADB命令查找不到ADB设备的，请见本文的“疑难杂症”部分</p></blockquote><p>在 cmd 中输入以下命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看adb设备，List of devices attached下方有代码证明有adb设备插入</span></span><br><span class="line">adb devices</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">重启设备到Fastboot模式</span></span><br><span class="line">adb reboot bootloader</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看fastboot设备</span></span><br><span class="line">fastboot devices</span><br></pre></td></tr></table></figure><br/><br/><h3 id="改版Android-4-4"><a href="#改版Android-4-4" class="headerlink" title="改版Android 4.4"></a>改版Android 4.4</h3><ol><li>重启到 Fastboot 模式</li><li>下载并解压 <a href="https://cloud.189.cn/t/mI7veyNBveYf">MiFlash_x64.zip</a> (访问码:cxb7)</li><li>下载并解压 <a href="https://cloud.189.cn/t/MnYFZn7nYJjm">可一键刷入UFI003_root自动读卡.zip</a> (访问码:3vry)</li><li>使用MiFlash_x64.exe一键刷机即可</li><li>刷机成功后，下载并解压<a href="https://cloud.189.cn/t/MjYJRvb6j6Z3">ARDC.zip</a> (访问码:cd8x)，用于投屏到电脑操作Android系统</li></ol><p>该版本默认开机开启无线ADB和usb调试，锁定B1频段，带有magisk。WiFi ssid：4G-UFI-随机名，WiFi密码：<code>1234567890</code>。后台地址：<code>192.168.100.1</code>，后台密码：<code>admin</code>。</p><br/><h3 id="OpenWrt"><a href="#OpenWrt" class="headerlink" title="OpenWrt"></a>OpenWrt</h3><ol><li><p>下载并解压 <a href="https://cloud.189.cn/t/VJJrymBR7nIv">UFI003_OpenWrt.zip</a> (访问码:1bvr)</p></li><li><p>打开刷机包的文件夹，双击flash.bat，按任意键开始刷机。中途会多次自动暂停，观察设备管理器读取到 fastboot 设备后再按任意键继续刷机。</p></li><li><p>刷入时出现卡住的情况，可以关闭窗口，再重新插入随身 Wi-Fi，再重新打开 flash.bat </p></li><li><p>WiFi ssid：HandsomeMode_随机名，没有密码。后台地址为 <code>192.168.1.1</code>，用户名root，没有密码。</p></li><li><p>进入后台请查看 网络 -&gt; 接口 -&gt; MODEM 处是否有IP地址，没有说明没有读到SIM卡，尝试重启MODEM接口、重启随身WiFi或重新刷机（我发现在刷机时插的哪个运营商的卡，就只能读到该运营商的卡，读不到别的运营商的，可能是普遍bug，我在寻找解决方法）</p></li></ol><br/><h3 id="Debian"><a href="#Debian" class="headerlink" title="Debian"></a>Debian</h3><ol><li><p>下载并解压 <a href="https://cloud.189.cn/t/26ryuauemYZj">UFI003 Debian.zip</a> (访问码:se2d)</p></li><li><p>打开刷机包的文件夹，双击flash.bat，按任意键开始刷机。中途会多次自动暂停，观察设备管理器读取到 fastboot 设备后再按任意键继续刷机。</p></li><li><p>刷入时出现卡住的情况，可以关闭窗口，再重新插入随身 Wi-Fi，再重新打开 flash.bat </p></li><li><p>检查设备管理器中是否已经安装RNDIS驱动，若没有请见本文的疑难杂症部分</p></li><li><p>打开 cmd，输入 <code>ssh user@192.168.68.1</code> 通过ssh连接设备</p></li><li><p>输入密码：<code>1</code> （不显示，输完点击回车）</p></li><li><p>输入 <code>sudo nmtui</code> 可打开TUI窗口</p></li></ol><p>后续详细操作请见<a href="https://www.kancloud.cn/handsomehacker/openstick/2637559">OpenStick项目</a></p><br/><hr><br/><h2 id="硬件改造"><a href="#硬件改造" class="headerlink" title="硬件改造"></a>硬件改造</h2><h3 id="改进散热"><a href="#改进散热" class="headerlink" title="改进散热"></a>改进散热</h3><p>我在 酷安App 上收集了别人改造散热的一些照片，基本上就是通过给外壳打孔、贴硅脂片、安装散热片和风扇（从USB口取电）的方法加强散热。同时还可以给SIM处的外壳切掉一部分，方便更换SIM卡。</p><img src="/Pocket-WiFi-with-Snapdragon-410/Pocket-WiFi-with-Snapdragon-410_8.jpg" class="" title="图片"><br/><h3 id="外接扩展"><a href="#外接扩展" class="headerlink" title="外接扩展"></a>外接扩展</h3><p>酷安大佬@Zy143L设计了几套外接扩展的板子，将陆续发布于立创开源硬件平台：<a href="https://oshwhub.com/zy143l/ufi_hub_lite_share">随身WIFI的USB拓展（Lite）</a>，<a href="https://oshwhub.com/Zy143L/esim-sim">SIM卡转接板</a></p><p>这里再放几张图片：</p><ul><li>Lite：4x USB2.0，1x Type-C用于供电</li></ul><img src="/Pocket-WiFi-with-Snapdragon-410/Pocket-WiFi-with-Snapdragon-410_9.jpg" class="" title="图片"><ul><li>Pro：1x TF卡，2x USB 2.0，1x RJ45百兆，1x Type-C用于供电</li></ul><img src="/Pocket-WiFi-with-Snapdragon-410/Pocket-WiFi-with-Snapdragon-410_10.jpg" class="" title="图片"><ul><li>Ultra：1x TF卡，2x RJ45百兆 ，3x USB 2.0，1x Type-C用于供电</li></ul><img src="/Pocket-WiFi-with-Snapdragon-410/Pocket-WiFi-with-Snapdragon-410_11.jpg" class="" title="图片"><br/><hr><br/><h2 id="疑难杂症"><a href="#疑难杂症" class="headerlink" title="疑难杂症"></a>疑难杂症</h2><blockquote><p>若有其他问题，请在酷安App中随身WiFi话题中搜索或发帖询问，或者查看本文的参考资料</p></blockquote><h3 id="找不到ADB设备"><a href="#找不到ADB设备" class="headerlink" title="找不到ADB设备"></a>找不到ADB设备</h3><p>确认ADB环境变量是否配置。确认随身WiFi插入电脑后，设备管理器最上面是否有Android Composite ADB Interface (Windows 7 下为“Android Composite USB Device”)，如果不是，更新设备，如果更新失败，改为USB Composite Device再尝试更新设备。</p><br/><h3 id="Qualcomm或miko工具识别9008失败"><a href="#Qualcomm或miko工具识别9008失败" class="headerlink" title="Qualcomm或miko工具识别9008失败"></a>Qualcomm或miko工具识别9008失败</h3><p>连接电脑时间太长了就会这样，重新插拔随身WiFi进入9008即可。</p><br/><h3 id="Openwrt热点网速比安卓慢"><a href="#Openwrt热点网速比安卓慢" class="headerlink" title="Openwrt热点网速比安卓慢"></a>Openwrt热点网速比安卓慢</h3><p>固件作者handsomehacker说这个bug没有修复，但评论区有酷友表示关闭网桥可以恢复正常网速（我的op热点网速最高10mbps出头，安卓下可以跑二十多），连接WiFi和USB网络共享的网速正常。</p><br/><h3 id="安装RNDIS驱动"><a href="#安装RNDIS驱动" class="headerlink" title="安装RNDIS驱动"></a>安装RNDIS驱动</h3><p>Windows10&#x2F;11：更新驱动 -&gt; 让我从计算机上的可用驱动程序列表中选取 -&gt; 厂商选择“Microsoft” -&gt; 型号选择“基于远程NDIS的Internet共享设备。Windows7或其他疑问详见：<a href="https://www.kancloud.cn/handsomehacker/openstick/2636506">OpenStick项目</a></p><br/><h3 id="Debian无法连接WiFi"><a href="#Debian无法连接WiFi" class="headerlink" title="Debian无法连接WiFi"></a>Debian无法连接WiFi</h3><p>由于这款随身WiFi无法同时连接WiFi和开启热点，因此需要先删除无线热点，重启设备，确认无线热点连接已经移除后，再查看是否搜索到了WiFi，仅可搜索到2.4G WiFi，且信道为1~11（不支持12和13信道）</p><br/><br/><hr><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p>HandsomeYingyan（酷安、CSDN @handsomehacker）：<a href="https://www.kancloud.cn/handsomehacker/openstick/2636505">OpenStick项目</a></p><p>酷安@Zy143L： <a href="https://momoe.ml/">Zy143L的博客</a></p><p>酷安@酷铵水遍：<a href="https://www.123pan.com/s/8y49-oBZ0h">随身WiFi助手</a></p><p>B站@酱紫表：<a href="https://www.bilibili.com/video/BV16a411L7tt">几块钱的随身 Wi-Fi 刷 openwrt 变成随身软路由</a> ｜ <a href="https://qust.me/post/msm8916/">酱紫表的博客</a></p><p>B站@Gray研究日常：<a href="https://www.bilibili.com/video/BV1Ed4y1N799">【免费分享】简单几步,就将网速提升了7倍??4G网速优化教程,随身WiFi,高通系手机通用!!!</a></p><p>B站@哈格瑞夫-罗许：<a href="https://space.bilibili.com/5310993/channel/collectiondetail?sid=599287">《关于我把随身WIFI变成了服务器这件事》系列视频</a></p>]]></content>
      
      
      <categories>
          
          <category> NAS/路由 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 折腾 </tag>
            
            <tag> 捡垃圾 </tag>
            
            <tag> 破解 </tag>
            
            <tag> 开发板 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>华硕路由：也是轻量级NAS</title>
      <link href="/ASUS-Router-Light-NAS/"/>
      <url>/ASUS-Router-Light-NAS/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>之前提到的自己装的NAS，最终还是在使用一年后被我卖掉了。</p><p>主要原因是：我一开始准备玩N合一的，即NAS+软路由跑在一台设备上，所以主板的选择上需要有2个网口或1个网口+1个PCIe接口，加之我认为我会购买多块硬盘，所以我选择了4盘位的机箱，也就使得主板需要有4个SATA接口且不能通过PCIe转接，这两条加在一起就使我放弃了J1900这类低功耗板载CPU的主板，结果在使用中发现，N合一的折腾难度远超我的想象：虚拟化、兼容性、黑群晖…以及硬盘不能使用NTFS格式，这些使得我只能给它装了Windows系统和Emby作为影音服务器使用，但它的耗电量又偏高，因此我觉得仅仅作为影音服务器来说它未免有点性能过头了，遂将其在小黄鱼上出了。但该项目也给我带来了折腾NAS、黑群晖的经验和4T硬盘上整理、刮削好的影片资源。</p><p>但是我终究还是离不开随时用各种设备访问影视库这一操作了，于是便将目光转回ASUS路由器。</p><br/><hr><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="硬件配置"><a href="#硬件配置" class="headerlink" title="硬件配置"></a>硬件配置</h3><ul><li><p>路由器：ASUS RT-AC86U（当年的神机，性能超过次旗舰AC88U ）</p><ul><li>博通BCM4906处理器，28nm，Cortex-A53架构，双核1.8Ghz，64位</li><li>512MB DDR3内存</li><li>256MB 闪存</li><li>3根外置天线，1根内置天线，BCM4365E+BCM4366E双频组合，支持MU-MIMO，满速可达2900M，支持AiMesh</li><li>1个千兆WAN，4个千兆LAN，1个USB3.0，1个USB2.0接口</li></ul></li><li><p>硬盘：ADATA 2T 2.5寸移动硬盘</p><ul><li>换了一根USB3.0线，原装的线存在接触不良的情况</li><li>经测试，硬盘格式为EXT3可以最大化aria2下载速率，格式为NTFS可以最大化上传&#x2F;下载速率（但最大速率也仅为50MB&#x2F;s，只能说够用）</li></ul></li></ul><h3 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a>操作系统</h3><p>首先要说明的一点是，ASUS路由的出厂系统为开源系统 <a href="https://www.asus.com.cn/Content/ASUSWRT/">ASUSWRT</a>，社区有大佬将其改为[梅林（Merlin）固件，且得到了ASUS官方的支持，由此也出现了与梅林功能相当的华硕官改固件，以及内置了同款软件（扩展）中心的OpenWrt固件，它们的稳定性对比：ASUSWRT &gt; 华硕官改固件 &gt; 梅林固件 &gt; OpenWrt</p><p>同时梅林可被安装于硬件配置与ASUS路由近似的路由上，如美国网件的R6300V2。</p><p>我使用的RT-AC86U是有官改固件的，但碍于处理器的原因无法安装OpenWrt，如果是RT-AC88U就只能安装梅林固件而非官改固件。</p><p>固件下载：<a href="https://www.koolcenter.com/">KoolCenter论坛</a></p><p>刷机教程：<a href="https://www.koolcenter.com/posts/139">点击访问，教程需要下拉一段</a> （这个链接虽然是RT-AC86U的教程，但实际上是所有情况的教程，写的很详细，重点是有时需要清除nvram配置或JFFS分区文件，以避免刷机后的一些冲突问题，教程里写的很清楚）</p><h3 id="必要的系统设置"><a href="#必要的系统设置" class="headerlink" title="必要的系统设置"></a>必要的系统设置</h3><blockquote><p>记得设置完后点击“应用本页设置”</p></blockquote><ul><li><p>增强WiFi信号：无线网络 - 专业设置 - 发射功率调整选择最大，地区选择澳大利亚</p></li><li><p>启用USB3.0：系统管理 - 系统设置 - USB Mode中选择USB3.0 （注意：启用USB3.0后可能会影响2.4G WiFi信号和速率，推荐手机、电脑等设备使用5G WiFi，家庭智能设备才使用2.4G WiFi，若所有设备均支持5G WiFi，推荐在无线网络 - 专业设置 - 频段2.4G中关闭2.4G WiFi）</p></li><li><p>启用硬盘休眠：系统管理 - 系统设置 - 启用硬盘休眠中选择是，时段不建议过短（频繁启停伤硬盘），建议在30分钟～2小时之间</p></li><li><p>启用Samba服务：插入硬盘后，打开 USB相关应用 - 网络共享（Samba）&#x2F; 云端硬盘 - 启用网上邻居共享。远程访问SMB服务需要设置的端口转发为：137、138、139、435端口</p></li><li><p>启用FTP服务：插入硬盘后，打开 USB相关应用 - 以 FTP 共享硬盘 - 启动 FTP，关闭 TLS 支持 （我可以访问FTP，但是不能存入任何文件，提示我200 227 553错误）</p></li></ul><br/><hr><h2 id="扩展软件"><a href="#扩展软件" class="headerlink" title="扩展软件"></a>扩展软件</h2><ol><li><p>安装固件后，访问<code>http://router.asus.com</code>或<code>http://192.168.50.1</code>，打开路由器管理界面，登陆管理员账号；</p></li><li><p>拉到最下面，选择“KoolShare - 软件中心”中的“软件中心”</p></li><li><p>点击全部软件，点击安装即可</p></li><li><p>也可手动安装扩展软件的离线安装包</p></li></ol><h3 id="手动安装扩展可能遇到的问题"><a href="#手动安装扩展可能遇到的问题" class="headerlink" title="手动安装扩展可能遇到的问题"></a>手动安装扩展可能遇到的问题</h3><ul><li><p>手动安装扩展软件时，如果提示检测到离线安装包名有非法关键词，则可以在系统管理 - 系统设置 - 服务中选择启用SSH(LAN-only)，然后将端口改为1025；接着用网线连接电脑和路由器，使用SSH工具（如Putty），如下图输入：</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://ooo.0x0.ooo/2024/08/19/OtgEIY.png" style="width:400px;"/></div></div></li><li><p>然后点击”Open“，在login as: 处填写管理员账号，然后按回车；接着输入管理员账户密码（不会显示），按Enter，看到如下图的画面时，粘贴下面的命令代码，按回车</p><div class="img-wrap"><div class="img-bg"><img class="img" src="https://ooo.0x0.ooo/2024/08/19/OtgLGU.png" style="width:400px;"/></div></div></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i &#x27;s/\tdetect_package/\t# detect_package/g&#x27; /koolshare/scripts/ks_tar_install.sh</span><br></pre></td></tr></table></figure><ul><li>输入完命令代码后没有报错，即成功，再次手动安装扩展软件即可</li></ul><blockquote><p>本段的参考来源：<a href="https://hq450.github.io/fancyss/">https://hq450.github.io/fancyss/</a><br>其他问题，请见<a href="https://www.koolcenter.com/category/apps?tag=default">KoolCenter论坛</a></p></blockquote><br/><hr><h2 id="扩展软件推荐"><a href="#扩展软件推荐" class="headerlink" title="扩展软件推荐"></a>扩展软件推荐</h2><h3 id="1-ROG工具箱"><a href="#1-ROG工具箱" class="headerlink" title="1. ROG工具箱"></a>1. ROG工具箱</h3><p>用于查看当前CPU、信号芯片的温度和天线发射功率等数据，同时可以一键释放内存</p><h3 id="2-ddnsto远程控制"><a href="#2-ddnsto远程控制" class="headerlink" title="2. ddnsto远程控制"></a>2. ddnsto远程控制</h3><p>官网：<a href="https://www.ddnsto.com/">https://www.ddnsto.com/</a></p><p>KoolShare论坛大佬开发，提供4Mbps的内网穿透服务，可自定义域名，可远程访问路由管理界面和SMB服务，甚至是Windows远程控制等，7天免费试用且可以无限续杯，会员价格26元&#x2F;年&#x2F;设备</p><p>目标主机地址格式为http:&#x2F;&#x2F; + ip + 端口号，若无端口号默认为80。例如路由管理界面为：<code>http://192.168.50.1</code>，下面提到的FileBrowser设置为<code>http://192.168.50.1:26789</code></p><h3 id="3-FileBrowser"><a href="#3-FileBrowser" class="headerlink" title="3. FileBrowser"></a>3. FileBrowser</h3><p>如果说SMB解决了访问文件和播放影视剧的问题，FileBrowser这款插件就彻底解决了几乎所有文件管理需求：支持上载，删除，预览，重命名和编辑文件和文件夹，且支持公网远程访问（配合ddnsto和端口转发即可）</p><p>初始用户名和密码均为 admin，建议开启看门狗，可以创建多个用户设置不同的访问权限，默认端口号：26789</p><p>进入FileBrowser后，mnt 文件夹为挂载的硬盘</p><h3 id="4-aria2"><a href="#4-aria2" class="headerlink" title="4. aria2"></a>4. aria2</h3><p>一个轻量级的跨平台下载工具，支持HTTP&#x2F;HTTPS、FTP、SFTP、BitTorrent等协议，支持多线程下载</p><p>如果使用，推荐给AC86U安装散热风扇</p><blockquote><p>还有一些DDNS&#x2F;内网穿透扩展软件也不错，自行摸索就好；除此之外也有诸如自动签到、单线多拨等插件，都挺有意思的，这里不再赘述，自己尝试就行。另外还有wifi boost，可以超出ASUS设定的WiFi发射功率，但有概率烧毁路由且售价30元，我不敢尝试，有兴趣的朋友可以试试</p></blockquote><br/><hr><h2 id="客户端的选择"><a href="#客户端的选择" class="headerlink" title="客户端的选择"></a>客户端的选择</h2><p>由于只有简单的SMB&#x2F;FTP&#x2F;UPnP服务，ASUS路由的性能并不能运行Docker、Emby、Jellyfin等软件，所以需要由客户端来刮削影片数据并生成海报墙。这里推荐一些有类似功能等客户端软件。由于它们使用文件名进行刮削，因此影片的文件名必须规范，否则可能出现刮削不到甚至刮削错误的情况。不建议使用外挂字幕；如果片源没有字幕，推荐将字幕和片源封装为mkv文件</p><p>推荐文件名命名格式：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">电影</span></span><br><span class="line">中文名.英文名.年份.画质.编码格式.音频格式.字幕情况.字幕组.文件扩展名</span><br><span class="line">例如：</span><br><span class="line">/电影/健听女孩.CODA.2021.2160P.HDR.x265.DTS5.1.YYeTs.mp4</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">电视剧</span></span><br><span class="line">中文名.英文名.SXXEXX.年份.集名称.画质.编码格式.音频格式.字幕情况.字幕组.文件扩展名</span><br><span class="line">例如：</span><br><span class="line">/美剧/生活大爆炸/第一季/生活大爆炸.The.Big.Bang.Theory.S01E02.2017.1080P.x264.AAC.YYeTs.mkv</span><br></pre></td></tr></table></figure><h3 id="nPlayer"><a href="#nPlayer" class="headerlink" title="nPlayer"></a>nPlayer</h3><p>平台：iOS，买断售价30元，另有Lite免费但有广告版</p><p>应该是利用TMDB的api刮削的，正确率较高。</p><h3 id="当贝播放器"><a href="#当贝播放器" class="headerlink" title="当贝播放器"></a>当贝播放器</h3><p>平台：Android&#x2F;Android TV</p><p>用于智能电视的播放器，刮削错误较多，把我的舌尖上的中国给识别成了舌尖上的秘密我实在是不能理解。</p><h3 id="Fileball"><a href="#Fileball" class="headerlink" title="Fileball"></a>Fileball</h3><p>平台：iOS&#x2F;tvOS，基础版免费，高级版买断售价68元（美区9.99刀）</p><p>支持NFS、SMB、WebDAV源，也支持Emby、Jellyfin，同时支持阿里云盘、百度网盘、谷歌网盘等。</p><p>不支持刮削。</p>]]></content>
      
      
      <categories>
          
          <category> NAS/路由 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NAS </tag>
            
            <tag> 路由 </tag>
            
            <tag> Linux </tag>
            
            <tag> 折腾 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown格式进阶：彩色</title>
      <link href="/Markdown-Advance-Format/"/>
      <url>/Markdown-Advance-Format/</url>
      
        <content type="html"><![CDATA[<h2 id="一、字体设置"><a href="#一、字体设置" class="headerlink" title="一、字体设置"></a>一、字体设置</h2><h3 id="1、更改字体、大小、颜色"><a href="#1、更改字体、大小、颜色" class="headerlink" title="1、更改字体、大小、颜色"></a>1、更改字体、大小、颜色</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;黑体&quot;</span>&gt;</span></span>我是黑体<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;微软雅黑&quot;</span>&gt;</span></span>我是微软雅黑<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;STCAIYUN&quot;</span>&gt;</span></span>我是华文彩云<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">red</span>&gt;</span></span>我是红色<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">#008000</span>&gt;</span></span>我是绿色<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">Blue</span>&gt;</span></span>我是蓝色<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span>=<span class="string">5</span>&gt;</span></span>我是尺寸<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;黑体&quot;</span> <span class="attr">color</span>=<span class="string">green</span> <span class="attr">size</span>=<span class="string">5</span>&gt;</span></span>我是黑体，绿色，尺寸为5<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><strong>效果如下：</strong></p><p><font face="黑体">我是黑体</font>  <font face="微软雅黑">我是微软雅黑</font>  <font face="STCAIYUN">我是华文彩云</font>  <font color=red>我是红色</font>  <font color=#008000>我是绿色</font>  <font color=Blue>我是蓝色</font>  <font size=5>我是尺寸</font>  <font face="黑体" color=green size=5>我是黑体，绿色，尺寸为5</font></p><h3 id="2、为文字添加背景颜色"><a href="#2、为文字添加背景颜色" class="headerlink" title="2、为文字添加背景颜色"></a>2、为文字添加背景颜色</h3><blockquote><p>由于 style 标签和标签的 style 属性不被支持，所以这里只能是借助 table, tr, td 等表格标签的 bgcolor 属性来实现背景色。故这里对于文字背景色的设置，只是将那一整行看作一个表格，更改了那个格子的背景色（bgcolor）</p></blockquote><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">yellow</span>&gt;</span></span>背景色yellow<span class="language-xml"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><strong>效果如下：</strong></p><table><tr><td bgcolor=yellow>背景色yellow</td></tr></table><hr><h2 id="二、图片设置"><a href="#二、图片设置" class="headerlink" title="二、图片设置"></a>二、图片设置</h2><h3 id="1、设置设置图片百分比"><a href="#1、设置设置图片百分比" class="headerlink" title="1、设置设置图片百分比"></a>1、设置设置图片百分比</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://www.baidu.com/img/bd_logo1.png&quot;</span> <span class="attr">width</span>=<span class="string">&quot;50%&quot;</span> <span class="attr">height</span>=<span class="string">&quot;50%&quot;</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p> <strong>效果如下：</strong></p><img src="https://www.baidu.com/img/bd_logo1.png" width="50%" height="50%"><h3 id="2、设置图片大小"><a href="#2、设置图片大小" class="headerlink" title="2、设置图片大小"></a>2、设置图片大小</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://www.baidu.com/img/bd_logo1.png&quot;</span> <span class="attr">width</span>=<span class="string">&quot;251&quot;</span> <span class="attr">height</span>=<span class="string">&quot;350&quot;</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p> <strong>效果如下：</strong></p><img src="https://www.baidu.com/img/bd_logo1.png" width="251" height="350"><h3 id="3、设置图片位置"><a href="#3、设置图片位置" class="headerlink" title="3、设置图片位置"></a>3、设置图片位置</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">align</span>=<span class="string">center</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;https://www.baidu.com/img/bd_logo1.png&quot;</span> <span class="attr">width</span>=<span class="string">&quot;50%&quot;</span> <span class="attr">height</span>=<span class="string">&quot;50%&quot;</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><blockquote><p>可选位置（align值）：center, left, right</p></blockquote><p><strong>效果如下：</strong></p><div align=center><img src="https://www.baidu.com/img/bd_logo1.png" width="50%" height="50%"></div><hr><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://blog.csdn.net/heimu24/article/details/81192697"><font color=orange>RGB颜色对照表</font></a></p><p><a href="https://blog.csdn.net/qcx321/article/details/53780672"><font color=purple>Markdown 语法大全 包括设置字体 颜色</font></a></p><p><a href="https://www.appinn.com/markdown/basic.html"><font color=green>Markdown: Basics （快速入门）</font></a></p><p><a href="https://blog.csdn.net/thither_shore/article/details/52181464"><font color=red>CSDN-markdown 文字样式设置（字体, 大小, 颜色, 高亮底色）</font></a></p>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>选购建议：移动硬盘盒</title>
      <link href="/External-Hard-Drive-Case/"/>
      <url>/External-Hard-Drive-Case/</url>
      
        <content type="html"><![CDATA[<h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><p>几乎所有人都分得清U盘和移动硬盘——体积小、速度慢而没有数据线的就是U盘，体积大、速度快且需要数据线的是移动硬盘。然而，这其实可以说是一种“刻板印象”。随着SSD的普及，移动硬盘和U盘的体积差距开始逐渐缩小，甚至已经出现了一些使用NVME主控的“U盘”出现：高达1TB的容量，1GB&#x2F;s的速度，却是大号U盘的样子，这怕是能颠覆很多人的想象。</p><p>如今，由于电影、音乐、游戏等文件体积的增长，传统U盘的速度和容量已经无法满足人们的需求。这时，一个体积比U盘大不了太多，速度500MB&#x2F;s甚至最高可达4GB&#x2F;s，且平均每GB容量的价格和U盘相近的移动固态硬盘，就成了很多人的选择。</p><br/><hr><h2 id="为什么选择移动硬盘盒？"><a href="#为什么选择移动硬盘盒？" class="headerlink" title="为什么选择移动硬盘盒？"></a>为什么选择移动硬盘盒？</h2><p>移动固态硬盘（PSSD）是有成品售卖的，代表产品有三星T5、T7，闪迪E61，E30，凯侠XD10等。它们中有的产品体积比常规的移动硬盘盒更小，且外观更好看（一体成型金属机身），通常还拥有更好的防摔甚至防水特性，为什么还要选择移动硬盘盒呢？</p><p>对我而言，硬盘盒虽然需要一点DIY，但其实对我而言是方便的，而且我认为性价比更高，原因如下：</p><ol><li>可以将台式机上的硬盘带走用，这样可以节省传输数据的时间和传输数据对硬盘带来的损耗（但是会花费拆装电脑的时间）；</li><li>我有很多多余的硬盘，硬盘盒可以将这些闲置的硬盘利用起来； </li><li>成品的移动硬盘只能当移动硬盘，硬盘盒+硬盘这种DIY的移动硬盘可以随时将硬盘拆出，给系统盘硬盘损坏的电脑救急；</li><li>DIY方案能让我挑选硬盘的主控和颗粒，而且可以选择带有独立缓存的硬盘。</li></ol><p>综上，选择成品PSSD还是DIY，还得看你自己的需求。</p><br/><hr><h2 id="为什么不建议使用机械硬盘？"><a href="#为什么不建议使用机械硬盘？" class="headerlink" title="为什么不建议使用机械硬盘？"></a>为什么不建议使用机械硬盘？</h2><ul><li><p>作为移动硬盘，很容易遭遇摔碰、震动、意外断电。而机械硬盘最怕的就是这些，很有可能就会对数据和硬盘造成永久性损伤。</p></li><li><p>但不代表机械硬盘不能作为移动硬盘：如果是3.5寸机械硬盘，则完全不推荐，因为它像一本书一样厚重，使用起来非常痛苦；如果是2.5寸机械硬盘，则可以当成2.5寸SATA固态硬盘一样使用，但一定要注意防震！</p></li></ul><br/><hr><h2 id="移动硬盘盒型号"><a href="#移动硬盘盒型号" class="headerlink" title="移动硬盘盒型号"></a>移动硬盘盒型号</h2><blockquote><p>因为如今的移动硬盘盒，最核心的技术是SATA&#x2F;NVME转USB&#x2F;雷电的桥接主控，因此这里以协议的转换作为分类，以主控的型号作为硬盘盒的型号，聊一下每个主控&#x2F;方案。在选购前只要选择对应的主控型号的硬盘盒，再挑选一下外观和附加功能即可（硬盘盒的主控&#x2F;协议一般可以在商品详情里找到，实在没有可以询问客服）</p></blockquote><p>在选购M.2硬盘盒之前，你要确定一下你的M.2硬盘的种类。目前M.2硬盘主要有两种，一种是走SATA协议（也叫M.2 NGFF），一般是M.2 B key；一种是走PCI-E协议，大都是M.2 M key。这两种规格的M.2 SSD可以很容易的在物理外观上进行区分。但是要注意的是，早期即便走PCI-E的SSD也有只支持AHCI的，而不是NVMe，比如浦科特M6E，这种SSD是不能用在NVMe的硬盘盒上的，不过这种ssd很少，几乎可以忽略不计。下图中，上面是三星860EVO (SATA)，下面是970EVO (PCI-E NVMe)，可以很容易地看到两者外观上的区别。</p><img src="/External-Hard-Drive-Case/External-Hard-Drive-Case_1.jpg" class="" title="图片"><h3 id="NVME转USB3-1-Gen2-10Gbps"><a href="#NVME转USB3-1-Gen2-10Gbps" class="headerlink" title="NVME转USB3.1 Gen2 (10Gbps)"></a>NVME转USB3.1 Gen2 (10Gbps)</h3><p>价格通常在100～200这个区间中，如果你<del>有太多的钱</del>或者有信仰，可以选择ROG那款，还带RGB呢</p><h4 id="1-祥硕ASM2362"><a href="#1-祥硕ASM2362" class="headerlink" title="1. 祥硕ASM2362"></a>1. 祥硕ASM2362</h4><p>这款主控发热较大，但性能还算稳定。由于这个主控的制造商是话说的子公司，因此那款带灯的ROG硬盘盒也是这个主控。经测试，这款主控的电流要比另外两款稍大，因此在使用大电流硬盘时，手机可能供电不足。缺点是当USB Type-A转Type-C线材不支持USB3.1 Gen2时，插入主板USB3.1 Gen2接口，使用一段时间可能会掉盘；我因为这个bug还功搞到了ASM2362的三款固件和烧录固件的软件，只不过卖家的教程实在太含糊了，我在摸索出使用方法后，写了一份详细的教程给卖家发回去了😂，详情可以看<a href="https://t.bilibili.com/619297755388618406">我的B站动态</a>。</p><p>固件烧录软件、固件、使用教程：<a href="https://cloud.189.cn/t/VvUVbiny6via">点击下载</a> 访问码: v3qv</p><h4 id="2-小螃蟹RTL9210"><a href="#2-小螃蟹RTL9210" class="headerlink" title="2. 小螃蟹RTL9210"></a>2. 小螃蟹RTL9210</h4><p>小螃蟹也就是瑞昱Realtek，你的电脑的声卡大概率是这个公司的产品。这款主控发热最低，且性能不错，但是会增加SSD的异常关机计数（不管你在USB设备里面有没有正常弹出，甚至是正常关机，都会增加，对固态硬盘来说，异常关机计数是计算SSD健康度的一个参数），<u>新款固件貌似解决了这个问题，烧录软件和教程在下边：</u></p><p>固件烧录软件：<a href="https://cloud.189.cn/t/BbQnm2FnmEFf">点击下载</a> 访问码: sk4b  ｜  <a href="https://www.airchip.org.cn/index.php/2021/10/28/9210abfw12724/">刷机教程</a></p><h4 id="3-蓝硕JMS583"><a href="#3-蓝硕JMS583" class="headerlink" title="3. 蓝硕JMS583"></a>3. 蓝硕JMS583</h4><p>早期的NVME硬盘盒采用的主控。这款主控发热很大且稳定性差，长时间使用导致过热以后会严重影响性能，尤其是随机读写性能。<em>我使用时还发现，如果将Ubuntu18.04系统安装到这个硬盘盒的硬盘中，在B450和B550主板上读写速度会非常慢，无法使用。</em>不推荐购买。</p><h3 id="M-2-NVME或SATA转USB3-1-Gen2-10Gbps"><a href="#M-2-NVME或SATA转USB3-1-Gen2-10Gbps" class="headerlink" title="M.2 NVME或SATA转USB3.1 Gen2 (10Gbps)"></a>M.2 NVME或SATA转USB3.1 Gen2 (10Gbps)</h3><p>如果你既有M.2 NVME，又有M.2 SATA的需求，那你只能选择小螃蟹RTL9210B主控，性能和问题和RTL9210一致，只是增加了对M.2 SATA的兼容，<del>（当然价格也增加了）</del>。上边的固件烧录软件RTL9210B也可以使用。</p><h3 id="M-2-SATA转USB3-0-5Gbps"><a href="#M-2-SATA转USB3-0-5Gbps" class="headerlink" title="M.2 SATA转USB3.0 (5Gbps)"></a>M.2 SATA转USB3.0 (5Gbps)</h3><p>主流价格在60元以内，少数做工好一些的可能会要70～80，但总体来说还是相当便宜。</p><p>因为SATA3和USB3.0的速度都是5Gbps，所以也没什么性能上的大坑，只需要主控支不支持UASP以及TRIM，支持才能发挥出SSD最大的性能水平。</p><p>这些硬盘盒大都用的和标准的2.5寸SATA硬盘盒一样的主控，比如常见的VLI716，JMS578，ASM235CM等主控。</p><p>另外ASM235CM就是ASM1351，ASM225CM就是ASM1153E，两者均不支持TRIM指令。但是由于主控本身比较强，所以采用这两者主控的盒子其实也是可以买的。</p><h3 id="2-5寸-SATA转USB3-0-5Gbps"><a href="#2-5寸-SATA转USB3-0-5Gbps" class="headerlink" title="2.5寸 SATA转USB3.0 (5Gbps)"></a>2.5寸 SATA转USB3.0 (5Gbps)</h3><p>可以参考上面的，主要是VLI716，JMS578，ASM235CM等主控，没有太大区别。</p><p>需要考虑的只有价格、外观和质量了。我曾经趁打折买过一款小厂的，价格非常便宜，15.9元包邮，JMS578主控，金属外壳，我贴了一块导热硅脂垫使外壳给主控散热。性能和稳定性没问题，就是做工实在太差，一是没有减震设计，二是外壳非常松，把硬盘盒立起来，如果是机械硬盘会直接滑出来。后来我干脆使用电工胶带固定。</p><h3 id="NVME转雷电3-USB4-40Gbps"><a href="#NVME转雷电3-USB4-40Gbps" class="headerlink" title="NVME转雷电3&#x2F;USB4 (40Gbps)"></a>NVME转雷电3&#x2F;USB4 (40Gbps)</h3><p>NVME转雷电3的主控目前只有JHL6430和JHL7440，<u>未来可能会有8系列的主控</u>。</p><p>JHL主控不支持USB协议，也就是说如果是标明“雷电3”的硬盘盒，只能在雷电3&#x2F;雷电4&#x2F;USB4接口上使用，无法在不支持雷电协议的接口上使用。请一定要确认你的设备有雷电接口！</p><p>那些所谓的USB4的硬盘盒，其实是JHL7440+JMS583双主控的方案，接雷电接口就走JHL7440，接USB接口就走JMS583，市面上的相关产品有阿卡西斯、奥睿科、佳翼等，主板都长一个样子，全都是这个公版方案，就选自己喜欢的外观，选做工散热好即可。</p><h3 id="NVME转USB3-2-Gen2x2-20Gbps"><a href="#NVME转USB3-2-Gen2x2-20Gbps" class="headerlink" title="NVME转USB3.2 Gen2x2 (20Gbps)"></a>NVME转USB3.2 Gen2x2 (20Gbps)</h3><p>只有祥硕ASM2364这一款主控支持，因为这个协议支持的主板也很少，所以厂商也不愿意做这个协议的硬盘盒主控。这个主控没什么槽点，性能和稳定性都是经过了市场检验的。</p><br/><hr><h2 id="一些特殊的硬盘盒"><a href="#一些特殊的硬盘盒" class="headerlink" title="一些特殊的硬盘盒"></a>一些特殊的硬盘盒</h2><ol><li>DOCKCASE 可视化M2硬盘盒，主控是RTL9210B，显示屏可显示硬盘型号、健康度、分区和硬盘保护时间等信息。京东日常售价399起，可以说是土豪的玩具了。</li></ol><img src="/External-Hard-Drive-Case/External-Hard-Drive-Case_2.jpg" class="" title="图片"><ol start="2"><li>ROG 幻影高速M2硬盘盒，主控是ASM2362，带一个RGB灯条和败家之眼LOGO，支持Aura神光同步。另外这款硬盘盒是带有导热垫的，且散热好就是卖点之一，属于是免工具拆卸里散热最好的一批了。不过京东日常389的售价也属实不便宜。</li></ol><img src="/External-Hard-Drive-Case/External-Hard-Drive-Case_3.jpg" class="" title="图片"><ol start="3"><li>扩展坞和M2硬盘盒一体化的产品。很多厂商都有类似的产品，相比扩展坞+硬盘盒的方案，可以少带一套线、一个盒子和少占用一个Type-C接口，但是当视频输出时，硬盘和视频数据的速度肯定会互有影响，因此此类一般为雷电接口，或者M2使用SATA协议。代表的产品有海备思的UC62，它也曾在<a href="https://www.bilibili.com/video/BV1qK411H7Vk">影视飓风关于iPad Pro的评测</a>中出现过，有NGFF和NVME两个版本，价格差了160r。</li></ol><img src="/External-Hard-Drive-Case/External-Hard-Drive-Case_4.jpg" class="" title="图片"><br/><hr><h2 id="关于外观和设计再说两句"><a href="#关于外观和设计再说两句" class="headerlink" title="关于外观和设计再说两句"></a>关于外观和设计再说两句</h2><p>如果你看了足够多的型号以后，就会发现，其实很多硬盘盒是一样的，仅仅是厂商的打标不同，这其实就是之前所说的公版设计——外壳、PCB完全相同，只是包装盒和硬盘盒上印的LOGO不同。这种情况下，同种设计选择价格最便宜的就好。</p><p>现在M.2硬盘盒基本上可以分为免工具拆卸和需要工具两种。免工具的方便切换使用不同的M.2硬盘；需要工具的方便贴导热垫，对硬盘和硬盘盒主控的散热会更好一些；当然这里面也有例外情况，比如ROG硬盘盒。选购时还是主要以你的需求和你要装进去的硬盘的发热量来选择合适的硬盘盒，必要时甚至可以选择带有风扇的硬盘盒。不推荐购买亚克力的硬盘盒，尽量购买全金属的版本，因为前者耐用性和散热效果差很多。</p><br/><hr><h2 id="传统U盘可以被移动硬盘完全替代吗？"><a href="#传统U盘可以被移动硬盘完全替代吗？" class="headerlink" title="传统U盘可以被移动硬盘完全替代吗？"></a>传统U盘可以被移动硬盘完全替代吗？</h2><p>一般的移动硬盘并不能完全替代传统U盘。原因主要有以下两点：</p><ol><li><p>一些操作系统的安装、固件更新等，需要U盘作为介质，移动硬盘通常无法被正常识别：</p><p>使用微软官方的Windows10安装工具，无法选择使用移动硬盘制作装机盘；</p><p>一些主板刷BIOS需要使用U盘，比如MSI B550M MORTAR，需要使用主板的M-FLASH USB接口更新BIOS；</p><p>当固态硬盘更新固件，而其作为系统盘时，需要使用U盘制作启动盘，在gurb中运行，比如KIOXIA硬盘的固件更新，使用SSD UTILITY会显示“此为系统碟，无法在操作系统执行下进行更新，您可创建开机版U盘来开机并执行更新”。</p></li><li><p>一些U盘可以做得很小，体积和无线鼠标接收器差不多，比如三星FIT系列和闪迪酷豆，这种极致的便携可以满足一些特殊需求，比如插在车内存放音乐或者挂在钥匙链上等。</p></li></ol><p>但是，目前已经有厂商将移动硬盘主控和颗粒放到U盘的外壳内，比如<code>CHIPFANCIER</code>的产品，价格稍贵。</p><img src="/External-Hard-Drive-Case/External-Hard-Drive-Case_5.jpg" class="" title="图片"><br/><hr><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><p><a href="https://mp.weixin.qq.com/s/7FR9OVvCG_oITS6r91iH-A">电脑吧评测室 - M.2硬盘盒选购指南</a></p><p><a href="https://www.chiphell.com/thread-1991421-1-1.html">Chiphell - 闲着无聊入了个ASM2362的盒子,顺便拆了</a></p><p><a href="https://www.airchip.org.cn/index.php/2021/10/28/9210abfw12724/">AirChip - Realtek RTL9210固件 AB版本1.27.24.090721</a></p><p><a href="https://www.zhihu.com/question/463215346/answer/2071635781">知乎 - 关于移动硬盘盒的主控芯片问题?</a></p>]]></content>
      
      
      <categories>
          
          <category> 选购建议 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NAS </tag>
            
            <tag> 路由 </tag>
            
            <tag> 硬盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>自建Windows系统4盘位NAS</title>
      <link href="/DIY-x86-NAS/"/>
      <url>/DIY-x86-NAS/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p><strong>对大多数人而言，NAS没有什么意义</strong>，电影电视剧可以看完就删，甚至在网盘里就可以看，连下载都不需要。但一定有人像我一样，网盘视频资源被封且不愿忍受网盘的龟速，想要收藏4K HEVC HDR DTS5.1电影，又买不起8T SSD，并且受不了3.5寸机械硬盘的噪音，那么，搭建自己的NAS，就是最佳的选择。</p><br/><hr><h2 id="NAS硬件选择"><a href="#NAS硬件选择" class="headerlink" title="NAS硬件选择"></a>NAS硬件选择</h2><p>关于NAS的硬件，我真的反复对比了很久，以下是我的一点观点，如有错误，欢迎指正：</p><ol><li>Intel 1155平台太过古老，且主板难买；</li><li>AMD推土机平台对黑群晖的兼容性不好（未来我可能将尝试黑群晖），而且性能太差；</li><li>Intel 1151平台、AMD锐龙平台太贵；</li><li>J1900、J4105、J3455功耗很棒，但是扩展性较差，带有4个SATA或可以转接为4个SATA的主板不便宜且难找，J1900的指令集还不完善，不能很好的运行虚拟机；</li><li>树莓派&#x2F;智能路由：性能和扩展性就更差了，如果你有，可以试着玩玩，简单体验一下，但不建议长期使用，对主机和硬盘都是一种伤害；</li></ol><ul><li><p><strong>我手上有2条DDR3内存和一个PM961 128G M.2固态硬盘</strong>，我希望尽可能利用上它们；</p></li><li><p>星际蜗牛C款机箱是可以放下19x17cm的主板的，但是需要锯掉机箱的一小块，我不想锯机箱。</p></li></ul><p>最终，我选择了Intel 1150平台，即H81&#x2F;B85主板，配合赛扬T后缀CPU，核显支持Intel QuickSync硬解码，同时功耗不高。</p><br/><h3 id="以下是我选择的最终配置："><a href="#以下是我选择的最终配置：" class="headerlink" title="以下是我选择的最终配置："></a>以下是我选择的最终配置：</h3><ul><li><p>主板：华擎B85M-itx <a class="btn-anzhiyu blue" href="https://www.asrock.com/mb/Intel/B85M-ITX/index.cn.asp?cat=Download&os=BIOS"   title="华擎官网详细参数"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>华擎官网详细参数</span></a></p><ul><li>4xSATA3+eSATA，HDMI，PCIe3.0x16，4x USB3.1Gen1，接口齐全，扩展能力拉满</li><li>内置千兆网卡，满足基础需求，未来可通过PCIe扩展</li></ul></li><li><p>CPU：Intel <a href="https://www.cpu-monkey.com/en/cpu-intel_pentium_g3240t">G3240T</a> @2.7Ghz （2C2T，TDP 35W，CPU性能介于<a href="https://www.cpu-monkey.com/en/cpu-intel_celeron_j3455">J3455</a>和<a href="https://www.cpu-monkey.com/en/cpu-intel_celeron_j4105">J4105</a>之间，核显性能比二者稍强，但比二者硬解码器少）</p></li><li><p>内存：DDR3 4G @1600Mhz + DDR3 2G @1333Mhz （从家里报废的775平台电脑上拔下来的）</p></li><li><p>机箱：星际蜗牛C款</p><ul><li>自带200W 1U电源和机箱风扇</li><li>有一个全高PCIe槽位，前置面板有一个USB2.0接口</li></ul></li><li><p>硬盘：</p><ul><li>光威猛将120G SATA3固态硬盘（选这个是因为主板无法从M.2硬盘启动，我也懒得刷BIOS）</li><li>PM961 128G M.2固态硬盘，配合淘宝10元包邮的PCIe转M.2转接板</li><li>日立 4TB 7200转 64M 3.5寸机械硬盘（翻新清零盘，主要是便宜）</li></ul></li><li><p>散热：AVC 28cm 铜芯散热器，风扇是4pin带温控的</p></li><li><p>路由器&#x2F;交换机：ASUS RT- AC88U</p></li><li><p>风扇：</p><ul><li>将机箱风扇换为利民B12W，12025规格</li><li>将电源风扇换为建准4020 12v 0.4W静音风扇</li></ul></li></ul><blockquote><p>最终总价格来到了近1000r（本来想把价格控制在600左右的，我的钱包在滴血🥲）</p></blockquote><br/><hr><h2 id="系统的选择"><a href="#系统的选择" class="headerlink" title="系统的选择"></a>系统的选择</h2><p>我不希望使用我的其他电脑难以读写的文件系统，加上懒得折腾黑群晖和Docker，我有iCloud也不需要群晖的备份功能，因此我最终选择了Windows系统。</p><p>具体的系统版本是<strong>Windows 10 LTSC x64</strong> <a class="btn-anzhiyu blue" href="https://msdn.itellyou.cn/"   title="下载系统镜像"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>下载系统镜像</span></a></p><p>因为觉得Windows Server没什么必要；LTSC比普通Windows 10精简掉了很多功能，内存占用降低了至少500MB，且容易激活（KMS），更新也少，系统稳定，还有家庭版Win10没有的远程桌面功能。</p><p>本想尝试虚拟机跑OpenWrt+黑群晖的，但安装难度和兼容性把我劝退了。如果只装黑群晖的话，我上面提到的主板自带千兆网卡不能完美驱动。</p><br/><hr><h2 id="搭建家庭流媒体平台"><a href="#搭建家庭流媒体平台" class="headerlink" title="搭建家庭流媒体平台"></a>搭建家庭流媒体平台</h2><blockquote><p>本来是想选择JellyFin的，奈何JellyFIn的界面不好看，甚至一度大量错误识别我的电影和电视剧，出于无奈，最终选择了Emby。但JellyFin的免费硬解码确实香，可以刮削好后在使用JellyFin</p></blockquote><h3 id="效果展示："><a href="#效果展示：" class="headerlink" title="效果展示："></a>效果展示：</h3><img src="/DIY-x86-NAS/DIY-x86-NAS_1.jpg" class="" title="Emby主页"><img src="/DIY-x86-NAS/DIY-x86-NAS_2.jpg" class="" title="Emby电影"><img src="/DIY-x86-NAS/DIY-x86-NAS_3.jpg" class="" title="Emby电视剧"><h3 id="Emby-Server"><a href="#Emby-Server" class="headerlink" title="Emby Server"></a>Emby Server</h3><p>下载官方原版 <a class="btn-anzhiyu green" href="https://emby.media/windows-server.html/"   title="Emby"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>Emby</span></a></p><p>Emby豆瓣刮削器插件: 安装教程 <a class="btn-anzhiyu " href="https://tieba.baidu.com/p/6555598271/"   title="百度贴吧"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>百度贴吧</span></a> | 下载 <a class="btn-anzhiyu blue" href="https://github.com/AlifeLine/Emby.Plugins.Douban/"   title="Github"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>Github</span></a></p><p>添加hosts：<code>13.224.161.90 api.themoviedb.org</code></p><h3 id="削刮影片信息"><a href="#削刮影片信息" class="headerlink" title="削刮影片信息"></a>削刮影片信息</h3><p>使用tinyMediaManager（tMM）刮削影片信息</p><blockquote><p>最新版本tMM对一些功能添加了限制，需要会员才能使用，所以这里建议使用3.1.7</p></blockquote><p>下载tMM 3.1.7 <a class="btn-anzhiyu " href="https://wwr.lanzoui.com/iPzvsvsx7kj/"   title="蓝奏云"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>蓝奏云</span></a> ｜ 使用教程 <a class="btn-anzhiyu pink" href="https://www.bilibili.com/video/BV1x541147i2/"   title="Bilibili"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>Bilibili</span></a></p><h3 id="客户端和App"><a href="#客户端和App" class="headerlink" title="客户端和App"></a>客户端和App</h3><p>因为客户端&#x2F;App是可以调用Emby Server的硬解码的，而没有购买Emby Premiere的话，是无法使用App、硬解码、和下载功能的</p><p><a href="https://embywiki.911997.xyz/">Terminus 终点站 WIKI</a> ｜ 这是为Emby公益服使用者提供的教程，因为我们自己搭建了Emby Server，因此只需要看该网页“在各种设备上使用”的教程</p><p>通过我的使用，这里推荐：</p><p>iOS：Infuse客户端（不推荐使用AltStore+EmbyPro.ipa）</p><p>Android：<a href="https://github.com/rartv/EmbyPublic/releases/download/0.0.6/Emby.for.Android.3.1.73.Cracked.apk">修改版官方客户端</a></p><p>Windows：<a href="https://github.com/MediaBrowser/emby-theater-windows/releases/">修改版官方客户端</a></p><p>macOS：Infuse客户端或<a href="https://embywiki.911997.xyz/use-on-various-devices/use-on-macos/using-official-client-on-macos/">修改版官方客户端</a></p><br/><hr><h2 id="Windows远程桌面"><a href="#Windows远程桌面" class="headerlink" title="Windows远程桌面"></a>Windows远程桌面</h2><p>使用Windows远程桌面可以更方便地管理NAS <a class="btn-anzhiyu " href="https://support.microsoft.com/zh-cn/windows/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%E8%BF%9C%E7%A8%8B%E6%A1%8C%E9%9D%A2-5fe128d5-8fb1-7a23-3b8a-41e636865e8c"   title="教程 - 微软支持"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>教程 - 微软支持</span></a></p><blockquote><p>注意，<strong>要为NAS在路由器上设置一个固定IP</strong>，在华硕&#x2F;梅林固件路由器上这样设置：路由管理界面 - 内部网络(LAN) - DHCP服务器 - 启用手动指定功能 - 选择NAS并添加 - 应用本页面设置</p></blockquote><br/><hr><h2 id="将NAS的硬盘映射到其他电脑"><a href="#将NAS的硬盘映射到其他电脑" class="headerlink" title="将NAS的硬盘映射到其他电脑"></a>将NAS的硬盘映射到其他电脑</h2><p>除了可以更方便且低延迟地管理NAS文件（Windows远程桌面有肉眼可见的延迟），还能便于上传下载</p><p>视频教程（从视频20分36秒开始）<a class="btn-anzhiyu pink" href="https://www.bilibili.com/video/BV1dy4y1C7we"   title="Bilibili"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>Bilibili</span></a></p><br/><hr><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>出于各方面考虑，使用一年的NAS已经被我出售，且一段时间内不会再考虑购买2盘位以上的NAS。如果可能，我想试一试用小主机组一台全闪存NAS。</p>]]></content>
      
      
      <categories>
          
          <category> NAS/路由 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NAS </tag>
            
            <tag> 捡垃圾 </tag>
            
            <tag> 流媒体 </tag>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决战地风云4&quot;您已被PunkBuster驱逐&quot;</title>
      <link href="/Fix-BF4-PB-Problem/"/>
      <url>/Fix-BF4-PB-Problem/</url>
      
        <content type="html"><![CDATA[<p>VR无线串流软件<a href="https://www.vrdesktop.net/">Virtual Desktop</a>与PunkBuster冲突，需要卸载后者才可使用前者！</p><blockquote><p>本文在 2025 年战地风云4解禁后才公开访问。本人带着批判美帝国主义的眼光尝试该游戏；本人始终坚持文化自信，相信人民军队！</p></blockquote><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>在你从某宝花2元白嫖了Amazon的战地4的Key之后，打开过这个游戏吗？<br>不会只玩了剧情，没有体验战地风云最最好玩的多人游戏吧？</p><p>多人游戏，启动！<br>选择服务器，极地监狱，进入！<br>复活，突突突（几秒后）…您已被PunkBuster驱逐！</p><img src="/Fix-BF4-PB-Problem/Fix-BF4-PB-Problem_1.jpg" class="" title="您已被PunkBuster驱逐"><p>我又没开挂，凭什么踢我？</p><p><u>因为你没有（正确）安装反作弊器。</u></p><hr><h2 id="反作弊器安装方法"><a href="#反作弊器安装方法" class="headerlink" title="反作弊器安装方法"></a>反作弊器安装方法</h2><ol><li><p><del>将Origin中战地4的启动方式改成x86，以后再启动游戏会像战地3一样使用浏览器选择服务器：Origin - 游戏库 - Battlefield4 - 设定 - 游戏属性 - 进阶启动选项 - 启动此游戏时… - Battlefield 4™ (x86)</del></p></li><li><p>下载最新版PB：访问PunkBuster官网，下载<a href="https://www.evenbalance.com/pbsetup.php">pbsetup.zip</a>，点击网页右上角的“Downloads”，下载PunkBuster Service Installer (pbsvc)</p></li><li><p>卸载旧版PB：打开pbsvc.exe，选择Un-Install&#x2F;Remove PunkBuster Service，点击Next，…, 全部显示 OK，点击 Finish</p></li><li><p>重启电脑</p></li><li><p>安装PB：解压pbsetup.zip，启动pbsetup.exe，选择I agree，选择Add a Game，选择Battlefield 4，Game Path中如果没有自动找到你的游戏目录，你需要手动选择一下，然后等待安装完成。安装完成后点击Update PunkBuster<br>注意：在这一步中，需要关闭所有杀毒软件（包括 Windows Defender）和所有网络加速器，因为它们可能会导致pbsetup从服务器下载的文件损坏！<a href="https://www.reddit.com/r/battlefield_4/comments/1i47bim/i_wanted_to_update_punkbuster_and_this_dll/">参考来源</a></p></li><li><p>安装PnkBstrA和PnkBstrB：打开pbsvc.exe，选择Install&#x2F;Re-Install PunkBuster Service，点击Next直到安装完成</p></li><li><p>确保控制面板 - Windows Defender 防火墙 - 允许应用或功能通过 Windows Defender 防火墙中，Battlefield 4 x86、Battlefield 4 x64、PnkBstrA、PnkBstrB 是允许的状态。</p></li></ol><hr><h2 id="再BB两句"><a href="#再BB两句" class="headerlink" title="再BB两句"></a>再BB两句</h2><p>如果你要玩欧服，加速器一定要选择带假延迟的，否则可能会因为ping过高被踢<br>记得一定要遵守服务器的规定！有的服务器有禁用的装备，强制使用可能会被踢</p><blockquote><p>AEK-971太强了，几乎所有人都在用……</p></blockquote><blockquote><p>怀念 Origin，EA App 好难用……</p></blockquote><blockquote><p>2025.08.18 更新：战地6的Beta测试结束了，意犹未尽。EA App 总算好用了些……</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Games </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 游戏 </tag>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>黑苹果：戴尔XPS9360笔记本</title>
      <link href="/Dell-XPS9360-Hackintosh/"/>
      <url>/Dell-XPS9360-Hackintosh/</url>
      
        <content type="html"><![CDATA[<h2 id="Q-A"><a href="#Q-A" class="headerlink" title="Q&amp;A"></a>Q&amp;A</h2><h3 id="为什么选择macOS？"><a href="#为什么选择macOS？" class="headerlink" title="为什么选择macOS？"></a>为什么选择macOS？</h3><p>这个问题，可以转化为，macOS有什么Windows10做不到的功能？</p><ol><li>苹果可以套牢用户的大杀器 —— iCloud。iCloud可以在你的iPhone、iPad之间同步几乎所有你跨设备操作时的数据：你的所有照片和视频、便签、通讯录、短信、提醒事项&#x2F;日程、iCloud云盘中的文件、甚至所有你记不住的那些账号和密码（iCloud钥匙串）… 除此之外，iCloud还能让你可以跨平台复制粘贴文字、接听电话和FaceTime、让你的iPad变身无线扩展屏（随航功能），将iPhone&#x2F;iPad上的画面或音乐投送到Mac（macOS 12）。 我认为，相比于华为那种将手机投屏到电脑，实现上述功能的做法，iCloud更加简洁。</li><li>可以使用一些苹果自有的专业软件：Final Cut Pro X，一款视频剪辑软件，可以使用很多仅限FCPX的插件；Logic Pro，一款强大的音乐制作软件。</li><li>iOS相比Android，用户付费率更高，App被盗版的可能性也更低，因此对小开发者而言，通常为iOS开发App的收入要高过为Android开发。而iOS开发，Xcode是必须的IDE，Xcode只能运行在macOS上。对我自己来说，Kite、Dash等工具可以辅助我编程，Xcode可以实时报错，简单的代码错误可以一键自动修改。</li><li>对于有其他苹果设备的用户而言，如AirPods、Beats等的兼容性更好。</li></ol><h3 id="为什么选择黑苹果而不是白苹果？"><a href="#为什么选择黑苹果而不是白苹果？" class="headerlink" title="为什么选择黑苹果而不是白苹果？"></a>为什么选择黑苹果而不是白苹果？</h3><blockquote><p>黑苹果：指在非苹果生成并销售的设备上运行的macOS<br>白苹果：苹果销售的Mac电脑</p></blockquote><p>我可以非常肯定地说，同价位黑苹果的性能远超白苹果，同时扩展性更强。<br>参考以下例子：</p><ul><li><p>MacBook Pro13 2015，8G内存+256G硬盘，CPU为i5-5257U（双核四线程，主频2.7Ghz，最高睿频3.1Ghz，3MB三级缓存），显卡为Iris Graphics 6100；参考跑分：Cinebench R20单核277分，多核706分</p></li><li><p>同价位我的XPS13 9360，8G内存+256G硬盘，CPU为i5-8250U（四核八线程，主频1.6Ghz，单核睿频最高3.4Ghz，全核睿频最高2.3Ghz，6MB三级缓存），显卡为UHD620；参考跑分：Cinebench R20单核348分，多核1509分</p></li></ul><br/><hr><h2 id="硬件的选择"><a href="#硬件的选择" class="headerlink" title="硬件的选择"></a>硬件的选择</h2><h3 id="戴尔Dell-XPS13-9360-笔记本"><a href="#戴尔Dell-XPS13-9360-笔记本" class="headerlink" title="戴尔Dell XPS13-9360 笔记本"></a>戴尔Dell XPS13-9360 笔记本</h3><p>CPU：Intel i5-8250U<br>显卡：Intel UHD620<br>内存：LPDDR3 8GB @1867Mhz<br>SSD：KIOXIA RC10 512GB<br>网卡：Intel AX200<br>声卡：alc256<br>显示器：13.3inch 1080P @60hz<br>扩展坞：Dell DA300（使用HDMI接口会发热严重，使用DP则不会）<br>BIOS版本：2.16.0</p><h3 id="BIOS设置"><a href="#BIOS设置" class="headerlink" title="BIOS设置"></a>BIOS设置</h3><p><strong>Disable C-States</strong>（如果你更换了硬盘，开启该选项可能导致<strong>win10卡死</strong><a class="btn-anzhiyu outline" href="https://blog.csdn.net/lzrreach/article/details/76359388/"   title="查看原因"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>查看原因</span></a>）<br>Sata: AHCI<br>Disable Secure Boot<br>Enable VT<br><strong>Disable VT-D</strong><br>Disable SD card reader (可选，关闭节省0.5w功耗)</p><h3 id="无线网卡的选择"><a href="#无线网卡的选择" class="headerlink" title="无线网卡的选择"></a>无线网卡的选择</h3><p>无线网卡的选购也可参考这篇文章<a class="btn-anzhiyu outline orange" href="http://k61.org/a7f5fe4a.html"   title="黑苹果无线网卡购买指南"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>黑苹果无线网卡购买指南</span></a><br>很多英特尔网卡可以被驱动，感谢<a href="https://openintelwireless.github.io/">OpenIntelWireless</a>，网速可能能秒杀上面提到的博通网卡，几乎完美兼容，很多网卡焊死在主板上的笔记本可以不用USB网卡了</p><ul><li><p>一些英特尔网卡可以靠AirportItlwm.kext或itlwm.kext驱动WiFi（需要定制USB驱动），推荐使用前者，后者需要搭配HeliPort使用</p><ul><li>Intel网卡完整兼容列表<a class="btn-anzhiyu blue" href="https://openIntelwireless.github.io/itlwm/Compat.html"   title="OpenIntelWireless"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>OpenIntelWireless</span></a></li><li>下载AirportItlwm.kext和itlwm.kext<a class="btn-anzhiyu blue" href="https://github.com/OpenIntelWireless/itlwm"   title="GitHub"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>GitHub</span></a></li><li>下载HeliPort<a class="btn-anzhiyu blue" href="https://github.com/OpenIntelWireless/HeliPort"   title="GitHub"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>GitHub</span></a></li></ul></li><li><p>macOS12 Monterey驱动蓝牙方法</p><ul><li>博通非苹果原装网卡，比如DW1560&#x2F;BCM94352Z：更新Lilu至最新版本，添加<code>BlueToolFixup.kext</code>并禁用或删除<code>BrcmBluetoothInjector.kext</code></li><li>英特尔网卡，比如AX200：更新Lilu至最新版本，添加<code>BlueToolFixup.kext</code>并禁用或删除 <code>IntelBluetoothInjector.kext</code><ul><li>下载BlueToolFixup.kext<a class="btn-anzhiyu blue" href="https://github.com/acidanthera/BrcmPatchRAM/"   title="GitHub"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>GitHub</span></a></li></ul></li></ul></li></ul><h4 id="我的一些网卡使用经验"><a href="#我的一些网卡使用经验" class="headerlink" title="我的一些网卡使用经验"></a>我的一些网卡使用经验</h4><p>从开始折腾黑苹果到现在，我已经使用了2款Intel网卡，2款博通网卡，我将在这里讲一下我使用它们的体验。</p><div class="tabs" id="我的网卡使用经验"><ul class="nav-tabs"><button type="button" class="tab " data-href="我的网卡使用经验-1">DW1560/BCM94352Z</button><button type="button" class="tab " data-href="我的网卡使用经验-2">BCM943602CS</button><button type="button" class="tab " data-href="我的网卡使用经验-3">7265AC</button><button type="button" class="tab  active" data-href="我的网卡使用经验-4">AX200/AX210</button></ul><div class="tab-contents"><div class="tab-item-content" id="我的网卡使用经验-1"><p>分为戴尔版、联想版、普通版等多个版本，一定要在选购前与卖家沟通好，区别貌似是戴尔版&#x2F;联想版需要屏蔽某些针脚；kext中需要添加<code>AirportBrcmFixup.kext</code>，<code>BrcmBluetoothInjector.kext</code>，<code>BrcmFirmwareData.kext</code>，<code>BrcmPatchRAM3.kext</code>（根据系统版本选择<code>BrcmPatchRAM1/2/3.kext</code>）。<br>所有白苹果和蓝牙相关的功能都可以正常使用，网卡的网速较差，蓝牙连接耳机信号很差，Windows下还会偶尔搜不到WiFi，需要在设备管理器中禁用再启用网卡。</p></div><div class="tab-item-content" id="我的网卡使用经验-2"><p>白苹果拆机网卡，需要搭配转接线&#x2F;转接板使用（笔记本很难塞下，塞下可能后盖就无法完全合上了）；三天线，中间的是蓝牙天线，需要买一条额外的天线，笔记本自带的天线连两边的接口以保证WiFi信号的可用性；kext中无需添加任何东西，如果WiFi的连接速率过低或者无法识别到SSID或者国家代码是US，需要添加<code>AirPortBrcmFixup.kext</code>，并添加启动参数<code>brcmfx-country=#a</code>；Windows下信号和网速都很差，蓝牙更是几乎无法使用，而且需要安装驱动。</p></div><div class="tab-item-content" id="我的网卡使用经验-3"><p>添加<code>AirportItlwm.kext</code>，<code>IntelBluetoothInjector.kext</code>，<code>IntelBluetoothFirmware.kext</code>后可以驱动蓝牙和WiFi，macOS下网速较前两个网卡并没有太大提升，但Windows下的稳定性和速度有很大的提升；无法使用隔空投送、无线随航。</p></div><div class="tab-item-content active" id="我的网卡使用经验-4"><p>我的最终选择。macOS Monterey添加<code>AirportItlwm.kext</code>，<code>BlueToolFixup.kext</code>，<code>IntelBluetoothFirmware.kext</code>后可以驱动蓝牙和WiFi，无法使用隔空投送、无线随航，但网速和蓝牙信号非常棒，Windows下的体验也很好；是这里面唯一的WiFi6+蓝牙5.1网卡，而且价格比免驱网卡便宜很多；推荐加10元升级AX210，支持WiFi6e，蓝牙5.2，而且最新版本的<code>AirportItlwm.kext</code>已经支持了AX210。</p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div></div><p>我在更换网卡之前，对手上有对几款网卡进行了测速，下面是记录：</p><table><thead><tr><th></th><th align="center">第1次</th><th align="center">第2次</th><th align="center">第3次</th><th align="center">第4次</th><th align="center">第5次</th><th align="center">上传</th></tr></thead><tbody><tr><td>943602 macos无驱动</td><td align="center">69.07</td><td align="center">67.14</td><td align="center">89.94</td><td align="center">94.14</td><td align="center">76.2</td><td align="center">10</td></tr><tr><td>943602 macos有驱动</td><td align="center">66.7</td><td align="center">53.6</td><td align="center">64.64</td><td align="center">58.93</td><td align="center">59.66</td><td align="center">25</td></tr><tr><td>943602 win10</td><td align="center">9.52</td><td align="center">6.03</td><td align="center">4.97</td><td align="center">4.44</td><td align="center">30.44</td><td align="center">5</td></tr><tr><td>943602 win10 (2.4Ghz)</td><td align="center">55.4</td><td align="center">49.34</td><td align="center">52.43</td><td align="center">52.06</td><td align="center">50.33</td><td align="center">10</td></tr><tr><td>Killer 1535 win10</td><td align="center">88.33</td><td align="center">73.39</td><td align="center">89.57</td><td align="center">142.22</td><td align="center">132.25</td><td align="center">40</td></tr><tr><td>AX200 win10</td><td align="center">153.37</td><td align="center">140.05</td><td align="center">196.63</td><td align="center">139.9</td><td align="center">191.88</td><td align="center">40</td></tr></tbody></table><blockquote><p><strong>需要说明的是：</strong><br>在相同位置，对相同的笔记本开合角度，使用speedtest进行测试；单位：Mbps；路由器：ASUS AC88U；宽带：300M广东电信；因为上传速度浮动较小，因此为5次的平均估测值；943602指BCM943602CS，驱动指<code>AirPortBrcmFixup.kext</code>和启动参数<code>brcmfx-country=#a</code>，我的使用经验是DW1560的信号和在win下的速度和兼容性好于它，但在macOS下的速度略逊于它。</p></blockquote><br/><hr><h2 id="EFI的寻找"><a href="#EFI的寻找" class="headerlink" title="EFI的寻找"></a>EFI的寻找</h2><h3 id="OpenCore"><a href="#OpenCore" class="headerlink" title="OpenCore"></a>OpenCore</h3><p>因为我可以说只用过OC，所以这里只讨论它，而非Clover；推荐大家都使用OC。</p><h4 id="升级OpenCore"><a href="#升级OpenCore" class="headerlink" title="升级OpenCore"></a>升级OpenCore</h4><blockquote><p>如果不更新MacOS，一般不建议更新OC。</p></blockquote><p>更新OC视频教程 <a class="btn-anzhiyu pink" href="https://www.bilibili.com/video/BV13U4y177QV/"   title="Bilibili"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>Bilibili</span></a><br>下载OC <a class="btn-anzhiyu blue" href="https://github.com/acidanthera/OpenCorePkg/releases/"   title="GitHub"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>GitHub</span></a><br>下载OCC <a class="btn-anzhiyu " href="https://mackie100projects.altervista.org/download-opencore-configurator/"   title="mackie100"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>mackie100</span></a></p><ul><li>我使用的配置config.plist的方法是用对应的新版OCC打开旧config.plist文件，更改一个参数然后保存，再改回去然后保存。该方法上面视频的up主不推荐使用。</li><li>然后更改BIOS的启动路径，新建一个路径，指向EFI&#x2F;OC&#x2F;OpenCore.efi（我的电脑虽然老的启动路径也是这个，但是它始终认为该路径没有启动文件，然后会进入硬件自检-关机-硬件自检的死循环）。</li></ul><h3 id="kexts"><a href="#kexts" class="headerlink" title="kexts"></a>kexts</h3><p>kext是仿冒的Apple驱动，用以支持非苹果原装或官方兼容硬件，基本上OC和Clover都能使用。</p><br/><hr><h2 id="OC配置文件编辑器"><a href="#OC配置文件编辑器" class="headerlink" title="OC配置文件编辑器"></a>OC配置文件编辑器</h2><p>OC的配置文件（config.plist）本质上是一串无需编译的代码，因此这些编辑器只是将代码用图形化界面展示，便于查找和更改，本质上在修改里面的值的时候，还是在修改代码中的值。</p><h3 id="所有文本编辑器"><a href="#所有文本编辑器" class="headerlink" title="所有文本编辑器"></a>所有文本编辑器</h3><p>因为OC的配置文件本质上是代码，因此完全可以用文本编辑器修改，只不过使用时需要清楚地知道目标项的名字，才能搜索。使用xml代码格式，项目值前后要加&lt;项目名&gt;和&lt;&#x2F;项目名&gt;。</p><h3 id="OpenCore-Configurator（简称OCC）"><a href="#OpenCore-Configurator（简称OCC）" class="headerlink" title="OpenCore Configurator（简称OCC）"></a>OpenCore Configurator（简称OCC）</h3><p>OC配置文件的官方编辑器，一定要注意OC版本和OCC版本的对应（不是对应版本的版本号相同）。<br>可以用来在macOS中挂载EFI分区。</p><p>下载OCC <a class="btn-anzhiyu " href="https://mackie100projects.altervista.org/download-opencore-configurator/"   title="mackie100"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>mackie100</span></a></p><h3 id="OC-Auxiliary-Tools（简称OCAT）"><a href="#OC-Auxiliary-Tools（简称OCAT）" class="headerlink" title="OC Auxiliary Tools（简称OCAT）"></a>OC Auxiliary Tools（简称OCAT）</h3><p>开源编辑器，支持macOS、Windows、Linux，注意OC版本和OCAT版本的对应<br>目前我还没搞明白如何像OCC一样双击config.plist打开，只能手动拖入config.plist，而且我也不知道如何用它挂载EFI分区。</p><blockquote><p>Windows系统中可以用DiskGenius访问EFI分区，拷贝出config.plist，修改完再复制回去。</p></blockquote><p>下载OCAT <a class="btn-anzhiyu " href="https://github.com/ic005k/QtOpenCoreConfig/releases"   title="GitHub"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>GitHub</span></a></p><h3 id="ProperTree"><a href="#ProperTree" class="headerlink" title="ProperTree"></a>ProperTree</h3><p>跨平台plist编辑器，友人推荐给我的，我还没试过。<br>下载ProperTree <a class="btn-anzhiyu " href="https://github.com/corpnewt/ProperTree/"   title="GitHub"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>GitHub</span></a></p><br/><hr><h2 id="安装macOS"><a href="#安装macOS" class="headerlink" title="安装macOS"></a>安装macOS</h2><h3 id="安装方法"><a href="#安装方法" class="headerlink" title="安装方法"></a>安装方法</h3><div class="tabs" id="黑苹果安装方法"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="黑苹果安装方法-1">全新安装</button><button type="button" class="tab " data-href="黑苹果安装方法-2">恢复版安装</button><button type="button" class="tab " data-href="黑苹果安装方法-3">Cc3.0安装器</button></ul><div class="tab-contents"><div class="tab-item-content active" id="黑苹果安装方法-1"><p>安装教程 <a class="btn-anzhiyu green" href="https://blog.daliansky.net/"   title="黑果小兵的部落阁官网"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>黑果小兵的部落阁官网</span></a><br>最干净的安装方法，不过比较繁琐。</p></div><div class="tab-item-content" id="黑苹果安装方法-2"><p>安装教程 <a class="btn-anzhiyu purple" href="http://k61.org/Win10-macOS-hackintosh-Restore.html/"   title="老吴黑苹果"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>老吴黑苹果</span></a><br>老吴黑苹果其实违反了开源协议，很多OpenCore的插件、驱动是不能出售盈利的。但是不得不说恢复版安装确实方便。</p></div><div class="tab-item-content" id="黑苹果安装方法-3"><p>视频安装教程 <a class="btn-anzhiyu pink" href="https://www.bilibili.com/video/BV1iE41157Vd/"   title="Bilibili"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>Bilibili</span></a><br>安装器由 @嘿我叫聪聪 开发，我认为更适合台式机安装。</p></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div></div><h3 id="使用跑码模式寻找无法进入系统的问题"><a href="#使用跑码模式寻找无法进入系统的问题" class="headerlink" title="使用跑码模式寻找无法进入系统的问题"></a>使用跑码模式寻找无法进入系统的问题</h3><p>在 <code>NVRAM</code> - <code>7C436110-AB2A-4BBB-A880-FE41995C9F82</code> - <code>boot-args</code> 的value处添加<code>-v</code></p><p>使用文本编辑器，则修改成如下面的代码所示：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">key</span>&gt;</span>7C436110-AB2A-4BBB-A880-FE41995C9F82<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dict</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">key</span>&gt;</span>boot-args<span class="tag">&lt;/<span class="name">key</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">string</span>&gt;</span>darkwake=4 -v<span class="tag">&lt;/<span class="name">string</span>&gt;</span></span><br></pre></td></tr></table></figure><p><a href="http://imacos.top/2021/01/19/0154/">OpenCore引导-v各种卡及OC引导常见问题解决方案速查表合集</a><br><a href="https://blog.51cto.com/u_2035505/2488066/">OpenCore配置错误、故障与解决办法</a></p><p>有问题可以在论坛查找或提问 <a class="btn-anzhiyu blue" href="https://bbs.pcbeta.com/index.php?gid=86/"   title="远景论坛"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>远景论坛</span></a></p><h3 id="DVMT"><a href="#DVMT" class="headerlink" title="DVMT"></a>DVMT</h3><p>我的XPS笔电安装好黑苹果之后需要启动DVMT.efi设置一下，否则会卡在苹果logo处</p><br/><hr><h2 id="优化macOS"><a href="#优化macOS" class="headerlink" title="优化macOS"></a>优化macOS</h2><h3 id="升级macOS"><a href="#升级macOS" class="headerlink" title="升级macOS"></a>升级macOS</h3><blockquote><p>在大版本更新前，一定要确认一下你的硬件在下一个大版本中是否支持。之前有出现过网卡在下个大版本中不支持的情况</p></blockquote><p>一般来说，确保你当前使用的OC版本支持最新版macOS，且kext也已经更新，就可以使用系统的OTA更新<br>（如果你之前以输代码等形式关闭了更新，可以在App Store里搜索macOS下载更新）<br>升级时会多次自动重启电脑，确保OC中有Macintosh HD启动项时选择该项启动，一般就可完成更新</p><p><a href="https://sysin.org/blog/macOS/">下载指定版本升级软件（仅macOS可运行）或镜像</a></p><h3 id="和Wi-Fi蓝牙有关功能的bug"><a href="#和Wi-Fi蓝牙有关功能的bug" class="headerlink" title="和Wi-Fi蓝牙有关功能的bug"></a>和Wi-Fi蓝牙有关功能的bug</h3><p>有时候会出现无法使用某些与WiFi和蓝牙有关的功能，比如无法连接iPhone的WiFi热点，无法隔空投送，或无法无线随航。这时退出黑苹果和你的每个苹果设备的iCloud，再登陆同一个iCloud即可解决。<br>目前不知道这个bug出现的原因，大概率因为序列号出现变化导致（更换三码或某个苹果设备换新）</p><h3 id="一些基本的设定"><a href="#一些基本的设定" class="headerlink" title="一些基本的设定"></a>一些基本的设定</h3><ul><li><strong>三码洗白之前不建议登录iCloud！</strong> 因为可能导致封号</li><li>不要开启系统偏好设置-安全性与隐私-文件保险箱</li><li>不要开启查找我的Mac</li><li>（默认开启）关闭系统偏好设置-电池-电池&amp;电源适配器-如果可能，让硬盘进入睡眠&amp;启用电能小憩</li><li>（默认开启）关闭关机&#x2F;重新启动选项下的“再次登录时重新打开窗口”</li></ul><h3 id="三码洗白"><a href="#三码洗白" class="headerlink" title="三码洗白"></a>三码洗白</h3><p>这是Intel CPU变频和使用FaceTime、iMssage的必要前提<br>视频教程 <a class="btn-anzhiyu pink" href="https://www.bilibili.com/video/BV1454y167ML/"   title="Bilibili"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>Bilibili</span></a></p><h3 id="CPU型号显示错误"><a href="#CPU型号显示错误" class="headerlink" title="CPU型号显示错误"></a>CPU型号显示错误</h3><p><a href="http://k61.org/unkown-CPU-fix-hackintosh.html/">解决CPU型号显示错误教程</a><br>如果你的CPU是英特尔正常发售的型号，填写0即可正常识别；如果你的CPU是ES版本或者AMD的，需要填写型号代码；<br>请注意，OC Configurator中应填写十进制数，需要将以上教程中的十六进制数转化为十进制填写，例如i5的推荐代码0x0605应改为1541</p><h3 id="CPU变频和频率显示"><a href="#CPU变频和频率显示" class="headerlink" title="CPU变频和频率显示"></a>CPU变频和频率显示</h3><p><a href="https://www.136.la/jingpin/show-36559.html?ivk_sa=1025883j/">CPUFriend.kext的使用方法</a></p><h3 id="系统macOS"><a href="#系统macOS" class="headerlink" title="系统macOS"></a>系统macOS</h3><ul><li>这里将使用OTA升级macOS。因为这样可以最好地保存你的数据和洗白的三码等设置。<br>首先确保你已经升级到支持最新版本macOS的OC，并更新了kext。这里可以参考其他人的EFI。保证你在更新这些以后可以正常使用，然后便可像白苹果一样正常OTA升级。不过这里仍然推荐使用Paragon Hard Disk Manager进行备份，一旦出现问题，可以恢复至更新前的系统</li></ul><h3 id="仍然存在的一些小bug"><a href="#仍然存在的一些小bug" class="headerlink" title="仍然存在的一些小bug"></a>仍然存在的一些小bug</h3><blockquote><p>这些是我的XPS9360出现的小bug，你的设备不一定会出现，但解决方法可作为参考</p></blockquote><ol><li>合盖睡眠后无法唤醒，风扇在转，但屏幕一直不亮    -解决方法：制作一个<a href="https://ubuntu.com/download/desktop">Ubuntu</a>的U盘启动盘，在BIOS内优先启动U盘，选择体验Ubuntu，过一段时间后关机，再启动macOS即可解决</li><li>OC启动win10可能进入恢复模式    -解决方法：开机显示DELL logo时按F12，选Windows Boot Manager启动进入win10；不要用OC启动win10</li><li>macOS关机后自动重启    -解决方法：长按开机键关机。如果从自动重启里进入win10，可能导致CPU锁频0.4Ghz</li><li>摄像头无法使用    -解决方法：添加<a href="https://github.com/hoanX/xps13-9360-Hackintosh/tree/master/kexts/UVC2FaceTimeHD.kext">UVC2FaceTimeHD.kext</a>或<a href="https://github.com/hoanX/xps13-9360-Hackintosh/tree/master/kexts/FaceTimeHD.kext">FaceTimeHD.kext</a>到EFI&#x2F;OC&#x2F;kext目录下</li><li>耳机无法使用    -解决方法：使用<a href="https://github.com/hackintosh-stuff/ComboJack">ComboJack</a></li></ol><br/><hr><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="https://blog.daliansky.net/">黑果小兵的部落格</a></li><li><a href="https://win2mac.top/">老吴黑苹果工作室</a></li><li><a href="https://github.com/theQuert/XPS-9360-macOS/">@theQuert</a></li><li><a href="https://github.com/hoanX/xps13-9360-Hackintosh/">@hoanX</a></li></ul><br/><hr><h2 id="尾记"><a href="#尾记" class="headerlink" title="尾记"></a>尾记</h2><p>（写于2025.08.16）没想到最终干掉黑苹果的，既不是macOS停止更新，也不是英特尔能效被Apple Silicon吊打，而是国补后三千的Mac mini M4+16G内存，以及二手市场两千块的MacBook Air M1+8G内存，它们让折腾黑苹果显得毫无性价比。事实上，黑苹果的故事也该结束了：随着 macOS Tahoe 26 成为 Intel 平台 Mac 最后一个支持的版本，Apple 将正式结束对 Intel Mac 的支持，黑苹果也将不再更新。未来也许真的是 ARM 平台计算机的天下吧。</p>]]></content>
      
      
      <categories>
          
          <category> Mac </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 折腾 </tag>
            
            <tag> 捡垃圾 </tag>
            
            <tag> Hackintosh </tag>
            
            <tag> 破解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iOS使用AltStore侧载教程</title>
      <link href="/iOS-Sideloading-AltStore/"/>
      <url>/iOS-Sideloading-AltStore/</url>
      
        <content type="html"><![CDATA[<h2 id="AltStore有什么用？"><a href="#AltStore有什么用？" class="headerlink" title="AltStore有什么用？"></a>AltStore有什么用？</h2><p>想要使用一些违反苹果规定的iOS应用，只有通过以下几种方法：<br>​伪装上架AppStore（如各种免费看电影电视剧软件）&#x2F;上架Testflight&#x2F;上架越狱商店Cydia&#x2F;使用TrollStore等软件侧载<br>以及，本文要介绍的AltStore<br>（奥，苹果对高贵的欧盟用户在iOS17.4开放侧载了）</p><p>AltStore还可以安装一些魔改的App，可以实现原App充会员才能解锁的功能，或去除某些限制</p><br/><h2 id="需要的工具-原料"><a href="#需要的工具-原料" class="headerlink" title="需要的工具&#x2F;原料"></a>需要的工具&#x2F;原料</h2><ul><li>一台运行iOS系统的设备（iPhone&#x2F;iPad&#x2F;iPod Touch均可）</li><li>一台可以上网的电脑（Windows10或11，MacOS 10.14.4以上）</li><li>一条数据线</li></ul><br/><h2 id="安装AltServer"><a href="#安装AltServer" class="headerlink" title="安装AltServer"></a>安装AltServer</h2><div class="tabs" id="安装altserver"><ul class="nav-tabs"><button type="button" class="tab  active" data-href="安装altserver-1">Windows10/11</button><button type="button" class="tab " data-href="安装altserver-2">MacOS</button></ul><div class="tab-contents"><div class="tab-item-content active" id="安装altserver-1"><ol><li><p>从AltServer官网下载AltServer Windows</p><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://altstore.io/#Downloads"> <div class="tag-link-tips">引用站外地址</div> <div class="tag-link-bottom">     <div class="tag-link-left" style="">       <i class="anzhiyufont anzhiyu-icon-link" style=""></i>     </div>     <div class="tag-link-right">         <div class="tag-link-title">下载AltServer Windows</div>         <div class="tag-link-sitename"> AltServer官网</div>     </div>     <i class="anzhiyufont anzhiyu-icon-angle-right"></i> </div> </a></div></li><li><p>打开setup.exe安装Altstore</p></li><li><p>点击Next</p><img src="/iOS-Sideloading-AltStore/iOS-Sideloading-AltStore_1.jpg" class="" title="点击Next"></li><li><p>点Browse选择安装目录，最好全英文，然后点击Next直到安装完成</p><img src="/iOS-Sideloading-AltStore/iOS-Sideloading-AltStore_2.jpg" class="" title="选择安装目录"></li><li><p>打开之前下载的文件，打开AltServer.exe</p><img src="/iOS-Sideloading-AltStore/iOS-Sideloading-AltStore_3.jpg" class="" title="打开AltServer.exe"></li><li><p>提示要你安装最新版本的iCloud ，选择安装iCloud<br>安装完成后，再次打开AltServer.exe，程序打开后不会出弹框，而是在下方任务栏出现一个灰暗的方形图标</p><img src="/iOS-Sideloading-AltStore/iOS-Sideloading-AltStore_4.jpg" class="" title="灰暗的方形图标">左键单击它，选择Install AltStore ，如果右侧没出现你的iOS设备名称，则是它没连上电脑，请用数据线连接电脑，信任电脑后再次点击 install Altstore ，应该会出现你的iOS设备<img src="/iOS-Sideloading-AltStore/iOS-Sideloading-AltStore_5.jpg" class="" title="选择Install AltStore"></li><li><p>之后会出现认证Apple ID的选项，输入你的Apple ID然后认证</p><img src="/iOS-Sideloading-AltStore/iOS-Sideloading-AltStore_6.jpg" class="" title="认证Apple ID"></li><li><p>稍等片刻应该会提示安装完成，但是暂时不要断开数据线，在手机上打开Altstore app；首次打开的时候会提示非信任软件，选择设置 - 通用 - 描述文件与设备管理 - 点击开发者APP中你的Apple ID - 点击信任。然后AltStore就能启动了，在Settings里登陆你刚刚输入的Apple ID</p></li></ol></div><div class="tab-item-content" id="安装altserver-2"><ol><li><p>从AltStore官网下载AltServer macOS</p><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://altstore.io/#Downloads"> <div class="tag-link-tips">引用站外地址</div> <div class="tag-link-bottom">     <div class="tag-link-left" style="">       <i class="anzhiyufont anzhiyu-icon-link" style=""></i>     </div>     <div class="tag-link-right">         <div class="tag-link-title">下载AltServer macOS</div>         <div class="tag-link-sitename"> AltServer官网</div>     </div>     <i class="anzhiyufont anzhiyu-icon-angle-right"></i> </div> </a></div></li><li><p>双击解压刚刚下载的altserver.zip，获得AltServer</p><img src="/iOS-Sideloading-AltStore/iOS-Sideloading-AltStore_7.jpg" class="" title="解压获得AltServer"></li><li><p>将AltServer拖入应用程序中，完成安装</p><img src="/iOS-Sideloading-AltStore/iOS-Sideloading-AltStore_8.png" class="" title="安装AltServer"></li><li><p>从启动台打开AltServer，在弹出的菜单中选择打开</p><img src="/iOS-Sideloading-AltStore/iOS-Sideloading-AltStore_9.png" class="" title="启动AltServer"></li><li><p>用数据线连接电脑和iOS设备，点击AltServer状态栏图标，选择Install AltStore，选择你的iOS设备</p><img src="/iOS-Sideloading-AltStore/iOS-Sideloading-AltStore_10.png" class="" title="安装AltStore"></li><li><p>在弹出的对话框内输入你的Apple ID和密码，然后点击Install</p><img src="/iOS-Sideloading-AltStore/iOS-Sideloading-AltStore_11.jpg" class="" title="输入Apple ID和密码"></li><li><p>启动系统自带的邮件软件，在弹出的对话框中选择Install Plug-in，输入Mac的解锁密码</p></li><li><p>在出现Mail Plug-in Installed后，不要点击OK。打开邮件，选择左上角邮件 - 偏好设置 - 通用 - 管理插件，在AltPlugin.mailbundle上打钩，选择允许访问，然后点击应用并重启邮件。邮件重启后点击Mail Plug-in Installed窗口的OK<br>​<img src="/iOS-Sideloading-AltStore/iOS-Sideloading-AltStore_12.png" class="" title="安装插件"></p></li><li><p>在弹出的窗口中选择Continue，左上角会弹出正在安装，静待一会儿，会弹出安装成功。此时你的iOS设备中就能看见名为AltStore的App了</p><img src="/iOS-Sideloading-AltStore/iOS-Sideloading-AltStore_13.png" class="" title="安装成功"></li><li><p>打开iOS设备，选择设置 - 通用 - 描述文件与设备管理 - 点击开发者APP中你的Apple ID - 点击信任。然后AltStore就能启动了，在Settings里登陆你刚刚输入的Apple ID</p></li></ol></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="anzhiyufont anzhiyu-icon-arrow-up"></i></button></div></div><br/><h2 id="用AltStore安装App"><a href="#用AltStore安装App" class="headerlink" title="用AltStore安装App"></a>用AltStore安装App</h2><ol><li>在你的iOS设备中选择设置 - Safari浏览器 - 下载项 - 我的iPhone&#x2F;iPad</li><li>启动AltServer（见“刷新AltStore和用其安装的App“）</li><li>下载可以由AltStore安装的ipa格式安装包，无法安装仅能由巨魔或越狱安装的安装包！</li><li>打开AltStore，点击My Apps，点击左上角加号，选中你下载的ipa文件，待进度条走到头，即安装完成</li></ol><br/><h2 id="刷新AltStore和用其安装的App"><a href="#刷新AltStore和用其安装的App" class="headerlink" title="刷新AltStore和用其安装的App"></a>刷新AltStore和用其安装的App</h2><blockquote><p>因为苹果对开发者App的限制，自签应用只能使用<code>7天</code>，<code>7天</code>后将无法打开；所以需要使用AltServer为AltStore刷新使用期限。</p></blockquote><h3 id="MacOS刷新方法"><a href="#MacOS刷新方法" class="headerlink" title="MacOS刷新方法"></a>MacOS刷新方法</h3><ol><li>启动电脑上的AltServer和邮件</li><li>打开访达，选中你的iOS设备，钩选接入Wi-Fi时显示此iPhone&#x2F;iPad<img src="/iOS-Sideloading-AltStore/iOS-Sideloading-AltStore_14.jpg" class="" title="接入Wi-Fi时显示此iPhone"></li><li>让你的iOS设备与电脑在同一局域网下，打开AltStore，点击My Apps，点击Refresh All，静待一会儿即可刷新App的使用期限</li></ol><h3 id="Windows10-11刷新方法"><a href="#Windows10-11刷新方法" class="headerlink" title="Windows10&#x2F;11刷新方法"></a>Windows10&#x2F;11刷新方法</h3><ol><li>用数据线连接iOS设备和电脑</li><li>确保AltServer在电脑后台运行</li><li>让你的iOS设备与电脑在同一局域网下，打开AltStore，点击My Apps，点击Refresh All，静待一会儿即可刷新App的使用期限</li></ol><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p>AltStore的官方文档<a class="btn-anzhiyu " href="https://faq.altstore.io/"   title="AltStore"><i class="anzhiyufont anzhiyu-icon-circle-arrow-right"></i><span>AltStore</span></a></p>]]></content>
      
      
      <categories>
          
          <category> iOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 破解 </tag>
            
            <tag> iOS </tag>
            
            <tag> Sideload </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>选购建议：固态硬盘(SSD)</title>
      <link href="/Solid-state-Drive(SSD)/"/>
      <url>/Solid-state-Drive(SSD)/</url>
      
        <content type="html"><![CDATA[<ul><li><strong>如今，所有新生产的电脑和游戏机都配备了SSD，而它们中的绝大多数抛弃了传统的机械硬盘HDD，仅使用SSD，甚至没有HDD槽位。然而SSD价格昂贵且容量小，很多时候刚买不久的电脑，硬盘就被动辄几十上百GB的游戏填满，这时便需要加装一块SSD。那么如何选择SSD，不同价位的SSD之间有什么差别呢？这篇文章将讲清楚并给与购买建议</strong></li></ul><h2 id="写在前面"><a href="#写在前面" class="headerlink" title="写在前面"></a>写在前面</h2><blockquote><p>请在购买SSD之前，询问你的设备生产商或销售商，是否还有空余的SSD插槽。</p><blockquote><p>如果有，请问清楚是何种插槽，是M.2 NVME，还是M.2 SATA，还是SATA 2.5寸；如果是M.2 NVME，清问清楚它的速率，是PCIe 4.0x4（最高可达约4500-8000MB&#x2F;s），还是PCIe 3.0x4（最高可达约3500MB&#x2F;s），还是PCIe3.0x2（最高可达约1700MB&#x2F;s）。<br>如果没有，你就需要考虑是否要将唯一的SSD换掉，安装更大容量的SSD并重装系统。我推荐再购买一个硬盘盒安装换下来的硬盘，使其成为一个移动硬盘。</p><blockquote><p>特别说明：SATA速率约550MB&#x2F;s，而且M.2 SATA SSD并不比NVME硬盘便宜，除非有特殊用途，否则不推荐</p></blockquote></blockquote></blockquote><br/><hr><br/><h2 id="SSD的组成"><a href="#SSD的组成" class="headerlink" title="SSD的组成"></a>SSD的组成</h2><img src="/Solid-state-Drive(SSD)/Solid-state-Drive(SSD)_1.jpg" class="" title="M.2 SSD的组成"><ul><li>消费者需要关心的SSD结构主要是：主控、闪存颗粒、缓存（以及外壳和散热结构）</li></ul><h3 id="SSD的主控"><a href="#SSD的主控" class="headerlink" title="SSD的主控"></a>SSD的主控</h3><ul><li>主控可以说是SSD的性能的一大重要因素，而且是SSD的最大发热源，一般是SSD的PCB上最大的芯片，通常是正方形。常见的主控品牌有慧荣SMI、群联Phison、联芸MaxIO、马牌Marvell、以及三星、西数、长江等颗粒生产商自产的主控。绝大多数SSD的主控性能都十分相近，所以只需记住几个特别的即可：西数SSD的主控往往在连续写入时性能优异，sn750的连续写入甚至能保证几乎不掉速；慧荣的主控带XT的比不带的性能差；金属封装的主控通常性能更强。</li></ul><h3 id="SSD的闪存颗粒"><a href="#SSD的闪存颗粒" class="headerlink" title="SSD的闪存颗粒"></a>SSD的闪存颗粒</h3><ul><li><strong>一句话总结：有钱有明确需求买MLC，其他的买TLC</strong></li><li>SSD的PCB上远离接口的芯片，可能有一颗，也可能有多颗，甚至可能PCB背面也有。</li><li>目前市场上的SSD有很多种颗粒：SLC、MLC、TLC、QLC（这里不推荐且不讨论eMLC和eTLC）</li><li>SLC已经绝迹；MLC大都是服务器用了好几年的硬盘，通过清零翻新让你以为是全新的，实际上随时可能暴毙；TLC是目前最为常用的颗粒；QLC顺序写入性能不如机械硬盘，寿命比TLC短很多，但是因为成本低，目前有取代TLC的趋势。</li><li>更深次解释它们的区别：其实是利用芯片的堆栈技术，使一个存储单元可以存更多的数据；SLC一个存储单元只能存1bit数据，MLC可以存2bit，TLC是3bit，QLC是4bit。我喜欢把它们比喻成抽屉，把数据比喻成要放进抽屉的物品，堆栈技术就像是在抽屉里用小格子分开放置的物品；这样的话，SLC就是没有小格子去分，TLC是一个抽屉里3个小格子；然后放置物品的时候，需要拉开抽屉，再找格子，自然理论上越多的格子就需要越长的时间放置物品，同时因为拉开一个抽屉次数的增加，对抽屉的磨损也加大，但是增加格子比增加抽屉的成本要低很多，也正因为堆栈技术，SSD才能普及，而不是专业用户上千块买的64G的SLC“加速盘”；先进的主控可以在TLC存储少量数据时远远超过SLC的速度，即SLC Cashe技术，也就是每次放置数据的时候只放在存储单元的第一个bit位置，待存储结束后再依次读取刚刚存储的数据，把它们填满每个存储单元的bit，而也正是这个技术，加速了TLC的磨损。SLC Cashe的大小，有时候会影响使用体验，比如盘对盘拷游戏电影的时候，一般SLC Cashe会有一个大小上限，超过以后就掉速，但是也有全盘SLC Cashe策略，虽然对硬盘的磨损更为严重，但体验更好。也正因为有SLC Cashe这个因素影响使用体验，<strong>我们建议不要把SSD装的太满，尽量留出容量的10%，以免影响性能。</strong></li></ul><h3 id="SSD的缓存"><a href="#SSD的缓存" class="headerlink" title="SSD的缓存"></a>SSD的缓存</h3><ul><li>SSD的缓存其实是一颗内存颗粒，紧挨着主控的长方形小芯片，大小比颗粒略小。一般由三星、SK海力士等生产，无需纠结它是DDR3、DDR4还是LPDDR4，对于SSD而言主要是有缓存和无缓存的差别，不同缓存带来的性能差异可以忽略。</li><li>有缓存的SSD写入小文件的速度通常是没有缓存的4~5倍，约为130M&#x2F;s。而操作系统最常写入的文件正是这种小文件，因此<em><strong>有缓存的SSD更适合作为系统盘</strong></em></li></ul><h3 id="SSD的外壳和散热结构"><a href="#SSD的外壳和散热结构" class="headerlink" title="SSD的外壳和散热结构"></a>SSD的外壳和散热结构</h3><ul><li>这里的外壳仅指SATA 2.5寸SSD的外壳，非常简单：金属的有助于散热且成本更高，塑料的也不是不能用，省钱嘛</li><li>这里的散热结构仅指M.2 SSD。台式机主M.2槽位通常自带散热片，如果没有或者是副槽位，则需要淘宝买一块带硅胶导热贴的散热片给SSD散热。如果是笔记本，一般没有空间安装散热片，则尽量选择低发热的SSD，或者尽量不要选择高端SSD</li></ul><br/><hr><br/><h2 id="闪存颗粒的原厂片-白片-黑片等区别"><a href="#闪存颗粒的原厂片-白片-黑片等区别" class="headerlink" title="闪存颗粒的原厂片 白片 黑片等区别"></a>闪存颗粒的原厂片 白片 黑片等区别</h2><blockquote><p>这里的叫法是民间的叫法，SSD厂商不会这么叫，对他们来说只是合格和不合格的区别。</p></blockquote><ul><li><strong>原厂片（正片）：</strong>由镁光，三星，东芝等颗粒厂商生产并通过自家检测的颗粒。这类颗粒会被原厂封装并且激光打标，然后出售给其他厂商，或用于自有品牌（如铠侠、英睿达、西数，闪迪等）的存储产品生产。买这些牌子的SSD，颗粒性能和质量不用担心，因为原厂的检验非常严格。</li><li><strong>白片（第三方封装颗粒）：</strong>一般是SSD厂商从颗粒厂商处直接购买晶圆，然后自己检测，封装并且打标。因为检测规范通常比原厂宽松，所以性能比原厂片稍差，价格可能便宜一些（这里用“可能”，是因为原厂自己生产颗粒自己组装成SSD，没有中间商赚差价，所以像西数的中端产品，性能略强于一些白片SSD，价格却和它们差不多）。</li><li><strong>大S片（Spec Tek封装的镁光的降级片）：</strong>即原厂检测淘汰的芯片，会根据进一步检测区分成适合做低端SSD的和U盘SD卡的。目前用大S比较多的品牌有光威，阿斯加特，威刚等。</li><li><strong>拆机片（各类回收颗粒）：</strong>SSD的组装其实非常简单，一些小厂甚至个人就可以组装了。他们多采用坏掉的SSD上拆下来的还能用的颗粒，这就导致寿命和性能无法预知。不推荐购买</li><li><strong>黑片（各类不合格片）：</strong>不推荐购买</li></ul><br/><h2 id="SSD的性能"><a href="#SSD的性能" class="headerlink" title="SSD的性能"></a>SSD的性能</h2><ul><li><p>请注意，SSD商品描述中的写入&#x2F;读取速率，是在跑分软件中获得的最高速率。如今的主控可以保证在写入5GB~50GB数据时以该速率完成，在写入完成后再对数据整理；若该次写入超过厂商对主控设置的范围，则速度将大幅下滑，俗称掉速，因为主控需要一边写入一边整理数据。此时的速度通常是闪存颗粒的速度。因此SSD商品描述中的数据不应作为该SSD的性能与其他产品对比。</p></li><li><p>通常情况下，颗粒数越多，性能越强（但只能在同型号不同容量里对比）；一般1T版本性能最强，2T稍逊，500G更逊，256G和128G不推荐购买。</p></li><li><p>容量方面，<strong>如果你不知道自己需要多大的容量，我一般推荐1T，因为这个容量的性价比是最高的，且足够容纳未来一段时间的数据，还能留出足够的SLC Cashe。</strong>标称容量会经过1000-&gt;1024的转换，实际在电脑中显示的容量会小一些，比如1T一般显示931GB，500G一般显示466GB。如果标称960G或480G，则实际更小。</p></li></ul><blockquote><p>一些特殊情况：</p><ol><li>部分低端SSD在写入大量数据时会经历2次掉速，而第二次掉速将掉到不足100MB&#x2F;s，即速度低于传统的机械硬盘；</li><li>一些硬盘几乎不会掉速，比如三星970Pro、西部数据sn750；</li><li>目前有些主控的性能非常优秀，一边写入一边整理数据也不会在速度上有明显的损失，或者损失较少，比如西数sn750的主控；</li><li>铠侠KIOXIA原名东芝</li></ol></blockquote><br/><h2 id="SSD的保修"><a href="#SSD的保修" class="headerlink" title="SSD的保修"></a>SSD的保修</h2><ul><li>保修一般以TBW和购买时间计算，TBW可理解为写入硬盘的数据量，例如300TBW是向硬盘内写入超过300TB的数据后不再享有保修。TBW的值不代表实际寿命，仅供参考，通常TBW的顺序从大到小为SLC&gt;MLC&gt;TLC&gt;QLC。</li></ul><blockquote><p>一些特殊情况：</p><ol><li>西部数据无法个人送保，只推荐在京东自营购买；闪迪是西部数据的换皮（虽然包装不同，但是实际上是完全相同的产品），目前支持个人送保；</li><li>三星970Pro和860Pro是目前仅剩的在售全新MLC，想要买传家宝的人可以考虑一下</li></ol></blockquote><h3 id="SSD的寿命"><a href="#SSD的寿命" class="headerlink" title="SSD的寿命"></a>SSD的寿命</h3><p>NAND闪存的原理和充电电池有点类似，闪存最小的单元cell就像一个小电池（小电容），写入数据就是往里面充电，读取数据就是测量电压，然后将电压值翻译为电脑能读懂的0或1，擦写一次就相当于电池完整放电一次，而放电次数多了电池的续航能力会下降，但比较难彻底挂掉。</p><p>而颗粒厂商（非SSD厂商）所说的寿命是：在这个擦写次数内，写入的数据能在常温（0~70℃）下断电后保持一段时间（即这个充电次数内，充电电池可以在常温下充满电后续航一段时间）</p><p>CSDN上有人对TLC固态硬盘进行了暴力测试，对16G的SSD写入了170506GB数据（擦写11521次），只是出现了一些错误和蓝屏，SSD本身仍然可以使用。<a href="https://blog.csdn.net/lee1hong/article/details/113482640">点击查看</a></p><p>因此可以得出：<strong>SSD厂商标注寿命 &lt; 颗粒厂商标注寿命 &lt;&lt; 颗粒实际寿命</strong></p><br/><hr><br/><h2 id="一些其他问题"><a href="#一些其他问题" class="headerlink" title="一些其他问题"></a>一些其他问题</h2><h3 id="为什么不要买海康威视的硬盘？"><a href="#为什么不要买海康威视的硬盘？" class="headerlink" title="为什么不要买海康威视的硬盘？"></a>为什么不要买海康威视的硬盘？</h3><p><del>以次充好，都是贴牌货比别人差价格还贵；不守信用，号称的10年质保估计也是儿戏</del><br><a href="https://www.bilibili.com/video/BV1bE411K7PA">打着爱国的旗号疯狂敛财，有史以来最缺德的硬件厂商</a><br><a href="https://www.bilibili.com/video/BV1Sa4y1v7UF">不出一周，他们全忘了</a></p><br/><h3 id="为什么不要买西部数据SN550？"><a href="#为什么不要买西部数据SN550？" class="headerlink" title="为什么不要买西部数据SN550？"></a>为什么不要买西部数据SN550？</h3><p><a href="https://www.bilibili.com/video/BV18P4y1s7Rt">西部数据SN550，偷换颗粒性能爆降</a><br><a href="https://www.bilibili.com/video/BV1eA411A7Z1">西数SN550偷梁换柱！新版本缓外写入直接砍半！</a></p><p>作为一个SN550的用户，我在更换了台式机主板后发现，SN550有时候开机掉盘，查询后才得知原因貌似是SN550启动较慢，BIOS启动时没有发现它。解决方法是关闭Windows的快速启动，或在主板BIOS中添加启动等待时间。加上西部数据的冷数据问题，我认为SN550不适合作为副盘，又因为没有缓存，也不适合作为系统盘，因此不再推荐</p><br/><h3 id="为什么不要买铠侠RD20？"><a href="#为什么不要买铠侠RD20？" class="headerlink" title="为什么不要买铠侠RD20？"></a>为什么不要买铠侠RD20？</h3><p>铠侠RD20 500G使用的颗粒型号为TH58LJT0T24BS8C，是一款96层3D TLC颗粒，单颗128G容量，正反面各4颗，却组成了512G容量。经过测试发现RD20的颗粒有大量坏块，甚至远远超过ES颗粒，因此铠侠直接屏蔽一半容量，并且将颗粒的通道填满主控的通道（类似Raid），使其拥有不错的速度。不过按照其坏块数量来看，这连黑片都不如，就是电子垃圾。</p><br/><h3 id="群联主控清零工具泄漏事件"><a href="#群联主控清零工具泄漏事件" class="headerlink" title="*群联主控清零工具泄漏事件"></a>*群联主控清零工具泄漏事件</h3><p>2022年1月底，技嘉在官网上架了自家硬盘的清零工具，目前可确认的是群联PS5016-E16主控的所有SSD均可使用该工具包括清除写入读取量、通电时间和次数在内的健康数据，即矿盘清零后可伪装成充新SSD出售，而且该工具貌似可以用于群联其他主控的硬盘，包括凯侠RC10在内的群联定制主控。</p><p>目前确认的波及型号：技嘉Aorus，希捷酷玩520，微星M470，威刚S50，影驰名人堂HOF PRO20，海盗船MP600，科赋 ECT455，爱国者 VP4100，PNY CS4040，十佺 Z440，宇瞻AS2280Q4，胜创PX4480，紫光P400等等。网友称西部数据SN750SE、凯侠RC10也可用其清零。</p><p>总之不要购买使用群联主控的二手SSD，或者说就不要买二手SSD。购买时最好选择京东自营、品牌旗舰店。</p><p><a href="https://download.gigabyte.com/FileList/Utility/ssd_utility_firmware_update_tool_EGFM13.2.zip">清零工具下载链接（技嘉官网，已失效）</a> | <a href="https://www.bilibili.com/video/BV1AL4y147h9">爆料者@肥宅快乐200斤 B站视频</a> </p><p><a href="https://cloud.189.cn/t/YfiyIfQvA7ja">清零工具下载链接</a> 访问码：3upn 【工具仅供尝鲜，禁止出售清零后的SSD！】</p><img src="/Solid-state-Drive(SSD)/Solid-state-Drive(SSD)_2.jpg" class="" title="爆料者@肥宅快乐200斤 B站视频">]]></content>
      
      
      <categories>
          
          <category> 选购建议 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> NAS </tag>
            
            <tag> 路由 </tag>
            
            <tag> 硬盘 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
